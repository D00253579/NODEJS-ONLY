{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST } from \"../../config/global_constants\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUserLogin = () => {\n      let emailIsValid = false;\n      let passwordIsValid = false;\n      let canLogin = false;\n      let email = this.state.email;\n      let password = this.state.password;\n\n      if (email.trim() && password.trim()) {\n        this.state.users.forEach(user => {\n          if (user.email === email) {\n            // email is found within database\n            console.log(\"Email found within users collection\");\n            emailIsValid = true;\n\n            if (user.password === password) {\n              // password matches\n              console.log(\"Password matches\");\n              passwordIsValid = true;\n            } else {\n              //TODO Display message to user saying their password is wrong\n              console.log(\"Password does not match\");\n            }\n          }\n        });\n\n        if (emailIsValid && passwordIsValid) {\n          canLogin = true;\n        }\n      } else {\n        if (!email.trim()) {\n          console.log(\"email field is empty\");\n        }\n\n        if (!password.trim()) {\n          console.log(\"pass word field is empty\");\n        }\n      }\n\n      return canLogin;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.validateUserLogin());\n\n      if (this.validateUserLogin() === true) {\n        //if this returns true, user details passed validation, login user\n        axios.post(\"\".concat(SERVER_HOST, \"/users/Login/Login/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(res.data.errorMessage);\n            } else // user successfully logged in\n              {\n                if (res.data.email === \"admin@admin.com\") {\n                  res.data.accessLevel = ACCESS_LEVEL_ADMIN;\n                }\n\n                console.log(\"User logged in\");\n                sessionStorage.name = res.data.name;\n                sessionStorage.accessLevel = res.data.accessLevel;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Login failed\");\n          }\n        });\n      } else {\n        console.log(\"details incorrect\");\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          }); //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: \"login-form\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Login\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory`\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"RETURN\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_GUEST","SERVER_HOST","login","constructor","props","handleChange","e","setState","target","name","value","validateUserLogin","emailIsValid","passwordIsValid","canLogin","email","state","password","trim","users","forEach","user","console","log","handleSubmit","preventDefault","post","then","res","data","errorMessage","accessLevel","sessionStorage","isLoggedIn","errors","componentDidMount","get","render"],"mappings":";AAAC,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACD,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,EAAgDC,WAAhD,QAAkE,+BAAlE;AAGA,eAAe,MAAMC,KAAN,SAAoBR,SAApB,CACf;AACIS,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAmCAC,YAnCA,GAmCgBC,CAAD,IACf;AACI,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KAtCD;;AAAA,SAwCAC,iBAxCA,GAwCoB,MAAK;AAErB,UAAIC,YAAY,GAAG,KAAnB;AACA,UAAIC,eAAe,GAAG,KAAtB;AACA,UAAIC,QAAQ,GAAG,KAAf;AACA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,UAAIE,QAAQ,GAAE,KAAKD,KAAL,CAAWC,QAAzB;;AAGA,UAAGF,KAAK,CAACG,IAAN,MAAgBD,QAAQ,CAACC,IAAT,EAAnB,EAAmC;AAC/B,aAAKF,KAAL,CAAWG,KAAX,CAAiBC,OAAjB,CAAyBC,IAAI,IAAI;AAC7B,cAAGA,IAAI,CAACN,KAAL,KAAeA,KAAlB,EAAyB;AAAE;AACvBO,YAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAX,YAAAA,YAAY,GAAG,IAAf;;AACA,gBAAGS,IAAI,CAACJ,QAAL,KAAkBA,QAArB,EAA+B;AAAE;AAC7BK,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAV,cAAAA,eAAe,GAAG,IAAlB;AACH,aAHD,MAGO;AACH;AACAS,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ;AACJ,SAZD;;AAaA,YAAGX,YAAY,IAAIC,eAAnB,EAAoC;AAChCC,UAAAA,QAAQ,GAAG,IAAX;AACH;AACJ,OAjBD,MAiBO;AACH,YAAG,CAACC,KAAK,CAACG,IAAN,EAAJ,EAAkB;AACdI,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AACD,YAAG,CAACN,QAAQ,CAACC,IAAT,EAAJ,EAAqB;AACjBI,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;AACJ;;AAGD,aAAOT,QAAP;AACH,KA7ED;;AAAA,SAgFAU,YAhFA,GAgFgBlB,CAAD,IACf;AACIA,MAAAA,CAAC,CAACmB,cAAF;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,iBAAL,EAAZ;;AACA,UAAG,KAAKA,iBAAL,OAA6B,IAAhC,EAAsC;AAAE;AACpCd,QAAAA,KAAK,CAAC6B,IAAN,WAAczB,WAAd,gCAA+C,KAAKe,KAAL,CAAWD,KAA1D,cAAmE,KAAKC,KAAL,CAAWC,QAA9E,GACKU,IADL,CACUC,GAAG,IACT;AACI,cAAGA,GAAG,CAACC,IAAP,EACA;AACI,gBAAID,GAAG,CAACC,IAAJ,CAASC,YAAb,EACA;AACIR,cAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAJ,CAASC,YAArB;AAEH,aAJD,MAKK;AACL;AACI,oBAAIF,GAAG,CAACC,IAAJ,CAASd,KAAT,KAAiB,iBAArB,EAAuC;AACnCa,kBAAAA,GAAG,CAACC,IAAJ,CAASE,WAAT,GAAqBhC,kBAArB;AACH;;AACDuB,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAS,gBAAAA,cAAc,CAACvB,IAAf,GAAoBmB,GAAG,CAACC,IAAJ,CAASpB,IAA7B;AACAuB,gBAAAA,cAAc,CAACD,WAAf,GAA2BH,GAAG,CAACC,IAAJ,CAASE,WAApC;AAEA,qBAAKxB,QAAL,CAAc;AAAC0B,kBAAAA,UAAU,EAAC;AAAZ,iBAAd;AACH;AACJ,WAlBD,MAoBA;AACIX,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,SA1BL;AA2BH,OA5BD,MA4BO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAEJ,KApHD;;AAGI,SAAKP,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAC,EADG;AAETE,MAAAA,QAAQ,EAAC,EAFA;AAGTgB,MAAAA,UAAU,EAAC,KAHF;AAITd,MAAAA,KAAK,EAAE,EAJE;AAKTe,MAAAA,MAAM,EAAE;AAAE;AACNnB,QAAAA,KAAK,EAAE,EADH;AAEJE,QAAAA,QAAQ,EAAE;AAFN;AALC,KAAb;AAUH;;AACDkB,EAAAA,iBAAiB,GAAG;AAChBtC,IAAAA,KAAK,CAACuC,GAAN,WAAanC,WAAb,aACK0B,IADL,CACUC,GAAG,IACT;AACI,UAAGA,GAAG,CAACC,IAAP,EACA;AACI,YAAGD,GAAG,CAACC,IAAJ,CAASC,YAAZ,EAA0B;AACtBR,UAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAJ,CAASC,YAArB;AACH,SAFD,MAEO;AACHR,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,eAAKhB,QAAL,CAAc;AAACY,YAAAA,KAAK,EAAES,GAAG,CAACC;AAAZ,WAAd,EAFG,CAGH;AACH;AACJ,OATD,MASO;AACHP,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,KAfL;AAiBH;;AAuFDc,EAAAA,MAAM,GACN;AACI,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,UAAU,EAAI,IAA3C;AAAiD,MAAA,EAAE,EAAG,yBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKrB,KAAL,CAAWiB,UAAX,GAAwB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAA6D,IAFlE,EAII;AACI,MAAA,IAAI,EAAG,OADX;AAEI,MAAA,IAAI,EAAG,OAFX;AAGI,MAAA,WAAW,EAAG,OAHlB;AAII,MAAA,YAAY,EAAC,OAJjB;AAKI,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWD,KALtB;AAMI,MAAA,QAAQ,EAAE,KAAKV,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXN,EAaI;AACI,MAAA,IAAI,EAAG,UADX;AAEI,MAAA,IAAI,EAAG,UAFX;AAGI,MAAA,WAAW,EAAG,UAHlB;AAII,MAAA,YAAY,EAAC,UAJjB;AAKI,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,QALtB;AAMI,MAAA,QAAQ,EAAE,KAAKZ,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAoBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBN,EAoBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBX,EAsBI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAC,cAArC;AAAoD,MAAA,OAAO,EAAE,KAAKmB,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EAuBI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,EAAE,EAAE,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,CAFJ,EA4BI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,EAAE,EAAE,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhC,CA5BJ,CADJ;AAiCH;;AA5JL","sourcesContent":[" import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../../components/LinkInClass\"\nimport {ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST} from \"../../config/global_constants\"\n\n\nexport default class login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false,\n            users: [],\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if(res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                        //console.log(\"users: \",this.state.users)\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n\n    }\n\n\n    handleChange = (e) =>\n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validateUserLogin = ()=> {\n\n        let emailIsValid = false;\n        let passwordIsValid = false;\n        let canLogin = false;\n        let email = this.state.email;\n        let password= this.state.password\n\n\n        if(email.trim() && password.trim()){\n            this.state.users.forEach(user => {\n                if(user.email === email) { // email is found within database\n                    console.log(\"Email found within users collection\")\n                    emailIsValid = true;\n                    if(user.password === password) { // password matches\n                        console.log(\"Password matches\")\n                        passwordIsValid = true\n                    } else {\n                        //TODO Display message to user saying their password is wrong\n                        console.log(\"Password does not match\")\n                    }\n                }\n            })\n            if(emailIsValid && passwordIsValid) {\n                canLogin = true;\n            }\n        } else {\n            if(!email.trim()) {\n                console.log(\"email field is empty\")\n            }\n            if(!password.trim()) {\n                console.log(\"pass word field is empty\")\n            }\n        }\n\n\n        return canLogin;\n    }\n\n\n    handleSubmit = (e) =>\n    {\n        e.preventDefault()\n        console.log(this.validateUserLogin())\n        if(this.validateUserLogin() === true) { //if this returns true, user details passed validation, login user\n            axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`)\n                .then(res =>\n                {\n                    if(res.data)\n                    {\n                        if (res.data.errorMessage)\n                        {\n                            console.log(res.data.errorMessage)\n\n                        }\n                        else // user successfully logged in\n                        {\n                            if (res.data.email===\"admin@admin.com\"){\n                                res.data.accessLevel=ACCESS_LEVEL_ADMIN\n                            }\n                            console.log(\"User logged in\")\n                            sessionStorage.name=res.data.name\n                            sessionStorage.accessLevel=res.data.accessLevel\n\n                            this.setState({isLoggedIn:true})\n                        }\n                    }\n                    else\n                    {\n                        console.log(\"Login failed\")\n                    }\n                })\n        } else {\n            console.log(\"details incorrect\")\n        }\n\n    }\n\n\n    render()\n    {\n        return (\n            <div className=\"register-container\">\n                <h2>Login</h2>\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                    <input\n                        type = \"email\"\n                        name = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    /><br/>\n\n                    <input\n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    /><br/><br/>\n\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/>\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                </form>\n\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}