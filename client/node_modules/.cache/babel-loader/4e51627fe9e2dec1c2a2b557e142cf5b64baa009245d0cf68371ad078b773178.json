{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AddAddress.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport LinkInClass from \"./LinkInClass\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        address: {\n          ...prevState.address,\n          [name]: value\n        }\n      }));\n    };\n    this.validateInput = () => {\n      const currentInput = this.state.address;\n      let isValid = true;\n\n      // ADDRESS LINE ONE\n      if (!currentInput.address_line_1.trim()) {\n        this.setState({\n          line1IsInvalid: true\n        });\n        document.getElementById(\"lineOneInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          line1IsInvalid: false\n        });\n        document.getElementById(\"lineOneInput\").classList.remove(\"invalid-input\");\n      }\n\n      // ADDRESS LINE TWO\n      if (!currentInput.address_line_2.trim()) {\n        this.setState({\n          line2IsInvalid: true\n        });\n        document.getElementById(\"lineTwoInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          line2IsInvalid: false\n        });\n        document.getElementById(\"lineTwoInput\").classList.remove(\"invalid-input\");\n      }\n\n      // ADDRESS LINE THREE\n      if (!currentInput.address_line_2.trim()) {\n        this.setState({\n          line2IsInvalid: true\n        });\n        document.getElementById(\"lineThreeInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          line2IsInvalid: false\n        });\n        document.getElementById(\"lineThreeInput\").classList.remove(\"invalid-input\");\n      }\n\n      // CITY\n      if (!currentInput.city.trim()) {\n        this.setState({\n          cityIsInvalid: true\n        });\n        document.getElementById(\"cityInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          cityIsInvalid: false\n        });\n        document.getElementById(\"cityInput\").classList.remove(\"invalid-input\");\n      }\n\n      // COUNTRY\n      if (!currentInput.country.trim()) {\n        this.setState({\n          countryIsInvalid: true\n        });\n        document.getElementById(\"countryInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          countryIsInvalid: false\n        });\n        document.getElementById(\"countryInput\").classList.remove(\"invalid-input\");\n      }\n\n      // POSTCODE\n      if (!currentInput.post_code.trim()) {\n        this.setState({\n          postcodeIsInvalid: true\n        });\n        document.getElementById(\"postcodeInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          postcodeIsInvalid: false\n        });\n        document.getElementById(\"postcodeInput\").classList.remove(\"invalid-input\");\n      }\n      return isValid;\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newAddress = this.state.address;\n      const id = this.state.user._id;\n      if (this.validateInput()) {\n        axios.put(`${SERVER_HOST}/AddAddress/users/${id}`, {\n          newAddress\n        }).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(\"Error finding user profile\");\n            } else {\n              console.log(\"Address added to profile\");\n              console.log(\"Address: \", res.data);\n            }\n          }\n        });\n      } else {\n        console.log(\"inputs are invalid\");\n      }\n    };\n    this.state = {\n      user: [],\n      address: {\n        address_line_1: \"\",\n        address_line_2: \"\",\n        address_line_3: \"\",\n        city: \"\",\n        county: \"\",\n        country: \"\",\n        post_code: \"\"\n      },\n      line1IsInvalid: false,\n      line2IsInvalid: false,\n      line3IsInvalid: false,\n      cityIsInvalid: false,\n      countryIsInvalid: false,\n      postcodeIsInvalid: false\n    };\n  }\n\n  // Get specific user details to add their address\n  componentDidMount() {\n    axios.get(`${SERVER_HOST}/AddAddress/users/${localStorage.email}`, {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(\"Error fetching user profile\");\n        } else {\n          console.log(\"User fetched: \", res.data);\n          this.setState({\n            user: res.data\n          });\n        }\n      }\n    });\n  }\n  render() {\n    console.log(\"User: \", this.state.user);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-head-container\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Anything marked \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-text\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 40\n          }, this), \" is a \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"mandatory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 81\n          }, this), \" field\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"address-form\",\n          noValidate: true,\n          id: \"loginOrRegistrationForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Address Line 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"address_line_1\",\n                    type: \"text\",\n                    id: \"lineOneInput\",\n                    placeholder: \"Line 1 \",\n                    value: this.state.address.address_line_1,\n                    onChange: this.handleChange,\n                    ref: input => {\n                      this.inputToFocus = input;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lineTwoInput\",\n                  children: [\"Address Line 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"address_line_2\",\n                    type: \"text\",\n                    id: \"lineTwoInput\",\n                    placeholder: \"Line 2\",\n                    value: this.state.address.address_line_2,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lineThreeInput\",\n                  children: [\"Address Line 3:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"address_line_3\",\n                    type: \"text\",\n                    id: \"lineThreeInput\",\n                    placeholder: \"Line 3\",\n                    autoComplete: \"address_line_3\",\n                    value: this.state.address.address_line_3,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cityInput\",\n                  children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"city\",\n                    type: \"text\",\n                    id: \"cityInput\",\n                    placeholder: \"City\",\n                    autoComplete: \"city\",\n                    value: this.state.address.city,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"countyInput\",\n                  children: [\"County:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"county\",\n                    type: \"text\",\n                    id: \"countyInput\",\n                    placeholder: \"County\",\n                    autoComplete: \"county\",\n                    value: this.state.address.county,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"countryInput\",\n                  children: [\"Country:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"country\",\n                    type: \"text\",\n                    id: \"countryInput\",\n                    placeholder: \"Country\",\n                    autoComplete: \"country\",\n                    value: this.state.address.country,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"postcodeInput\",\n                  children: [\"Postcode:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"post_code\",\n                    type: \"text\",\n                    id: \"postcodeInput\",\n                    placeholder: \"Postcode\",\n                    autoComplete: \"postcode\",\n                    value: this.state.address.post_code,\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(LinkInClass, {\n              value: \"Add Shipping Address\",\n              className: \"green-button\",\n              onClick: this.handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 127\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"red-button\",\n              to: \"/TestingDirectory\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Link","Redirect","NavBar","LinkInClass","axios","SERVER_HOST","jsxDEV","_jsxDEV","AddAddress","constructor","props","handleChange","e","name","value","target","setState","prevState","address","validateInput","currentInput","state","isValid","address_line_1","trim","line1IsInvalid","document","getElementById","classList","add","remove","address_line_2","line2IsInvalid","city","cityIsInvalid","country","countryIsInvalid","post_code","postcodeIsInvalid","handleSubmit","preventDefault","newAddress","id","user","_id","put","then","res","data","errorMessage","console","log","address_line_3","county","line3IsInvalid","componentDidMount","get","localStorage","email","headers","token","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","type","placeholder","onChange","ref","input","inputToFocus","htmlFor","autoComplete","onClick","to"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AddAddress.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport LinkInClass from \"./LinkInClass\";\nimport axios from \"axios\";\nimport {SERVER_HOST} from \"../config/global_constants\";\n\nexport default class AddAddress extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n\n            user: [],\n            address: {\n                address_line_1: \"\",\n                address_line_2: \"\",\n                address_line_3: \"\",\n                city: \"\",\n                county: \"\",\n                country: \"\",\n                post_code: \"\"\n            },\n            line1IsInvalid: false,\n            line2IsInvalid: false,\n            line3IsInvalid: false,\n            cityIsInvalid: false,\n            countryIsInvalid: false,\n            postcodeIsInvalid: false,\n        }\n    }\n\n    // Get specific user details to add their address\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/AddAddress/users/${localStorage.email}`, {headers:{\"authorization\":localStorage.token}})\n            .then((res => {\n                if(res.data){\n                    if(res.data.errorMessage) {\n                        console.log(\"Error fetching user profile\")\n                    } else {\n                        console.log(\"User fetched: \", res.data)\n                        this.setState({user: res.data})\n                    }\n                }\n            }))\n    }\n\n    handleChange = (e) => {\n        const {name, value} = e.target\n        this.setState(prevState => ({\n            address: {\n                ...prevState.address,\n                [name]: value\n            }\n        }));\n    }\n    validateInput = () => {\n        const currentInput = this.state.address\n        let isValid = true\n\n        // ADDRESS LINE ONE\n        if(!currentInput.address_line_1.trim()) {\n            this.setState({line1IsInvalid: true})\n            document.getElementById(\"lineOneInput\").classList.add(\"invalid-input\")\n            isValid = false\n        } else {\n            this.setState({line1IsInvalid: false})\n            document.getElementById(\"lineOneInput\").classList.remove(\"invalid-input\")\n        }\n\n        // ADDRESS LINE TWO\n        if(!currentInput.address_line_2.trim()) {\n            this.setState({line2IsInvalid: true})\n            document.getElementById(\"lineTwoInput\").classList.add(\"invalid-input\")\n            isValid = false\n        } else {\n            this.setState({line2IsInvalid: false})\n            document.getElementById(\"lineTwoInput\").classList.remove(\"invalid-input\")\n\n        }\n\n        // ADDRESS LINE THREE\n        if(!currentInput.address_line_2.trim()) {\n            this.setState({line2IsInvalid: true})\n            document.getElementById(\"lineThreeInput\").classList.add(\"invalid-input\")\n\n            isValid = false\n        } else {\n            this.setState({line2IsInvalid: false})\n            document.getElementById(\"lineThreeInput\").classList.remove(\"invalid-input\")\n\n        }\n\n        // CITY\n        if(!currentInput.city.trim()) {\n            this.setState({cityIsInvalid: true})\n            document.getElementById(\"cityInput\").classList.add(\"invalid-input\")\n            isValid = false\n        } else {\n            this.setState({cityIsInvalid: false})\n            document.getElementById(\"cityInput\").classList.remove(\"invalid-input\")\n        }\n\n        // COUNTRY\n        if(!currentInput.country.trim()) {\n            this.setState({countryIsInvalid: true})\n            document.getElementById(\"countryInput\").classList.add(\"invalid-input\")\n            isValid = false\n        } else {\n            this.setState({countryIsInvalid: false})\n            document.getElementById(\"countryInput\").classList.remove(\"invalid-input\")\n\n        }\n\n        // POSTCODE\n        if(!currentInput.post_code.trim()) {\n            this.setState({postcodeIsInvalid: true})\n            document.getElementById(\"postcodeInput\").classList.add(\"invalid-input\")\n            isValid = false\n        } else {\n            this.setState({postcodeIsInvalid: false})\n            document.getElementById(\"postcodeInput\").classList.remove(\"invalid-input\")\n\n        }\n\n        return isValid\n    }\n\n\n    handleSubmit=(e)=> {\n        e.preventDefault()\n        const newAddress = this.state.address\n        const id = this.state.user._id\n\n        if(this.validateInput()) {\n            axios.put(`${SERVER_HOST}/AddAddress/users/${id}`, {newAddress})\n                .then(res => {\n                    if(res.data) {\n                        if(res.data.errorMessage) {\n                            console.log(\"Error finding user profile\")\n                        } else {\n                            console.log(\"Address added to profile\")\n                            console.log(\"Address: \", res.data)\n                        }\n                    }\n                })\n        } else {\n            console.log(\"inputs are invalid\")\n        }\n    }\n    render(){\n        console.log(\"User: \",this.state.user)\n\n        return(\n\n            <div>\n                <div className=\"admin-head-container\">\n                    <NavBar/>\n                </div>\n                <div className=\"create-address\">\n                    <h2>Address</h2>\n                    <p>Anything marked <span className=\"red-text\">*</span> is a <b>mandatory</b> field</p>\n\n                    <form className=\"address-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                        <div className=\"address-input-container\">\n\n                            <div className=\"left\">\n                                <div className=\"address-input\">\n                                    <label>\n                                        Address Line 1:\n                                        <input\n                                            name=\"address_line_1\"\n                                            type=\"text\"\n                                            id=\"lineOneInput\"\n                                            placeholder = \"Line 1 \"\n                                            value = {this.state.address.address_line_1}\n                                            onChange = {this.handleChange}\n                                            ref = {(input) => { this.inputToFocus = input }}\n                                        />\n                                    </label>\n                                </div>\n\n                                <div className=\"address-input\">\n                                    <label htmlFor={\"lineTwoInput\"} >\n                                        Address Line 2:\n                                        <input\n                                            name=\"address_line_2\"\n                                            type=\"text\"\n                                            id=\"lineTwoInput\"\n                                            placeholder = \"Line 2\"\n                                            value = {this.state.address.address_line_2}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n\n                                <div className=\"address-input\">\n                                    <label htmlFor={\"lineThreeInput\"}>\n                                        Address Line 3:\n                                        <input\n                                            name=\"address_line_3\"\n                                            type=\"text\"\n                                            id=\"lineThreeInput\"\n                                            placeholder = \"Line 3\"\n                                            autoComplete=\"address_line_3\"\n                                            value = {this.state.address.address_line_3}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n\n                                <div className=\"address-input\">\n                                    <label htmlFor=\"cityInput\">\n                                        City:\n                                        <input\n                                            name=\"city\"\n                                            type=\"text\"\n                                            id=\"cityInput\"\n                                            placeholder = \"City\"\n                                            autoComplete=\"city\"\n                                            value = {this.state.address.city}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"right\">\n                                <div className=\"address-input\">\n                                    <label htmlFor=\"countyInput\">\n                                        County:\n                                        <input\n                                            name=\"county\"\n                                            type=\"text\"\n                                            id=\"countyInput\"\n                                            placeholder = \"County\"\n                                            autoComplete=\"county\"\n                                            value = {this.state.address.county}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n\n                                <div className=\"address-input\">\n                                    <label htmlFor=\"countryInput\">\n                                        Country:\n                                        <input\n                                            name=\"country\"\n                                            type=\"text\"\n                                            id=\"countryInput\"\n                                            placeholder = \"Country\"\n                                            autoComplete=\"country\"\n                                            value = {this.state.address.country}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n\n                                <div className=\"address-input\">\n                                    <label htmlFor=\"postcodeInput\">\n                                        Postcode:\n                                        <input\n                                            name=\"post_code\"\n                                            type=\"text\"\n                                            id=\"postcodeInput\"\n                                            placeholder = \"Postcode\"\n                                            autoComplete=\"postcode\"\n                                            value = {this.state.address.post_code}\n                                            onChange = {this.handleChange}\n                                        />\n                                    </label>\n                                </div>\n                        </div>\n                    </div>\n                        <div className=\"buttons\">\n                            <LinkInClass value=\"Add Shipping Address\" className=\"green-button\" onClick={this.handleSubmit} /> <br/>\n                            <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                        </div>\n                </form>\n\n            </div>\n        </div>\n\n\n\n\n    )}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}