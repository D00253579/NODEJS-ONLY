{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      let loginErrors = [];\n      e.preventDefault();\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n\n        axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.state.isPasswordWrong = true;\n            } else\n              // user successfully logged in\n              {\n                this.state.isPasswordWrong = false;\n                if (this.state.email === \"admin@admin.com\") {\n                  res.data.accessLevel = ACCESS_LEVEL_ADMIN;\n                }\n                console.log(\"User logged in\");\n                localStorage.name = res.data.name;\n                localStorage.accessLevel = res.data.accessLevel;\n                localStorage.token = res.data.token;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Error logging in\");\n          }\n        });\n      } else {\n        console.log(\"login denied invalid credentials\");\n        // loginErrors.push(\"Entered email and/or password is incorrect\")\n        //\n        // this.setState(prevState => ({\n        //     errors: {\n        //         ...prevState.errors,\n        //         password: loginErrors\n        //     }\n        // }))\n        // this.setState(prevState => ({ // empty email errors so only the above error is displayed\n        //     errors: {\n        //         ...prevState.errors,\n        //         email: []\n        //     }\n        // }))\n      }\n    };\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get(`${SERVER_HOST}/users`).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          });\n          //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n  validateUserLogin() {\n    let canLogin = false;\n    let emailErrors = [];\n    let pwErrors = [];\n    let email = this.state.email;\n    let pw = this.state.password;\n    if (!email.trim()) {\n      emailErrors.push(\"Email cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: emailErrors\n      }\n    }));\n    if (!pw.trim()) {\n      pwErrors.push(\"Password cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: pwErrors\n      }\n    }));\n    if (emailErrors.length === 0 && pwErrors.length === 0) {\n      // if there are no errors\n      {\n        canLogin = true;\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            email: []\n          }\n        }));\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            password: []\n          }\n        }));\n      }\n    }\n    console.log(\"canLogin = \", canLogin);\n    return canLogin;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        noValidate: true,\n        id: \"loginOrRegistrationForm\",\n        children: [this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/TestingDirectory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 46\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          autoComplete: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u2022 \", error]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u2022 \", error]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkInClass, {\n          value: \"Login\",\n          className: \"green-button\",\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"red-button\",\n          to: \"/TestingDirectory\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testing-return\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"testing-red-button\",\n          to: \"/TestingDirectory`\",\n          children: \"RETURN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","SERVER_HOST","jsxDEV","_jsxDEV","login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","loginErrors","preventDefault","validateUserLogin","post","state","email","password","then","res","data","errorMessage","isPasswordWrong","accessLevel","console","log","localStorage","token","isLoggedIn","users","errors","componentDidMount","get","canLogin","emailErrors","pwErrors","pw","trim","push","prevState","length","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","id","to","type","placeholder","autoComplete","onChange","map","error","index","onClick"],"sources":["C:/Users/caitl/Desktop/CA2_FullStack/NODEJS-ONLY/client/src/components/Login/Login.js"],"sourcesContent":[" import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../../components/LinkInClass\"\r\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\r\n\r\n\r\nexport default class login extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            isLoggedIn:false,\r\n            users: [],\r\n            errors: { // used to keep track of current validation errors\r\n                email: [],\r\n                password: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(`${SERVER_HOST}/users`)\r\n            .then(res =>\r\n            {\r\n                if(res.data)\r\n                {\r\n                    if(res.data.errorMessage) {\r\n                        console.log(res.data.errorMessage)\r\n                    } else {\r\n                        console.log(\"Users read to Login page\")\r\n                        this.setState({users: res.data})\r\n                        //console.log(\"users: \",this.state.users)\r\n                    }\r\n                } else {\r\n                    console.log(\"Users not found\")\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n\r\n    }\r\n\r\n\r\n    validateUserLogin() {\r\n        let canLogin = false;\r\n        let emailErrors = []\r\n        let pwErrors = []\r\n        let email = this.state.email\r\n        let pw = this.state.password\r\n        if(!email.trim())\r\n        {\r\n            emailErrors.push(\"Email cannot be empty\")\r\n        }\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                email: emailErrors\r\n            }\r\n        }))\r\n        if(!pw.trim())\r\n        {\r\n            pwErrors.push(\"Password cannot be empty\")\r\n        }\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                password: pwErrors\r\n            }\r\n        }))\r\n\r\n        if (emailErrors.length === 0 && pwErrors.length === 0)\r\n        { // if there are no errors\r\n            {\r\n                canLogin = true\r\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\r\n                    errors: {\r\n                        ...prevState.errors,\r\n                        email: []\r\n                    }\r\n                }))\r\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\r\n                    errors: {\r\n                        ...prevState.errors,\r\n                        password: []\r\n                    }\r\n                }))\r\n            }\r\n\r\n        }\r\n        console.log(\"canLogin = \", canLogin)\r\n        return canLogin;\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        let loginErrors = []\r\n        e.preventDefault()\r\n\r\n        if(this.validateUserLogin()) { //if this returns true, user details passed validation, login user\r\n\r\n            axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`)\r\n\r\n                .then(res =>\r\n                {\r\n                    if(res.data)\r\n                    {\r\n                        if (res.data.errorMessage)\r\n                        {\r\n                            this.state.isPasswordWrong = true\r\n                        }\r\n                        else // user successfully logged in\r\n                        {\r\n                            this.state.isPasswordWrong = false\r\n                            if (this.state.email === \"admin@admin.com\") {\r\n                                res.data.accessLevel = ACCESS_LEVEL_ADMIN\r\n                            }\r\n\r\n                            console.log(\"User logged in\")\r\n                            localStorage.name = res.data.name\r\n                            localStorage.accessLevel = res.data.accessLevel\r\n                            localStorage.token = res.data.token\r\n                            this.setState({isLoggedIn: true})\r\n                        }\r\n                    } else {\r\n                        console.log(\"Error logging in\")\r\n                    }\r\n                })\r\n        } else {\r\n            console.log(\"login denied invalid credentials\")\r\n            // loginErrors.push(\"Entered email and/or password is incorrect\")\r\n            //\r\n            // this.setState(prevState => ({\r\n            //     errors: {\r\n            //         ...prevState.errors,\r\n            //         password: loginErrors\r\n            //     }\r\n            // }))\r\n            // this.setState(prevState => ({ // empty email errors so only the above error is displayed\r\n            //     errors: {\r\n            //         ...prevState.errors,\r\n            //         email: []\r\n            //     }\r\n            // }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n\r\n            <div className=\"register-container\">\r\n                <h2>Login</h2>\r\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n\r\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\r\n\r\n                    <input\r\n                        type = \"email\"\r\n                        name = \"email\"\r\n                        placeholder = \"Email\"\r\n                        autoComplete=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                        <div key={index} className=\"error-message\">\r\n                            &#x2022; {error}\r\n                        </div>\r\n                    ))}\r\n                    <br/>\r\n\r\n                    <input\r\n                        type = \"password\"\r\n                        name = \"password\"\r\n                        placeholder = \"Password\"\r\n                        autoComplete=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\r\n                        <div key={index} className=\"error-message\">\r\n                            &#x2022; {error}\r\n                        </div>\r\n                    ))}\r\n                    <br/>\r\n\r\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/><br/>\r\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\r\n                </form>\r\n\r\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}