{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST } from \"../../config/global_constants\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      axios.post(\"\".concat(SERVER_HOST, \"/users/Login/login/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully logged in\n            {\n              if (res.data.email === \"admin@admin.com\") {\n                res.data.accessLevel = ACCESS_LEVEL_ADMIN;\n              }\n\n              console.log(\"User logged in\");\n              sessionStorage.name = res.data.name;\n              sessionStorage.accessLevel = res.data.accessLevel;\n              this.setState({\n                isLoggedIn: true\n              });\n            }\n        } else {\n          console.log(\"Login failed\");\n        }\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          });\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: \"login-form\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Login\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory`\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"RETURN\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_GUEST","SERVER_HOST","login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","post","state","email","password","then","res","data","errorMessage","console","log","accessLevel","sessionStorage","isLoggedIn","errors","componentDidMount","get","users","render"],"mappings":"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","sourcesContent":[" import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../../components/LinkInClass\"\nimport {ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST} from \"../../config/global_constants\"\n\n\nexport default class login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false,\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if(res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n    }\n\n\n    handleChange = (e) =>\n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) =>\n    {\n        axios.post(`${SERVER_HOST}/users/Login/login/${this.state.email}/${this.state.password}`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if (res.data.errorMessage)\n                    {\n                        console.log(res.data.errorMessage)\n                    }\n                    else // user successfully logged in\n                    {\n                        if (res.data.email===\"admin@admin.com\"){\n                            res.data.accessLevel=ACCESS_LEVEL_ADMIN\n                        }\n                        console.log(\"User logged in\")\n                        sessionStorage.name=res.data.name\n                        sessionStorage.accessLevel=res.data.accessLevel\n\n                        this.setState({isLoggedIn:true})\n                    }\n                }\n                else\n                {\n                    console.log(\"Login failed\")\n                }\n            })\n    }\n\n\n    render()\n    {\n        return (\n            <div className=\"register-container\">\n                <h2>Login</h2>\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                    <input\n                        type = \"email\"\n                        name = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    /><br/>\n\n                    <input\n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    /><br/><br/>\n                    {/*<Link className=\"green-button\" to={\"/Login/login\"}>Login</Link>*/}\n                    {/*<Link className=\"blue-button\" to={\"/Login/Register\"}>Register</Link>*/}\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/>\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                </form>\n\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}