{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\Filters.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default class Filters extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleApplyFilters = () => {\n      // Get filters using helper method getCheckedValues for each entry to populate\n      // filters[] with the selected values\n      let filters = {\n        gender: this.getCheckedValues(\"gender\"),\n        size: this.getCheckedValues(\"size\"),\n        category: this.getCheckedValues(\"category\"),\n        colour: this.getCheckedValues(\"colour\")\n      };\n      let filteredProducts = [];\n\n      if (filters.gender.length === 0 && // if there are no filters selected\n      filters.size.length === 0 && filters.category.length === 0 && filters.colour.length === 0) {\n        console.log(\"There are no filters selected\");\n        this.props.updateProducts(this.props.defaultProducts); // show all products\n      } else {\n        console.log(\"Filters ->  \", filters); // check the values from filters[] against the values from products[]\n        // if true push to filteredProducts, if a matching product_id is found in both is wont be pushed\n\n        this.props.defaultProducts.forEach(product => {\n          if ((filters.gender.length === 0 || filters.gender.includes(product.gender)) && (filters.size.length === 0 || filters.size.some(size => product.size.includes(size))) && (filters.category.length === 0 || filters.category.includes(product.category)) && (filters.colour.length === 0 || filters.colour.includes(product.colour)) && !filteredProducts.find(p => p.product_id === product.product_id)) {\n            filteredProducts.push(product);\n          }\n        });\n        console.log(\"Products Matching -> \", filteredProducts);\n        this.setState({\n          filteredProducts\n        }); // using a call back function passed from AdminDashboard to update the state\n        // and show the results from the selected filters\n\n        this.props.updateProducts(filteredProducts);\n      }\n    };\n\n    this.getCheckedValues = filterName => {\n      let checkboxes = document.getElementsByName(filterName);\n      let checkedValues = [];\n      checkboxes.forEach(checkbox => {\n        if (checkbox.checked) checkedValues.push(checkbox.value);\n      });\n      return checkedValues;\n    };\n\n    this.toggleDropdown = filterName => {\n      this.setState(prevState => ({\n        showDropdowns: _objectSpread({}, prevState.showDropdowns, {\n          [filterName]: !prevState.showDropdowns[filterName]\n        })\n      }));\n    };\n\n    this.handlePriceChange = e => {\n      this.setState({\n        price: e.target.value\n      });\n      let filteredProducts = [];\n      this.props.defaultProducts.forEach(product => {\n        if (this.state.price <= product.price) {\n          filteredProducts.push(product);\n        }\n      });\n      this.props.updateProducts(filteredProducts);\n    };\n\n    this.handleStockChange = e => {\n      this.setState({\n        current_stock: e.target.value\n      });\n      let filteredProducts = [];\n      this.props.defaultProducts.forEach(product => {\n        if (this.state.current_stock <= product.current_stock) {\n          filteredProducts.push(product);\n        }\n      });\n      this.props.updateProducts(filteredProducts);\n    };\n\n    this.handleReset = () => {\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n      checkboxes.forEach(checkbox => {\n        // uncheck all checkboxes\n        checkbox.checked = false;\n      });\n      this.setState({\n        price: 0.00\n      }); // set price back to 0\n\n      this.setState({\n        current_stock: 0\n      });\n      this.props.updateProducts(this.props.defaultProducts); // display default products\n    };\n\n    this.state = {\n      showDropdowns: {\n        gender: false,\n        size: false,\n        category: false,\n        colour: false\n      },\n      price: 0.00,\n      current_stock: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"filter-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"FILTERS\"), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter-dropdown \".concat(this.state.showDropdowns.gender ? \"open\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"filter-dropdown-toggle\",\n      onClick: () => this.toggleDropdown(\"gender\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"div\", {\n      className: \"filter-dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"M\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"F\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"O\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"filter-dropdown \".concat(this.state.showDropdowns.size ? \"open\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"filter-dropdown-toggle\",\n      onClick: () => this.toggleDropdown(\"size\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"div\", {\n      className: \"filter-dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" S\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" M\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" L\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"filter-dropdown \".concat(this.state.showDropdowns.category ? \"open\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"filter-dropdown-toggle\",\n      onClick: () => this.toggleDropdown(\"category\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"div\", {\n      className: \"filter-dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \" Sports\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" Casual\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Casual\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" Summer\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Summer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" Spooky\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Spooky\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \" Graphic\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Graphic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \" Smart\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Smart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \" Marvel\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Superhero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"filter-dropdown \".concat(this.state.showDropdowns.colour ? \"open\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"filter-dropdown-toggle\",\n      onClick: () => this.toggleDropdown(\"colour\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(\"div\", {\n      className: \"filter-dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Red\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \" Green\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \" Blue\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \" Grey\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \" Purple\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \" White\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"White\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \" Pink\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \" Yellow\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"price-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Price: \\u20AC\", this.state.price), React.createElement(\"input\", {\n      type: \"range\",\n      id: \"price-filter\",\n      className: \"price-slider\",\n      min: \"0.00\",\n      max: \"50\",\n      value: this.state.price,\n      onChange: this.handlePriceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"stock-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Stock >  \", this.state.current_stock), React.createElement(\"input\", {\n      type: \"range\",\n      id: \"stock-filter\",\n      className: \"stock-slider\",\n      min: \"0\",\n      max: \"40\",\n      value: this.state.current_stock,\n      onChange: this.handleStockChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"filter-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleApplyFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Apply\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Reset\"))));\n  }\n\n} //      Solution 2\n//      catches any duplicates\n//\n// if(filters.gender.length > 0) {\n//     filters.gender.forEach(gender => {\n//         this.props.products.forEach(product => {\n//             if(product.gender === gender && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }\n//\n// if(filters.size.length > 0) {\n//     filters.size.forEach(size => {\n//         this.props.products.forEach(product => {\n//             if(product.size.includes(size) && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\Filters.js"],"names":["React","Component","Link","Filters","constructor","props","handleApplyFilters","filters","gender","getCheckedValues","size","category","colour","filteredProducts","length","console","log","updateProducts","defaultProducts","forEach","product","includes","some","find","p","product_id","push","setState","filterName","checkboxes","document","getElementsByName","checkedValues","checkbox","checked","value","toggleDropdown","prevState","showDropdowns","handlePriceChange","e","price","target","state","handleStockChange","current_stock","handleReset","querySelectorAll","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Filters extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            showDropdowns: {\r\n                gender: false,\r\n                size: false,\r\n                category: false,\r\n                colour: false,\r\n            },\r\n            price: 0.00,\r\n            current_stock: 0\r\n        }\r\n    }\r\n\r\n    handleApplyFilters = () => {\r\n        // Get filters using helper method getCheckedValues for each entry to populate\r\n        // filters[] with the selected values\r\n        let filters = {\r\n            gender: this.getCheckedValues(\"gender\"),\r\n            size: this.getCheckedValues(\"size\"),\r\n            category: this.getCheckedValues(\"category\"),\r\n            colour: this.getCheckedValues(\"colour\"),\r\n        }\r\n        let filteredProducts = []\r\n\r\n        if(filters.gender.length === 0 && // if there are no filters selected\r\n           filters.size.length === 0 &&\r\n           filters.category.length === 0 &&\r\n           filters.colour.length === 0)\r\n        {\r\n            console.log(\"There are no filters selected\")\r\n            this.props.updateProducts(this.props.defaultProducts) // show all products\r\n        } else {\r\n            console.log(\"Filters ->  \", filters)\r\n\r\n            // check the values from filters[] against the values from products[]\r\n            // if true push to filteredProducts, if a matching product_id is found in both is wont be pushed\r\n\r\n            this.props.defaultProducts.forEach(product => {\r\n                if((filters.gender.length === 0 || filters.gender.includes(product.gender)) &&\r\n                    (filters.size.length === 0 || filters.size.some(size => product.size.includes(size))) &&\r\n                    (filters.category.length === 0 || filters.category.includes(product.category)) &&\r\n                    (filters.colour.length === 0 || filters.colour.includes(product.colour)) &&\r\n\r\n                    !filteredProducts.find(p => p.product_id === product.product_id))\r\n                {\r\n                    filteredProducts.push(product)\r\n                }\r\n            })\r\n            console.log(\"Products Matching -> \", filteredProducts)\r\n            this.setState({filteredProducts})\r\n\r\n            // using a call back function passed from AdminDashboard to update the state\r\n            // and show the results from the selected filters\r\n            this.props.updateProducts(filteredProducts)\r\n        }\r\n    }\r\n\r\n    // Helper function to get the values from a checkbox group and add them\r\n    // to their respective arrays\r\n    getCheckedValues = (filterName) => {\r\n        let checkboxes = document.getElementsByName(filterName)\r\n        let checkedValues = []\r\n\r\n        checkboxes.forEach((checkbox) => {\r\n            if(checkbox.checked)\r\n                checkedValues.push(checkbox.value)\r\n        })\r\n        return checkedValues\r\n    }\r\n\r\n    toggleDropdown = (filterName) => {\r\n        this.setState((prevState) => ({\r\n            showDropdowns: {\r\n                ...prevState.showDropdowns,\r\n                [filterName]: !prevState.showDropdowns[filterName],\r\n            },\r\n        }));\r\n    };\r\n    handlePriceChange = (e) => {\r\n        this.setState({ price: e.target.value });\r\n        let filteredProducts = []\r\n        this.props.defaultProducts.forEach(product => {\r\n            if(this.state.price <= product.price) {\r\n                filteredProducts.push(product)\r\n            }\r\n        })\r\n        this.props.updateProducts(filteredProducts)\r\n    }\r\n\r\n    handleStockChange = (e) => {\r\n        this.setState({ current_stock: e.target.value });\r\n        let filteredProducts = []\r\n        this.props.defaultProducts.forEach(product => {\r\n            if(this.state.current_stock <= product.current_stock) {\r\n                filteredProducts.push(product)\r\n            }\r\n        })\r\n        this.props.updateProducts(filteredProducts)\r\n    }\r\n\r\n    handleReset = () => {\r\n        const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]')\r\n        checkboxes.forEach((checkbox => { // uncheck all checkboxes\r\n            checkbox.checked = false\r\n        }))\r\n        this.setState({price: 0.00}) // set price back to 0\r\n        this.setState({current_stock: 0})\r\n        this.props.updateProducts(this.props.defaultProducts) // display default products\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"filter-box\"}>\r\n                <h1>FILTERS</h1>\r\n\r\n                <fieldset>\r\n\r\n\r\n                    <div className={`filter-dropdown ${this.state.showDropdowns.gender ? \"open\" : \"\"}`}>\r\n                        <button\r\n                            className=\"filter-dropdown-toggle\"\r\n                            onClick={() => this.toggleDropdown(\"gender\")}\r\n                        >\r\n                            Gender\r\n                        </button>\r\n                        <div className=\"filter-dropdown-menu\">\r\n\r\n                            <label>\r\n                                M\r\n                                <input type=\"checkbox\" name=\"gender\" value=\"Male\" />\r\n                            </label>\r\n                            <label>\r\n                                F\r\n                                <input type=\"checkbox\" name=\"gender\" value=\"Female\" />\r\n                            </label>\r\n                            <label>\r\n                                O\r\n                                <input type=\"checkbox\" name=\"gender\" value=\"Other\" />\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={`filter-dropdown ${this.state.showDropdowns.size ? \"open\" : \"\"}`}>\r\n                        <button\r\n                            className=\"filter-dropdown-toggle\"\r\n                            onClick={() => this.toggleDropdown(\"size\")}\r\n                            >\r\n                            Size\r\n                        </button>\r\n                        <div className=\"filter-dropdown-menu\">\r\n                            <label> S\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"size\"\r\n                                    value=\"small\"/>\r\n                            </label>\r\n\r\n                            <label> M\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"size\"\r\n                                    value=\"medium\"/>\r\n                            </label>\r\n\r\n                            <label> L\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"size\"\r\n                                    value=\"large\"/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className={`filter-dropdown ${this.state.showDropdowns.category ? \"open\" : \"\"}`}>\r\n                        <button\r\n                            className=\"filter-dropdown-toggle\"\r\n                            onClick={() => this.toggleDropdown(\"category\")}\r\n                        >\r\n                            Category\r\n                        </button>\r\n                        <div className=\"filter-dropdown-menu\">\r\n                            <label> Sports\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Sports\"/>\r\n                            </label>\r\n\r\n                            <label> Casual\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Casual\"/>\r\n                            </label>\r\n\r\n                            <label> Summer\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Summer\"/>\r\n                            </label>\r\n\r\n                            <label> Spooky\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Spooky\"/>\r\n                            </label>\r\n\r\n                            <label> Graphic\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Graphic\"/>\r\n                            </label>\r\n\r\n                            <label> Smart\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Smart\"/>\r\n                            </label>\r\n\r\n                            <label> Marvel\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"category\"\r\n                                    value=\"Superhero\"/>\r\n                            </label>\r\n                        </div>\r\n                   </div>\r\n\r\n\r\n                    <div className={`filter-dropdown ${this.state.showDropdowns.colour ? \"open\" : \"\"}`}>\r\n                        <button\r\n                            className=\"filter-dropdown-toggle\"\r\n                            onClick={() => this.toggleDropdown(\"colour\")}\r\n                        >\r\n                            Colour\r\n                        </button>\r\n\r\n                        <div className=\"filter-dropdown-menu\">\r\n                            <label>Red\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Red\"/>\r\n                            </label>\r\n                            <label> Green\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Green\"/>\r\n                            </label>\r\n                            <label> Blue\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Blue\"/>\r\n                            </label>\r\n                            <label> Grey\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Grey\"/>\r\n                            </label>\r\n                            <label> Purple\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Purple\"/>\r\n                            </label>\r\n                            <label> White\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"White\"/>\r\n                            </label>\r\n                            <label> Pink\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Pink\"/>\r\n                            </label>\r\n                            <label> Yellow\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"colour\"\r\n                                    value=\"Yellow\"/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                        <div className=\"price-filter\">\r\n                            <h4>Price: €{this.state.price}</h4>\r\n                            <input\r\n                                type=\"range\"\r\n                                id=\"price-filter\"\r\n                                className=\"price-slider\"\r\n                                min=\"0.00\" max=\"50\"\r\n                                value={this.state.price}\r\n                                onChange={this.handlePriceChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"stock-filter\">\r\n                            <h4>Stock >  {this.state.current_stock}</h4>\r\n                            <input\r\n                                type=\"range\"\r\n                                id=\"stock-filter\"\r\n                                className=\"stock-slider\"\r\n                                min=\"0\" max=\"40\"\r\n                                value={this.state.current_stock}\r\n                                onChange={this.handleStockChange}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                    <div className=\"filter-buttons\">\r\n                       <button type=\"button\" onClick={this.handleApplyFilters}>Apply</button>\r\n                        <button type=\"button\" onClick={this.handleReset}>Reset</button>\r\n                    </div>\r\n\r\n                </fieldset>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//      Solution 2\r\n//      catches any duplicates\r\n//\r\n// if(filters.gender.length > 0) {\r\n//     filters.gender.forEach(gender => {\r\n//         this.props.products.forEach(product => {\r\n//             if(product.gender === gender && !filteredProducts.find(p => p.product_id === product.product_id)) {\r\n//                 filteredProducts.push(product)\r\n//             }\r\n//         })\r\n//     })\r\n// }\r\n//\r\n// if(filters.size.length > 0) {\r\n//     filters.size.forEach(size => {\r\n//         this.props.products.forEach(product => {\r\n//             if(product.size.includes(size) && !filteredProducts.find(p => p.product_id === product.product_id)) {\r\n//                 filteredProducts.push(product)\r\n//             }\r\n//         })\r\n//     })\r\n// }"]},"metadata":{},"sourceType":"module"}