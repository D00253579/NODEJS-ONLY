{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/AdminDashboard/AdminDashboard.js\";\nimport React, { Component } from \"react\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport axios from \"axios\";\nimport Navbar from \"../NavBar\";\nimport AdminProductView from \"./AdminProductView\";\nimport Filters from \"./Filters\";\nimport { Link } from \"react-router-dom\";\nimport AdminControls from \"./AdminControls\";\nimport AdminEditProduct from \"./AdminEditProduct\";\nexport default class AdminDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateProducts = newProductState => {\n      this.setState({\n        products: newProductState\n      });\n      console.log(\"State of products updated \");\n    };\n\n    this.handleRowClick = p_id => {\n      this.setState({\n        isEditingProduct: true,\n        rowClickedID: p_id\n      });\n      console.log(\"Row is clicked, id=\", p_id);\n    };\n\n    this.handleRowUnClick = () => {\n      this.setState({\n        isEditingProduct: false\n      });\n    };\n\n    this.state = {\n      products: [],\n      defaultProducts: [],\n      // If no filters are applied\n      isEditingProduct: false,\n      rowClickedID: 0\n    };\n  }\n\n  componentDidMount() {\n    // Fetch products in the parent component\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          /* TODO\n              Display a message to the screen showing the products were not found */\n          console.log(res.data.errorMexssage);\n        } else {\n          console.log(\"Records read to Admin dashboard\");\n          this.setState({\n            products: res.data,\n            // This state of products when passed will have the filters applied\n            defaultProducts: res.data // keep a default view for filtering\n\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    if (this.state.isEditingProduct) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"admin-head-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(AdminControls, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(AdminEditProduct, {\n        handleRowUnClick: this.handleRowUnClick,\n        p_id: this.state.rowClickedID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"admin-head-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(AdminControls, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"admin-body-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        updateProducts: this.updateProducts,\n        products: this.state.products,\n        defaultProducts: this.state.defaultProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"admin-table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(AdminProductView, {\n        products: this.state.products,\n        handleRowClick: this.handleRowClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"testing-return\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"testing-red-button\",\n        to: \"/TestingDirectory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"RETURN\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/AdminDashboard/AdminDashboard.js"],"names":["React","Component","SERVER_HOST","axios","Navbar","AdminProductView","Filters","Link","AdminControls","AdminEditProduct","AdminDashboard","constructor","props","updateProducts","newProductState","setState","products","console","log","handleRowClick","p_id","isEditingProduct","rowClickedID","handleRowUnClick","state","defaultProducts","componentDidMount","get","then","res","data","errorMessage","errorMexssage","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkB,WAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAGA,eAAe,MAAMC,cAAN,SAA6BT,SAA7B,CACf;AAEIU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkCnBC,cAlCmB,GAkCDC,eAAD,IAAqB;AAClC,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KArCkB;;AAAA,SAuCnBC,cAvCmB,GAuCDC,IAAD,IAAU;AACvB,WAAKL,QAAL,CAAc;AAACM,QAAAA,gBAAgB,EAAE,IAAnB;AACUC,QAAAA,YAAY,EAAEF;AADxB,OAAd;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,IAAnC;AACH,KA3CkB;;AAAA,SA4CnBG,gBA5CmB,GA4CA,MAAM;AACrB,WAAKR,QAAL,CAAc;AAACM,QAAAA,gBAAgB,EAAE;AAAnB,OAAd;AACH,KA9CkB;;AAEf,SAAKG,KAAL,GAAa;AACTR,MAAAA,QAAQ,EAAE,EADD;AAETS,MAAAA,eAAe,EAAE,EAFR;AAEY;AACrBJ,MAAAA,gBAAgB,EAAE,KAHT;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB;AAEAvB,IAAAA,KAAK,CAACwB,GAAN,WAAazB,WAAb,gBACK0B,IADL,CACWC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,IAAR,EAAc;AACV,YAAID,GAAG,CAACC,IAAJ,CAASC,YAAb,EAA2B;AACvB;;AAKAd,UAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,IAAJ,CAASE,aAArB;AACH,SAPD,MAOO;AACHf,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,eAAKH,QAAL,CAAc;AAAEC,YAAAA,QAAQ,EAAEa,GAAG,CAACC,IAAhB;AAA4B;AACnBL,YAAAA,eAAe,EAAEI,GAAG,CAACC,IAD9B,CACmC;;AADnC,WAAd;AAGH;AACJ,OAdD,MAcO;AACHb,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAnBL;AAoBH;;AAgBDe,EAAAA,MAAM,GAAG;AAEL,QAAG,KAAKT,KAAL,CAAWH,gBAAd,EAAgC;AAC5B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKQ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,EAQQ,oBAAC,gBAAD;AACI,QAAA,gBAAgB,EAAE,KAAKE,gBAD3B;AAEI,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWF,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARR,CADJ;AAiBH,KAlBD,MAkBO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AACI,QAAA,cAAc,EAAE,KAAKT,cADzB;AAEI,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWR,QAFzB;AAGI,QAAA,eAAe,EAAE,KAAKQ,KAAL,CAAWC,eAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAWI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWR,QADzB;AAEI,QAAA,cAAc,EAAE,KAAKG,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CAPJ,EA2BI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,EAAE,EAAE,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC,CA3BJ,CADJ;AA+BH;AAGJ;;AAzGL","sourcesContent":["import React, {Component} from \"react\";\nimport {SERVER_HOST} from \"../../config/global_constants\";\nimport axios from \"axios\";\nimport Navbar from\"../NavBar\"\nimport AdminProductView from \"./AdminProductView\";\nimport Filters from \"./Filters\";\nimport {Link} from \"react-router-dom\";\nimport AdminControls from \"./AdminControls\";\nimport AdminEditProduct from \"./AdminEditProduct\"\n\n\nexport default class AdminDashboard extends Component\n{\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            defaultProducts: [], // If no filters are applied\n            isEditingProduct: false,\n            rowClickedID: 0\n        }\n    }\n    componentDidMount() {\n        // Fetch products in the parent component\n\n        axios.get(`${SERVER_HOST}/products`)\n            .then((res) => {\n                if (res.data) {\n                    if (res.data.errorMessage) {\n                        /* TODO\n                            Display a message to the screen showing the products were not found */\n\n\n\n                        console.log(res.data.errorMexssage);\n                    } else {\n                        console.log(\"Records read to Admin dashboard\");\n                        this.setState({ products: res.data,       // This state of products when passed will have the filters applied\n                                               defaultProducts: res.data // keep a default view for filtering\n                        });\n                    }\n                } else {\n                    console.log(\"Record not found\");\n                }\n            });\n    }\n\n    updateProducts = (newProductState) => {\n        this.setState({products: newProductState})\n        console.log(\"State of products updated \")\n    }\n\n    handleRowClick = (p_id) => {\n        this.setState({isEditingProduct: true,\n                                rowClickedID: p_id})\n        console.log(\"Row is clicked, id=\", p_id)\n    }\n    handleRowUnClick = () => {\n        this.setState({isEditingProduct: false})\n    }\n\n    render() {\n\n        if(this.state.isEditingProduct) {\n            return (\n                <div>\n                    <div className=\"admin-head-container\">\n                        <Navbar/>\n                    </div>\n\n                        <AdminControls/>\n\n\n                        <AdminEditProduct\n                            handleRowUnClick={this.handleRowUnClick}\n                            p_id={this.state.rowClickedID}\n                        />\n\n\n                </div>\n            )\n        } else {\n            return (\n                <div>\n\n                    <div className=\"admin-head-container\">\n                        <Navbar/>\n                    </div>\n\n                    <AdminControls/>\n                    <div className=\"admin-body-container\">\n\n\n\n                        <div className=\"filter-container\">\n                            <Filters\n                                updateProducts={this.updateProducts}\n                                products={this.state.products}\n                                defaultProducts={this.state.defaultProducts}\n                            />\n                        </div>\n                        <div className=\"admin-table-container\">\n                            <AdminProductView\n                                products={this.state.products}\n                                handleRowClick={this.handleRowClick}\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory\"}>RETURN</Link></div>\n                </div>\n            )\n        }\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}