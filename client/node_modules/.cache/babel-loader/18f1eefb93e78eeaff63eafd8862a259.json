{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Desktop\\\\CA2\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\BuyProduct.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/@paypal/react-paypal-js\";\nexport default class BuyProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID, \"/\").concat(this.props.carID, \"/\").concat(this.props.price), {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PaymentMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PaymentMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PaymentMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      this.setState({\n        payPalMessageType: PaymentMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jamie\\Desktop\\CA2\\NODEJS-ONLY\\client\\src\\components\\BuyProduct.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalButtons","PayPalScriptProvider","BuyProduct","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","post","orderID","carID","headers","localStorage","token","then","res","setState","payPalMessageType","PaymentMessage","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport axios from \"axios\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\nimport {PayPalButtons, PayPalScriptProvider} from \"@paypal/@paypal/react-paypal-js\"\r\n\r\nexport default class BuyProduct extends Component\r\n{\r\nconstructor(props) {\r\n    super(props);\r\n    this.state={\r\nredirectToPayPalMessage:false\r\n    }\r\n}\r\n    createOrder = (data, actions) =>\r\n    {\r\n        return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n    }\r\n\r\n\r\n    onApprove = paymentData =>\r\n    {\r\n        axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.carID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n            .then(res =>\r\n            {\r\n                this.setState({payPalMessageType:PaymentMessage.messageType.SUCCESS,\r\n                    payPalOrderID:paymentData.orderID,\r\n                    redirectToPayPalMessage:true})\r\n            })\r\n            .catch(errorData =>\r\n            {\r\n                this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\r\n                    redirectToPayPalMessage:true})\r\n            })\r\n    }\r\n\r\n\r\n    onError = errorData =>\r\n    {\r\n        this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\r\n            redirectToPayPalMessage:true})\r\n    }\r\n\r\n\r\n    onCancel = cancelData =>\r\n    {\r\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n        this.setState({payPalMessageType:PaymentMessage.messageType.CANCEL,\r\n            redirectToPayPalMessage:true})\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}\r\n\r\n                <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n                </PayPalScriptProvider>\r\n            </div>\r\n        )}\r\n}"]},"metadata":{},"sourceType":"module"}