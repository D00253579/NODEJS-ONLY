{"ast":null,"code":"// import React, {Component} from \"react\"\n// import axios from \"axios\"\n// import {Redirect} from \"react-router-dom\"\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/@paypal/react-paypal-js\"\n//\n// export default class BuyProduct extends Component\n// {\n// constructor(props) {\n//     super(props);\n//     this.state={\n// redirectToPayPalMessage:false\n//     }\n// }\n//     createOrder = (data, actions) =>\n//     {\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\n//     }\n//\n//\n//     onApprove = paymentData =>\n//     {\n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.carID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n//             .then(res =>\n//             {\n//                 this.setState({payPalMessageType:PaymentMessage.messageType.SUCCESS,\n//                     payPalOrderID:paymentData.orderID,\n//                     redirectToPayPalMessage:true})\n//             })\n//             .catch(errorData =>\n//             {\n//                 this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\n//                     redirectToPayPalMessage:true})\n//             })\n//     }\n//\n//\n//     onError = errorData =>\n//     {\n//         this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\n//             redirectToPayPalMessage:true})\n//     }\n//\n//\n//     onCancel = cancelData =>\n//     {\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n//         this.setState({payPalMessageType:PaymentMessage.messageType.CANCEL,\n//             redirectToPayPalMessage:true})\n//     }\n//\n//\n//     render()\n//     {\n//         return (\n//             <div>\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}\n//\n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\n//                 </PayPalScriptProvider>\n//             </div>\n//         )}\n// }","map":{"version":3,"sources":["C:\\Users\\jamie\\Desktop\\CA2\\NODEJS-ONLY\\client\\src\\components\\BuyProduct.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, {Component} from \"react\"\r\n// import axios from \"axios\"\r\n// import {Redirect} from \"react-router-dom\"\r\n// import {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\n// import {PayPalButtons, PayPalScriptProvider} from \"@paypal/@paypal/react-paypal-js\"\r\n//\r\n// export default class BuyProduct extends Component\r\n// {\r\n// constructor(props) {\r\n//     super(props);\r\n//     this.state={\r\n// redirectToPayPalMessage:false\r\n//     }\r\n// }\r\n//     createOrder = (data, actions) =>\r\n//     {\r\n//         return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n//     }\r\n//\r\n//\r\n//     onApprove = paymentData =>\r\n//     {\r\n//         axios.post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.carID}/${this.props.price}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\r\n//             .then(res =>\r\n//             {\r\n//                 this.setState({payPalMessageType:PaymentMessage.messageType.SUCCESS,\r\n//                     payPalOrderID:paymentData.orderID,\r\n//                     redirectToPayPalMessage:true})\r\n//             })\r\n//             .catch(errorData =>\r\n//             {\r\n//                 this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\r\n//                     redirectToPayPalMessage:true})\r\n//             })\r\n//     }\r\n//\r\n//\r\n//     onError = errorData =>\r\n//     {\r\n//         this.setState({payPalMessageType:PaymentMessage.messageType.ERROR,\r\n//             redirectToPayPalMessage:true})\r\n//     }\r\n//\r\n//\r\n//     onCancel = cancelData =>\r\n//     {\r\n//         // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n//         this.setState({payPalMessageType:PaymentMessage.messageType.CANCEL,\r\n//             redirectToPayPalMessage:true})\r\n//     }\r\n//\r\n//\r\n//     render()\r\n//     {\r\n//         return (\r\n//             <div>\r\n//                 {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}\r\n//\r\n//                 <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n//                     <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n//                 </PayPalScriptProvider>\r\n//             </div>\r\n//         )}\r\n// }"]},"metadata":{},"sourceType":"module"}