{"ast":null,"code":"import _defineProperty from \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      let loginErrors = [];\n      e.preventDefault();\n\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n        axios.post(\"\".concat(SERVER_HOST, \"/users/Login/Login/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.state.isPasswordWrong = true;\n            } else // user successfully logged in\n              {\n                this.state.isPasswordWrong = false;\n\n                if (this.state.email === \"admin@admin.com\") {\n                  res.data.accessLevel = ACCESS_LEVEL_ADMIN;\n                }\n\n                console.log(\"User logged in\");\n                localStorage.name = res.data.name;\n                localStorage.accessLevel = res.data.accessLevel;\n                localStorage.token = res.data.token;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          }\n        });\n      } else {\n        console.log(\"login denied invalid credentials\"); // loginErrors.push(\"Entered email and/or password is incorrect\")\n        //\n        // this.setState(prevState => ({\n        //     errors: {\n        //         ...prevState.errors,\n        //         password: loginErrors\n        //     }\n        // }))\n        // this.setState(prevState => ({ // empty email errors so only the above error is displayed\n        //     errors: {\n        //         ...prevState.errors,\n        //         email: []\n        //     }\n        // }))\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          }); //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n\n  validateUserLogin() {\n    let canLogin = false;\n    let emailErrors = [];\n    let pwErrors = [];\n    let email = this.state.email;\n    let pw = this.state.password;\n\n    if (!email.trim()) {\n      emailErrors.push(\"Email cannot be empty\");\n    }\n\n    this.setState(prevState => ({\n      errors: _objectSpread({}, prevState.errors, {\n        email: emailErrors\n      })\n    }));\n\n    if (!pw.trim()) {\n      pwErrors.push(\"Password cannot be empty\");\n    }\n\n    this.setState(prevState => ({\n      errors: _objectSpread({}, prevState.errors, {\n        password: pwErrors\n      })\n    }));\n\n    if (emailErrors.length === 0 && pwErrors.length === 0) {\n      // if there are no errors\n      {\n        canLogin = true;\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: _objectSpread({}, prevState.errors, {\n            email: []\n          })\n        }));\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: _objectSpread({}, prevState.errors, {\n            password: []\n          })\n        }));\n      }\n    }\n\n    console.log(\"canLogin = \", canLogin);\n    return canLogin;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: \"login-form\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Login\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory`\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"RETURN\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","SERVER_HOST","login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","loginErrors","preventDefault","validateUserLogin","post","state","email","password","then","res","data","errorMessage","isPasswordWrong","accessLevel","console","log","localStorage","token","isLoggedIn","users","errors","componentDidMount","get","canLogin","emailErrors","pwErrors","pw","trim","push","prevState","length","render","map","error","index"],"mappings":"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","sourcesContent":[" import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../../components/LinkInClass\"\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\n\n\nexport default class login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false,\n            users: [],\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n\n    componentDidMount() {\n\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if(res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                        //console.log(\"users: \",this.state.users)\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n\n    }\n\n\n\n    handleChange = (e) =>\n    {\n        this.setState({[e.target.name]: e.target.value})\n\n    }\n\n\n    validateUserLogin() {\n        let canLogin = false;\n        let emailErrors = []\n        let pwErrors = []\n        let email = this.state.email\n        let pw = this.state.password\n        if(!email.trim())\n        {\n            emailErrors.push(\"Email cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                email: emailErrors\n            }\n        }))\n        if(!pw.trim())\n        {\n            pwErrors.push(\"Password cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                password: pwErrors\n            }\n        }))\n\n        if (emailErrors.length === 0 && pwErrors.length === 0)\n        { // if there are no errors\n            {\n                canLogin = true\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        email: []\n                    }\n                }))\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        password: []\n                    }\n                }))\n            }\n\n        }\n        console.log(\"canLogin = \", canLogin)\n        return canLogin;\n    }\n\n\n    handleSubmit = (e) => {\n        let loginErrors = []\n        e.preventDefault()\n\n        if(this.validateUserLogin()) { //if this returns true, user details passed validation, login user\n\n            axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`)\n                .then(res =>\n\n                {\n                    if(res.data)\n                    {\n                        if (res.data.errorMessage)\n                        {\n                            this.state.isPasswordWrong = true\n                        }\n                        else // user successfully logged in\n                        {\n                            this.state.isPasswordWrong = false\n                            if (this.state.email === \"admin@admin.com\") {\n                                res.data.accessLevel = ACCESS_LEVEL_ADMIN\n                            }\n                            console.log(\"User logged in\")\n                            localStorage.name = res.data.name\n                            localStorage.accessLevel = res.data.accessLevel\n                            localStorage.token = res.data.token\n\n                            this.setState({isLoggedIn: true})\n                        }\n                    }\n                })\n        } else {\n            console.log(\"login denied invalid credentials\")\n            // loginErrors.push(\"Entered email and/or password is incorrect\")\n            //\n            // this.setState(prevState => ({\n            //     errors: {\n            //         ...prevState.errors,\n            //         password: loginErrors\n            //     }\n            // }))\n            // this.setState(prevState => ({ // empty email errors so only the above error is displayed\n            //     errors: {\n            //         ...prevState.errors,\n            //         email: []\n            //     }\n            // }))\n        }\n    }\n\n\n\n\n\n    render()\n    {\n        return (\n\n            <div className=\"register-container\">\n                <h2>Login</h2>\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                    <input\n                        type = \"email\"\n                        name = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <input\n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/><br/>\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                </form>\n\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}