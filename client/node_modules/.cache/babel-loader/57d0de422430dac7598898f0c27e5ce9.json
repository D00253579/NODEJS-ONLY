{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\ViewUsers.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport Navbar from \"../NavBar\";\nimport AdminUserView from \"./AdminUserView\";\nimport UserControls from \"./UserControls\";\nexport default class ViewUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortName = () => {\n      // default descending\n      let productNaturalOrderByName = [...this.state.users]; // soft copy of products to manipulate\n\n      let descendingProducts = productNaturalOrderByName.sort((a, b) => a.name < b.name ? -1 : 1);\n      this.updateUsers(descendingProducts);\n      console.log(\"Natural order set: product.name DESC\");\n    };\n\n    this.updateUsers = newUserState => {\n      this.setState({\n        users: newUserState\n      });\n      console.log(\"State of Users updated \");\n    };\n\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    //Fetching users for the table\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          res.json({\n            errorMessage: \"Users not found\"\n          });\n        } else {\n          console.log(\"Records read to Admin view of Users\");\n          this.setState({\n            users: res.data\n          });\n          this.sortName();\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(UserControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"admin-body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(AdminUserView, {\n      users: this.state.users,\n      updateUsers: this.updateUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\ViewUsers.js"],"names":["React","Component","axios","SERVER_HOST","Navbar","AdminUserView","UserControls","ViewUsers","constructor","props","sortName","productNaturalOrderByName","state","users","descendingProducts","sort","a","b","name","updateUsers","console","log","newUserState","setState","componentDidMount","get","then","res","data","errorMessage","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAE7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,QA3BmB,GA2BR,MAAM;AAAE;AACf,UAAIC,yBAAyB,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAhC,CADa,CACyC;;AAEtD,UAAIC,kBAAkB,GAAGH,yBAAyB,CAACI,IAA1B,CAA+B,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAgB,CAAC,CAAjB,GAAmB,CAA5D,CAAzB;AACA,WAAKC,WAAL,CAAiBL,kBAAjB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH,KAjCkB;;AAAA,SAkCnBF,WAlCmB,GAkCJG,YAAD,IAAkB;AAC5B,WAAKC,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAES;AAAR,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KArCkB;;AAEf,SAAKT,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAGDW,EAAAA,iBAAiB,GAAG;AAChB;AACAtB,IAAAA,KAAK,CAACuB,GAAN,WAAatB,WAAb,aACKuB,IADL,CACWC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,IAAR,EAAc;AACV,YAAID,GAAG,CAACC,IAAJ,CAASC,YAAb,EAA2B;AACvBF,UAAAA,GAAG,CAACG,IAAJ,CAAS;AAACD,YAAAA,YAAY;AAAb,WAAT;AACH,SAFD,MAEO;AACHT,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,eAAKE,QAAL,CAAc;AAACV,YAAAA,KAAK,EAAEc,GAAG,CAACC;AAAZ,WAAd;AACA,eAAKlB,QAAL;AACH;AAEJ,OATD,MASO;AACHU,QAAAA,OAAO,CAACC,GAAR;AACH;AAEJ,KAfL;AAgBH;;AAaDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KADtB;AAEI,MAAA,WAAW,EAAE,KAAKM,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CALJ,CADJ;AAgBH;;AA1D4C","sourcesContent":["import React, {Component} from \"react\"\r\nimport axios from \"axios\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport Navbar from \"../NavBar\"\r\nimport AdminUserView from \"./AdminUserView\";\r\nimport UserControls from \"./UserControls\";\r\n\r\nexport default class ViewUsers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        //Fetching users for the table\r\n        axios.get(`${SERVER_HOST}/users`)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    if (res.data.errorMessage) {\r\n                        res.json({errorMessage: `Users not found`})\r\n                    } else {\r\n                        console.log(\"Records read to Admin view of Users\");\r\n                        this.setState({users: res.data})\r\n                        this.sortName()\r\n                    }\r\n\r\n                } else {\r\n                    console.log(`Record not found`)\r\n                }\r\n\r\n            })\r\n    }\r\n    sortName = () => { // default descending\r\n        let productNaturalOrderByName = [...this.state.users] // soft copy of products to manipulate\r\n\r\n        let descendingProducts = productNaturalOrderByName.sort((a, b) => a.name < b.name?-1:1)\r\n        this.updateUsers(descendingProducts)\r\n        console.log(\"Natural order set: product.name DESC\")\r\n    }\r\n    updateUsers = (newUserState) => {\r\n        this.setState({users: newUserState})\r\n        console.log(\"State of Users updated \")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"admin-head-container\">\r\n                    <Navbar/>\r\n                </div>\r\n                <UserControls/>\r\n                <div className=\"admin-body-container\">\r\n                    <div className=\"admin-table-container\">\r\n                        <AdminUserView\r\n                            users={this.state.users}\r\n                            updateUsers={this.updateUsers}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}