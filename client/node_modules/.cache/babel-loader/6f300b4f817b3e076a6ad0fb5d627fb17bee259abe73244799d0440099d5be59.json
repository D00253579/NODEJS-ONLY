{"ast":null,"code":"import React,{Component}from\"react\";import{Redirect,Link}from\"react-router-dom\";import axios from\"axios\";import{ACCESS_LEVEL_ADMIN,SERVER_HOST}from\"../../config/global_constants\";import LinkInClass from\"../LinkInClass\";import NavBar from\"../NavBar\";import Footer from\"../Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Register extends Component{constructor(props){super(props);this.handleChange=e=>{this.setState({[e.target.name]:e.target.value});};this.handleFileChange=e=>{this.setState({selectedFile:e.target.files[0]});};this.handleSubmit=e=>{let isNameValid=this.validateName();let isEmailValid=this.validateEmail();let isPasswordValid=this.validatePassword();let isConfirmPasswordValid=this.validateConfirmPassword();let formData=new FormData();formData.append(\"profilePhoto\",this.state.selectedFile);if(!isNameValid&&!isEmailValid&&!isPasswordValid&&!isConfirmPasswordValid)// if inputs have passed validation\n{e.preventDefault();axios.post(\"\".concat(SERVER_HOST,\"/users/Login/Register/\").concat(this.state.name,\"/\").concat(this.state.email,\"/\").concat(this.state.password),formData,{headers:{\"Content-type\":\"multipart/form-data\"}}).then(res=>{// user successfully registered\n// console.log(\"User registered and logged in\")\nlocalStorage.name=res.data.name;localStorage.accessLevel=res.data.accessLevel;localStorage.profilePhoto=res.data.profilePhoto;localStorage.token=res.data.token;this.setState({isRegistered:true});}).catch(err=>{this.setState({wasSubmittedAtLeastOnce:true});});}else{console.log(\"Current values have not been posted\");}// console.log(this.validateName())\n// console.log(this.state.errors.name)\n// console.log(this.state.errors.email)\n// console.log(this.state.errors.password)\n// console.log(this.state.errors.confirmPassword)\n};this.state={name:\"\",email:\"\",password:\"\",confirmPassword:\"\",isRegistered:false,selectedFile:null,wasSubmittedAtLeastOnce:false,errors:{// used to keep track of current validation errors\nname:[],email:[],password:[],confirmPassword:[]}};}// Client side validation for Registration page\n// if all of these return true the data will be posted\nvalidateName(){const name=this.state.name;const errors=[];if(/\\d/.test(name)){errors.push(\"Name cannot contain numbers\");}if(/[!\"£_'$*^&()+=#.-]/.test(name)){errors.push(\"Name cannot contain special characters\");}if(!name.trim()){errors.push(\"Name cannot be empty\");}// update the state of name within errors with the current errors\nthis.setState(prevState=>({errors:{...prevState.errors,name:errors}}));//console.log(\"Errors for name: \", errors)\nreturn errors.length!==0;}validateEmail(){const pattern=/^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/;const email=this.state.email;const errors=[];if(!email.trim()){errors.push(\"Email cannot be empty\");}if(!pattern.test(email)&&email.trim()){errors.push(\"Invalid email format\");}// update the state of email within errors with the current errors\nthis.setState(prevState=>({errors:{...prevState.errors,email:errors}}));//console.log(\"Errors for email: \", errors)\nreturn errors.length!==0;}validatePassword(){const specialCharPattern=/[!£_\"$*^&()+=#.-]/;const password=this.state.password;const errors=[];if(password.length<8){errors.push(\"Password must be > 8 characters long\");}if(!/[0-9]/.test(password)){errors.push(\"Password must contain at least 1 number \");}if(!specialCharPattern.test(password)){errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\");}// update the state of password within errors with the current errors\nthis.setState(prevState=>({errors:{...prevState.errors,password:errors}}));//console.log(\"Errors for password: \", errors)\nreturn errors.length!==0;}validateConfirmPassword(){const errors=[];if(this.state.password!==this.state.confirmPassword){errors.push(\"Passwords do not match\");}// update the state of confirmPassword within errors with current errors\nthis.setState(prevState=>({errors:{...prevState.errors,confirmPassword:errors}}));//console.log(\"Errors for confirmPassword: \", errors)\nreturn errors.length!==0;}render(){let errorMessage=\"\";if(this.state.wasSubmittedAtLeastOnce){errorMessage=/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: All fields must be filled in\",/*#__PURE__*/_jsx(\"br\",{})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"register-head-container\",children:/*#__PURE__*/_jsx(NavBar,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"register-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-page-box\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CREATE YOUR ACCOUNT\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"register-form\",noValidate:true,id:\"loginOrRegistrationForm\",children:[this.state.isRegistered?/*#__PURE__*/_jsx(Redirect,{to:\"/TestingDirectory\"}):null,errorMessage,/*#__PURE__*/_jsxs(\"div\",{className:\"register-section1\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"span\",{children:\" *\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{name:\"name\",type:\"text\",placeholder:\"Name\",autoComplete:\"name\",value:this.state.name,onChange:this.handleChange,ref:input=>{this.inputToFocus=input;}}),this.state.errors.name.length>0&&this.state.errors.name.map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u2022 \",error]},index)),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Email Address:\",/*#__PURE__*/_jsx(\"span\",{children:\" *\"}),\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{name:\"email\",type:\"email\",placeholder:\"Email\",autoComplete:\"email\",value:this.state.email,onChange:this.handleChange}),this.state.errors.email.length>0&&this.state.errors.email.map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u2022 \",error]},index)),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"register-buttons\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"submit-btn-container\",children:[/*#__PURE__*/_jsx(LinkInClass,{value:\"Register\",type:\"button\",className:\"submit-btn\",onClick:this.handleSubmit}),\" \",/*#__PURE__*/_jsx(\"br\",{})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"vl\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-section2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Password:\",/*#__PURE__*/_jsx(\"span\",{children:\" *\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{name:\"password\",type:\"password\",placeholder:\"Password\",autoComplete:\"password\",value:this.state.password,onChange:this.handleChange}),this.state.errors.password.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"password-error-container\",children:this.state.errors.password.map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u2022 \",error]},index))}):null,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Confirm Password:\",/*#__PURE__*/_jsx(\"span\",{children:\" *\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{name:\"confirmPassword\",type:\"password\",placeholder:\"Confirm password\",autoComplete:\"confirmPassword\",value:this.state.confirmPassword,onChange:this.handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-profile-image\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Add a Profile Picture: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:this.handleFileChange})]}),/*#__PURE__*/_jsx(\"br\",{}),this.state.errors.confirmPassword.length>0&&this.state.errors.confirmPassword.map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u2022 \",error]},index)),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"register-buttons\",children:/*#__PURE__*/_jsx(\"div\",{className:\"register-btn-container\",children:/*#__PURE__*/_jsx(Link,{to:\"/AccountPage\",children:/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",children:\"Cancel\"})})})})]})]})}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(Footer,{})})]});}}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","ACCESS_LEVEL_ADMIN","SERVER_HOST","LinkInClass","NavBar","Footer","jsx","_jsx","jsxs","_jsxs","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","isNameValid","validateName","isEmailValid","validateEmail","isPasswordValid","validatePassword","isConfirmPasswordValid","validateConfirmPassword","formData","FormData","append","state","preventDefault","post","concat","email","password","headers","then","res","localStorage","data","accessLevel","profilePhoto","token","isRegistered","catch","err","wasSubmittedAtLeastOnce","console","log","confirmPassword","errors","test","push","trim","prevState","length","pattern","specialCharPattern","render","errorMessage","className","children","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","map","error","index","onClick"],"sources":["C:/Users/jamie/Desktop/CA2/NODEJS-ONLY/client/src/components/Login/Register.js"],"sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\r\nimport LinkInClass from \"../LinkInClass\";\r\nimport NavBar from \"../NavBar\";\r\nimport Footer from \"../Footer\";\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            isRegistered: false,\r\n            selectedFile: null,\r\n            wasSubmittedAtLeastOnce:false,\r\n            errors: { // used to keep track of current validation errors\r\n                name: [],\r\n                email: [],\r\n                password: [],\r\n                confirmPassword: []\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({selectedFile: e.target.files[0]})\r\n    }\r\n\r\n    // Client side validation for Registration page\r\n    // if all of these return true the data will be posted\r\n    validateName() {\r\n        const name = this.state.name\r\n        const errors = [];\r\n\r\n\r\n        if (/\\d/.test(name)) {\r\n            errors.push(\"Name cannot contain numbers\")\r\n        }\r\n        if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\r\n            errors.push(\"Name cannot contain special characters\")\r\n        }\r\n        if (!name.trim()) {\r\n            errors.push(\"Name cannot be empty\")\r\n        }\r\n\r\n        // update the state of name within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                name: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for name: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validateEmail() {\r\n        const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/\r\n        const email = this.state.email\r\n        const errors = []\r\n\r\n\r\n        if (!email.trim()) {\r\n            errors.push(\"Email cannot be empty\")\r\n        }\r\n        if (!pattern.test(email) && email.trim()) {\r\n            errors.push(\"Invalid email format\")\r\n        }\r\n\r\n        // update the state of email within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                email: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for email: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validatePassword() {\r\n        const specialCharPattern = /[!£_\"$*^&()+=#.-]/\r\n        const password = this.state.password\r\n        const errors = []\r\n\r\n\r\n        if (password.length < 8) {\r\n            errors.push(\"Password must be > 8 characters long\")\r\n        }\r\n        if (!/[0-9]/.test(password)) {\r\n            errors.push(\"Password must contain at least 1 number \")\r\n        }\r\n        if (!specialCharPattern.test(password)) {\r\n            errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\")\r\n        }\r\n\r\n        // update the state of password within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                password: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for password: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validateConfirmPassword() {\r\n        const errors = []\r\n\r\n\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            errors.push(\"Passwords do not match\")\r\n        }\r\n\r\n        // update the state of confirmPassword within errors with current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                confirmPassword: errors\r\n            }\r\n        }))\r\n\r\n        //console.log(\"Errors for confirmPassword: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let isNameValid = this.validateName()\r\n        let isEmailValid = this.validateEmail()\r\n        let isPasswordValid = this.validatePassword()\r\n        let isConfirmPasswordValid = this.validateConfirmPassword()\r\n        let formData = new FormData()\r\n        formData.append(\"profilePhoto\", this.state.selectedFile)\r\n        if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid) // if inputs have passed validation\r\n        {\r\n            e.preventDefault()\r\n\r\n            axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\r\n                .then(res => {\r\n                    // user successfully registered\r\n                            // console.log(\"User registered and logged in\")\r\n                            localStorage.name = res.data.name\r\n                            localStorage.accessLevel = res.data.accessLevel\r\n                            localStorage.profilePhoto = res.data.profilePhoto\r\n                            localStorage.token = res.data.token\r\n                            this.setState({isRegistered: true})\r\n                })\r\n                .catch(err =>\r\n                {\r\n                    this.setState({wasSubmittedAtLeastOnce: true})\r\n                })\r\n        } else {\r\n\r\n            console.log(\"Current values have not been posted\")\r\n        }\r\n        // console.log(this.validateName())\r\n        // console.log(this.state.errors.name)\r\n        // console.log(this.state.errors.email)\r\n        // console.log(this.state.errors.password)\r\n        // console.log(this.state.errors.confirmPassword)\r\n\r\n    }\r\n\r\n    render() {\r\n        let errorMessage = \"\";\r\n        if(this.state.wasSubmittedAtLeastOnce)\r\n        {\r\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"register-head-container\">\r\n                    <NavBar/>\r\n                </div>\r\n                <div className=\"register-container\">\r\n                    <div className=\"register-page-box\">\r\n                        <h1>CREATE YOUR ACCOUNT</h1>\r\n\r\n                        <form className=\"register-form\" noValidate={true} id=\"loginOrRegistrationForm\">\r\n                            {this.state.isRegistered ? <Redirect to=\"/TestingDirectory\"/> : null}\r\n                            {errorMessage}\r\n                            {/*  &#x2022; == unicode for bullet point  */}\r\n                            <div className={\"register-section1\"}>\r\n                                <label>Name:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    autoComplete=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                    ref={(input) => {\r\n                                        this.inputToFocus = input\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                <label>Email Address:<span> *</span> </label><br/>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/>\r\n                                <div className=\"register-buttons\">\r\n                                    <div className={\"submit-btn-container\"}>\r\n                                        <LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\"\r\n                                                     onClick={this.handleSubmit}/> <br/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"vl\"></div>\r\n                            <div className={\"register-section2\"}>\r\n                                <label>Password:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    autoComplete=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {this.state.errors.password.length > 0 ? (\r\n                                    <div className=\"password-error-container\">\r\n                                        {this.state.errors.password.map((error, index) => (\r\n                                            <div key={index}>\r\n                                                &#x2022; {error}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : null}\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                <label>Confirm Password:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password\"\r\n                                    autoComplete=\"confirmPassword\"\r\n                                    value={this.state.confirmPassword}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className={\"select-profile-image\"}>\r\n                                    <label>Add a Profile Picture: </label>\r\n                                    <input type=\"file\" onChange={this.handleFileChange}/>\r\n                                </div>\r\n                                <br/>\r\n                                {this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/><br/>\r\n                            </div>\r\n                            <div className=\"register-buttons\">\r\n                                {/*<LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\" onClick={this.handleSubmit}/> <br/>*/}\r\n                                <div className={\"register-btn-container\"}>\r\n                                    <Link to={\"/AccountPage\"}>\r\n                                        <button className={\"cancel-btn\"}>\r\n                                            Cancel\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                                {/*<Link className=\"red-button\" to={\"/AccountPage\"}>Cancel</Link>*/}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <footer>\r\n                    <Footer/>\r\n                </footer>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}