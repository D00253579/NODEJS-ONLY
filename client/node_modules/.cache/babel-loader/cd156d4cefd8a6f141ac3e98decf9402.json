{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\EditProduct.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"../NavBar\";\nexport default class EditProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        product: _objectSpread({}, prevState.product, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleCheckboxChange = e => {\n      const _e$target = e.target,\n            checked = _e$target.checked,\n            value = _e$target.value;\n\n      if (checked) {\n        // if checkbox is checked add it to sizes array in product state\n        this.setState(prevState => ({\n          product: _objectSpread({}, prevState.product, {\n            size: [...prevState.product.size, value]\n          })\n        }));\n      } else {\n        // if unchecked remove the value from the array\n        this.setState(prevState => ({\n          product: _objectSpread({}, prevState.product, {\n            size: prevState.product.size.filter(size => size !== size)\n          })\n        }));\n      }\n    };\n\n    this.validateInputs = product => {\n      let isValid = true; // true = valid\n\n      console.log(product.price); //console.log(\"Product: \", product)\n\n      if (!product.name.trim()) {\n        // name\n        isValid = false;\n        document.getElementById(\"nameInput\").classList.add(\"invalid-input\");\n        this.setState({\n          nameIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"nameInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          nameIsInvalid: false\n        });\n      }\n\n      if (!product.colour.trim()) {\n        // colour\n        isValid = false;\n        document.getElementById(\"colourInput\").classList.add(\"invalid-input\");\n        this.setState({\n          colourIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"colourInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          colourIsInvalid: false\n        });\n      }\n\n      if (product.size.length === 0) {\n        // size\n        isValid = false;\n        document.getElementById(\"sizeSelector\").classList.add(\"invalid-input\");\n        this.setState({\n          sizeIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"sizeSelector\").classList.remove(\"invalid-input\");\n        this.setState({\n          sizeIsInvalid: false\n        });\n      }\n\n      if (!String(product.price).trim()) {\n        // price\n        isValid = false;\n        document.getElementById(\"priceInput\").classList.add(\"invalid-input\");\n        this.setState({\n          priceIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"priceInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          priceIsInvalid: false\n        });\n      }\n\n      if (!product.gender.trim()) {\n        // gender\n        isValid = false;\n        document.getElementById(\"genderInput\").classList.add(\"invalid-input\");\n        this.setState({\n          genderIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"genderInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          genderIsInvalid: false\n        });\n      }\n\n      if (!product.category.trim()) {\n        // category\n        isValid = false;\n        document.getElementById(\"categoryInput\").classList.add(\"invalid-input\");\n        this.setState({\n          categoryIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"categoryInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          categoryIsInvalid: false\n        });\n      }\n\n      if (!product.brand.trim()) {\n        // brand\n        isValid = false;\n        document.getElementById(\"brandInput\").classList.add(\"invalid-input\");\n        this.setState({\n          brandIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"brandInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          brandIsInvalid: false\n        });\n      }\n\n      if (!isValid) {\n        // if inputs are invalid trigger visual response to let user know\n        this.setState({\n          inputsAreInvalid: true\n        });\n      } else {\n        this.setState({\n          inputsAreInvalid: false\n        });\n      }\n\n      return isValid;\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        product: this.state.defaultProduct\n      });\n    };\n\n    this.handleReturn = () => {\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.handleUpdateProduct = e => {\n      e.preventDefault(); // scroll back to the top of the form , take from https://www.w3schools.com/howto/howto_js_scroll_into_view.asp\n\n      const topOfForm = document.getElementById('top-of-form');\n      topOfForm.scrollIntoView();\n      let updatedProduct = {\n        name: this.state.product.name,\n        colour: this.state.product.colour,\n        size: this.state.product.size,\n        price: this.state.product.price,\n        gender: this.state.product.gender,\n        category: this.state.product.category,\n        brand: this.state.product.brand // if function returns false then one or more inputs are empty, if true send updated product to server\n\n      };\n\n      if (!this.validateInputs(updatedProduct)) {\n        console.log(\"TODO   Some inputs are invalid \");\n      } else {\n        axios.put(\"\".concat(SERVER_HOST, \"/products/\").concat(this.state.product._id), {\n          updatedProduct\n        }, {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {} else {\n              console.log(\"Updated product: \", updatedProduct);\n              this.setState({\n                redirectToDashboard: true\n              }); // after the update is complete redirect back to AdminDashboard\n            }\n          } else {\n            console.log(\"Product not updated\");\n          }\n        });\n      }\n    };\n\n    this.handleDeleteProduct = e => {\n      e.preventDefault();\n      const productID = this.props.match.params.id; //console.log(productID)\n\n      axios.delete(\"\".concat(SERVER_HOST, \"/products/\").concat(productID), {\n        headers: {\n          \"authorization\": localStorage.token\n        }\n      }).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {} else {\n            console.log(\"Product has been deleted\");\n          }\n        } else {\n          console.log(\"Product not deleted\");\n        }\n      });\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.state = {\n      defaultProduct: [],\n      redirectToDashboard: false,\n      inputsAreInvalid: false,\n      nameIsInvalid: false,\n      colourIsInvalid: false,\n      sizeIsInvalid: false,\n      priceIsInvalid: false,\n      categoryIsInvalid: false,\n      brandIsInInvalid: false,\n      stockIsInInvalid: false,\n      product: {\n        name: \"\",\n        colour: \"\",\n        size: [],\n        price: \"\",\n        gender: \"\",\n        category: \"\",\n        brand: \"\",\n        current_stock: \"\",\n        image_1: \"\",\n        image_2: \"\",\n        image_3: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    const productID = this.props.match.params.id; // get productID passed from redirect parameters\n    // console.log(productID)\n    // get the product with the matching id from database collection\n\n    axios.get(\"\".concat(SERVER_HOST, \"/products/\").concat(productID), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {} else {\n          console.log(\"Product found and displaying in EditProduct\");\n          this.setState({\n            product: res.data,\n            defaultProduct: res.data\n          }); // set state of product to response data\n        }\n      } else {\n        console.log(\"Product not found\");\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.product);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.state.redirectToDashboard ? React.createElement(Redirect, {\n      to: \"/AdminDashboard/AdminDashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      id: \"top-of-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"admin-edit-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Update Product\"), React.createElement(\"form\", {\n      className: \"edit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.state.inputsAreInvalid ? React.createElement(\"div\", {\n      className: \"err-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"One or more of the entries are empty. Please fill out all fields before updating the product.\")))) : null, React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"nameInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Name \", this.state.nameIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"nameInput\",\n      value: this.state.product.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"colourInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Colour \", this.state.colourIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"colour\",\n      id: \"colourInput\",\n      value: this.state.product.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"size-selector\",\n      id: \"sizeSelector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Available Sizes \", this.state.sizeIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"*\") : null), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Small\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"small\",\n      name: \"size\",\n      value: \"small\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Medium\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"medium\",\n      name: \"size\",\n      value: \"medium\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Large\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"large\",\n      name: \"size\",\n      value: \"large\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"priceInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Price \", this.state.priceIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      id: \"priceInput\",\n      value: this.state.product.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"genderInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Gender \", this.state.genderIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"gender\",\n      id: \"genderInput\",\n      value: this.state.product.gender,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"categoryInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Category \", this.state.categoryIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      id: \"categoryInput\",\n      value: this.state.product.category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"brandInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Brand \", this.state.brandIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"brand\",\n      id: \"brandInput\",\n      value: this.state.product.brand,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleDeleteProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: this.handleUpdateProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"button\", {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Return\")))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\EditProduct.js"],"names":["React","Component","axios","SERVER_HOST","Redirect","Navbar","EditProduct","constructor","props","handleChange","e","name","target","value","setState","prevState","product","handleCheckboxChange","checked","size","filter","validateInputs","isValid","console","log","price","trim","document","getElementById","classList","add","nameIsInvalid","remove","colour","colourIsInvalid","length","sizeIsInvalid","String","priceIsInvalid","gender","genderIsInvalid","category","categoryIsInvalid","brand","brandIsInvalid","inputsAreInvalid","handleReset","state","defaultProduct","handleReturn","redirectToDashboard","handleUpdateProduct","preventDefault","topOfForm","scrollIntoView","updatedProduct","put","_id","headers","localStorage","token","then","res","data","errorMessage","handleDeleteProduct","productID","match","params","id","delete","brandIsInInvalid","stockIsInInvalid","current_stock","image_1","image_2","image_3","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport axios from \"axios\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Navbar from \"../NavBar\";\r\n\r\nexport default class EditProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            defaultProduct : [],\r\n            redirectToDashboard: false,\r\n            inputsAreInvalid: false,\r\n            nameIsInvalid: false,\r\n            colourIsInvalid: false,\r\n            sizeIsInvalid: false,\r\n            priceIsInvalid: false,\r\n            categoryIsInvalid: false,\r\n            brandIsInInvalid: false,\r\n            stockIsInInvalid: false,\r\n            product : {\r\n                name: \"\",\r\n                colour: \"\",\r\n                size: [],\r\n                price: \"\",\r\n                gender: \"\",\r\n                category: \"\",\r\n                brand: \"\",\r\n                current_stock: \"\",\r\n                image_1: \"\",\r\n                image_2: \"\",\r\n                image_3: \"\"\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const productID = this.props.match.params.id // get productID passed from redirect parameters\r\n        // console.log(productID)\r\n\r\n        // get the product with the matching id from database collection\r\n        axios.get(`${SERVER_HOST}/products/${productID}`,{headers:{\"authorization\":localStorage.token}})\r\n            .then(res => {\r\n                if(res.data) {\r\n                    if(res.data.errorMessage) {\r\n\r\n                    } else {\r\n                        console.log(\"Product found and displaying in EditProduct\")\r\n                        this.setState({product: res.data,\r\n                                              defaultProduct: res.data}) // set state of product to response data\r\n                    }\r\n                } else {\r\n                    console.log(\"Product not found\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        this.setState((prevState) => ({\r\n            product: {\r\n                ...prevState.product,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    }\r\n    handleCheckboxChange = (e) => {\r\n        const {checked, value} = e.target\r\n        if(checked) { // if checkbox is checked add it to sizes array in product state\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    size: [...prevState.product.size, value]\r\n                }\r\n\r\n            }))\r\n\r\n        } else { // if unchecked remove the value from the array\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    size: prevState.product.size.filter(size => size !== size)\r\n                }\r\n            }))\r\n        }\r\n\r\n    }\r\n    validateInputs = (product) => {\r\n        let isValid = true // true = valid\r\n        console.log(product.price)\r\n        //console.log(\"Product: \", product)\r\n        if(!product.name.trim()) {              // name\r\n            isValid = false\r\n            document.getElementById(\"nameInput\").classList.add(\"invalid-input\")\r\n            this.setState({nameIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"nameInput\").classList.remove(\"invalid-input\")\r\n            this.setState({nameIsInvalid: false})\r\n        }\r\n\r\n        if(!product.colour.trim()) {            // colour\r\n            isValid = false\r\n            document.getElementById(\"colourInput\").classList.add(\"invalid-input\")\r\n            this.setState({colourIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"colourInput\").classList.remove(\"invalid-input\")\r\n            this.setState({colourIsInvalid: false})\r\n\r\n        }\r\n\r\n        if(product.size.length === 0) {         // size\r\n            isValid = false\r\n            document.getElementById(\"sizeSelector\").classList.add(\"invalid-input\")\r\n            this.setState({sizeIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"sizeSelector\").classList.remove(\"invalid-input\")\r\n            this.setState({sizeIsInvalid: false})\r\n\r\n        }\r\n\r\n        if(!String(product.price).trim()) {             // price\r\n            isValid = false\r\n            document.getElementById(\"priceInput\").classList.add(\"invalid-input\")\r\n            this.setState({priceIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"priceInput\").classList.remove(\"invalid-input\")\r\n            this.setState({priceIsInvalid: false})\r\n\r\n        }\r\n\r\n        if(!product.gender.trim()) {            // gender\r\n            isValid = false\r\n            document.getElementById(\"genderInput\").classList.add(\"invalid-input\")\r\n            this.setState({genderIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"genderInput\").classList.remove(\"invalid-input\")\r\n            this.setState({genderIsInvalid: false})\r\n\r\n        }\r\n\r\n        if(!product.category.trim()) {          // category\r\n            isValid = false\r\n            document.getElementById(\"categoryInput\").classList.add(\"invalid-input\")\r\n            this.setState({categoryIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"categoryInput\").classList.remove(\"invalid-input\")\r\n            this.setState({categoryIsInvalid: false})\r\n        }\r\n\r\n        if(!product.brand.trim()) {             // brand\r\n            isValid = false\r\n            document.getElementById(\"brandInput\").classList.add(\"invalid-input\")\r\n            this.setState({brandIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"brandInput\").classList.remove(\"invalid-input\")\r\n            this.setState({brandIsInvalid: false})\r\n\r\n        }\r\n\r\n        if(!isValid) { // if inputs are invalid trigger visual response to let user know\r\n            this.setState({inputsAreInvalid: true})\r\n        } else {\r\n            this.setState({inputsAreInvalid: false})\r\n        }\r\n\r\n        return isValid\r\n    }\r\n    handleReset = () => {\r\n        this.setState({product: this.state.defaultProduct})\r\n    }\r\n    handleReturn = () => {\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n    handleUpdateProduct = (e) => {\r\n        e.preventDefault()\r\n        // scroll back to the top of the form , take from https://www.w3schools.com/howto/howto_js_scroll_into_view.asp\r\n        const topOfForm = document.getElementById('top-of-form')\r\n        topOfForm.scrollIntoView()\r\n        let updatedProduct = {\r\n            name: this.state.product.name,\r\n            colour: this.state.product.colour,\r\n            size: this.state.product.size,\r\n            price: this.state.product.price,\r\n            gender: this.state.product.gender,\r\n            category: this.state.product.category,\r\n            brand: this.state.product.brand,\r\n        }\r\n\r\n        // if function returns false then one or more inputs are empty, if true send updated product to server\r\n        if(!this.validateInputs(updatedProduct)) {\r\n            console.log(\"TODO   Some inputs are invalid \")\r\n        } else {\r\n            axios.put(`${SERVER_HOST}/products/${this.state.product._id}`, {updatedProduct}, {headers:{\"authorization\":localStorage.token}})\r\n                .then((res) => {\r\n                    if (res.data) {\r\n                        if(res.data.errorMessage) {\r\n\r\n                        } else {\r\n                            console.log(\"Updated product: \",updatedProduct)\r\n                            this.setState({redirectToDashboard: true}) // after the update is complete redirect back to AdminDashboard\r\n                        }\r\n                    } else {\r\n                        console.log(\"Product not updated\")\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    handleDeleteProduct = (e) => {\r\n        e.preventDefault()\r\n        const productID = this.props.match.params.id\r\n        //console.log(productID)\r\n        axios.delete(`${SERVER_HOST}/products/${productID}`, {headers:{\"authorization\":localStorage.token}})\r\n            .then (res =>\r\n            {\r\n                if(res.data) {\r\n                    if(res.data.errorMessage) {\r\n\r\n                    } else {\r\n                        console.log(\"Product has been deleted\")\r\n                    }\r\n                } else {\r\n                    console.log(\"Product not deleted\")\r\n                }\r\n            })\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state.product)\r\n        return (\r\n\r\n            <div>\r\n                {this.state.redirectToDashboard ? <Redirect to={\"/AdminDashboard/AdminDashboard\"}/> : null }\r\n\r\n                <div className=\"admin-head-container\" id=\"top-of-form\">\r\n                    <Navbar/>\r\n                </div>\r\n                <div className=\"admin-edit-product\">\r\n                    <h1>Update Product</h1>\r\n                    <form className=\"edit-form\" >\r\n\r\n                        {this.state.inputsAreInvalid ?\r\n                            <div className=\"err-container\">\r\n                                <div>\r\n                                    <span className=\"err\">\r\n                                        <p>One or more of the entries are empty. Please fill out all fields before updating the product.</p>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"nameInput\">\r\n                                Name {this.state.nameIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"nameInput\"\r\n                                    value={this.state.product.name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"colourInput\">\r\n                                Colour {this.state.colourIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"colour\"\r\n                                    id=\"colourInput\"\r\n                                    value={this.state.product.colour}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <fieldset className=\"size-selector\" id=\"sizeSelector\">\r\n                                <legend  className=\"form-label\">\r\n                                    Available Sizes {this.state.sizeIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                </legend>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"small\">\r\n                                        Small\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"small\"\r\n                                            name=\"size\"\r\n                                            value=\"small\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"medium\">\r\n                                        Medium\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"medium\"\r\n                                            name=\"size\"\r\n                                            value=\"medium\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"large\">\r\n                                        Large\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"large\"\r\n                                            name=\"size\"\r\n                                            value=\"large\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"priceInput\">\r\n                                Price {this.state.priceIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"price\"\r\n                                    id=\"priceInput\"\r\n                                    value={this.state.product.price}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"genderInput\">\r\n                                Gender {this.state.genderIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"gender\"\r\n                                    id=\"genderInput\"\r\n                                    value={this.state.product.gender}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"categoryInput\">\r\n                                Category {this.state.categoryIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"category\"\r\n                                    id=\"categoryInput\"\r\n                                    value={this.state.product.category}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label className=\"form-label\" htmlFor=\"brandInput\">\r\n                                Brand {this.state.brandIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"brand\"\r\n                                    id=\"brandInput\"\r\n                                    value={this.state.product.brand}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"form-controls\">\r\n                            <button onClick={this.handleDeleteProduct}>Delete</button>\r\n                            <button onClick={this.handleUpdateProduct}>Update</button>\r\n                            <button onClick={this.handleReset}>Reset</button>\r\n                            <button onClick={this.handleReturn}>Return</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}