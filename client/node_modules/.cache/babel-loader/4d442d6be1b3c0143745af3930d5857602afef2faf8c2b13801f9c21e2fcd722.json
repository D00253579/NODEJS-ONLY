{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      let loginErrors = [];\n      e.preventDefault();\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n\n        axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.state.isPasswordWrong = true;\n            } else\n              // user successfully logged in\n              {\n                this.state.isPasswordWrong = false;\n                console.log(\"User logged in\");\n                localStorage.name = res.data.name;\n                localStorage.email = this.state.email;\n                localStorage.accessLevel = res.data.accessLevel;\n                localStorage.profilePhoto = res.data.profilePhoto;\n                localStorage.token = res.data.token;\n                localStorage.id = res.data._id;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Error logging in\");\n          }\n        });\n      } else {\n        console.log(\"login denied invalid credentials\");\n        // loginErrors.push(\"Entered email and/or password is incorrect\")\n        //\n        // this.setState(prevState => ({\n        //     errors: {\n        //         ...prevState.errors,\n        //         password: loginErrors\n        //     }\n        // }))\n        // this.setState(prevState => ({ // empty email errors so only the above error is displayed\n        //     errors: {\n        //         ...prevState.errors,\n        //         email: []\n        //     }\n        // }))\n      }\n    };\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get(`${SERVER_HOST}/users`).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          });\n          //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n  validateUserLogin() {\n    let canLogin = false;\n    let emailErrors = [];\n    let pwErrors = [];\n    let email = this.state.email;\n    let pw = this.state.password;\n    if (!email.trim()) {\n      emailErrors.push(\"Email cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: emailErrors\n      }\n    }));\n    if (!pw.trim()) {\n      pwErrors.push(\"Password cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: pwErrors\n      }\n    }));\n    if (emailErrors.length === 0 && pwErrors.length === 0) {\n      // if there are no errors\n      {\n        canLogin = true;\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            email: []\n          }\n        }));\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            password: []\n          }\n        }));\n      }\n    }\n    console.log(\"canLogin = \", canLogin);\n    return canLogin;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        noValidate: true,\n        id: \"loginOrRegistrationForm\",\n        children: [this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/TestingDirectory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 46\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          autoComplete: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u2022 \", error]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u2022 \", error]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkInClass, {\n          value: \"Login\",\n          className: \"green-button\",\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"red-button\",\n          to: \"/TestingDirectory\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testing-return\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"testing-red-button\",\n          to: \"/TestingDirectory`\",\n          children: \"RETURN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","SERVER_HOST","jsxDEV","_jsxDEV","login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","loginErrors","preventDefault","validateUserLogin","post","state","email","password","then","res","data","errorMessage","isPasswordWrong","console","log","localStorage","accessLevel","profilePhoto","token","id","_id","isLoggedIn","users","errors","componentDidMount","get","canLogin","emailErrors","pwErrors","pw","trim","push","prevState","length","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","to","type","placeholder","autoComplete","onChange","map","error","index","onClick"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/Login/Login.js"],"sourcesContent":[" import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../../components/LinkInClass\"\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\n\n\nexport default class login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false,\n            users: [],\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n\n    componentDidMount() {\n\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if(res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                        //console.log(\"users: \",this.state.users)\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n\n    }\n\n\n\n    handleChange = (e) =>\n    {\n        this.setState({[e.target.name]: e.target.value})\n\n    }\n\n\n    validateUserLogin() {\n        let canLogin = false;\n        let emailErrors = []\n        let pwErrors = []\n        let email = this.state.email\n        let pw = this.state.password\n        if(!email.trim())\n        {\n            emailErrors.push(\"Email cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                email: emailErrors\n            }\n        }))\n        if(!pw.trim())\n        {\n            pwErrors.push(\"Password cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                password: pwErrors\n            }\n        }))\n\n        if (emailErrors.length === 0 && pwErrors.length === 0)\n        { // if there are no errors\n            {\n                canLogin = true\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        email: []\n                    }\n                }))\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        password: []\n                    }\n                }))\n            }\n\n        }\n        console.log(\"canLogin = \", canLogin)\n        return canLogin;\n    }\n\n\n    handleSubmit = (e) => {\n        let loginErrors = []\n        e.preventDefault()\n\n        if(this.validateUserLogin()) { //if this returns true, user details passed validation, login user\n\n            axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`)\n\n                .then(res =>\n                {\n                    if(res.data)\n                    {\n                        if (res.data.errorMessage)\n                        {\n                            this.state.isPasswordWrong = true\n                        }\n                        else // user successfully logged in\n                        {\n                            this.state.isPasswordWrong = false\n\n\n                            console.log(\"User logged in\")\n                            localStorage.name = res.data.name\n                            localStorage.email = this.state.email\n                            localStorage.accessLevel = res.data.accessLevel\n                            localStorage.profilePhoto=res.data.profilePhoto\n                            localStorage.token = res.data.token\n                            localStorage.id = res.data._id\n\n                            this.setState({isLoggedIn: true})\n                        }\n                    } else {\n                        console.log(\"Error logging in\")\n                    }\n                })\n        } else {\n            console.log(\"login denied invalid credentials\")\n            // loginErrors.push(\"Entered email and/or password is incorrect\")\n            //\n            // this.setState(prevState => ({\n            //     errors: {\n            //         ...prevState.errors,\n            //         password: loginErrors\n            //     }\n            // }))\n            // this.setState(prevState => ({ // empty email errors so only the above error is displayed\n            //     errors: {\n            //         ...prevState.errors,\n            //         email: []\n            //     }\n            // }))\n        }\n    }\n\n\n\n\n\n    render()\n    {\n        return (\n\n            <div className=\"register-container\">\n                <h2>Login</h2>\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                    <input\n                        type = \"email\"\n                        name = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <input\n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/><br/>\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                </form>\n\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\n            </div>\n\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}