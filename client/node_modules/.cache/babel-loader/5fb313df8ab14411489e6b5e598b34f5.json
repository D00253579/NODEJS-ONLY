{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AddAddress.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport LinkInClass from \"./LinkInClass\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class AddAddress extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => ({\n        address: _objectSpread({}, prevState.address, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleReturn = () => {\n      this.setState({\n        redirectBackToProfile: true\n      });\n    };\n\n    this.validateInput = () => {\n      const currentInput = this.state.address;\n      let isValid = true; // ADDRESS LINE ONE\n\n      if (!currentInput.address_line_1.trim()) {\n        this.setState({\n          line1IsInvalid: true\n        });\n        document.getElementById(\"lineOneInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          line1IsInvalid: false\n        });\n        document.getElementById(\"lineOneInput\").classList.remove(\"invalid-input\");\n      } // ADDRESS LINE TWO\n\n\n      if (!currentInput.address_line_2.trim()) {\n        this.setState({\n          line2IsInvalid: true\n        });\n        document.getElementById(\"lineTwoInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          line2IsInvalid: false\n        });\n        document.getElementById(\"lineTwoInput\").classList.remove(\"invalid-input\");\n      } // CITY\n\n\n      if (!currentInput.city.trim()) {\n        this.setState({\n          cityIsInvalid: true\n        });\n        document.getElementById(\"cityInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          cityIsInvalid: false\n        });\n        document.getElementById(\"cityInput\").classList.remove(\"invalid-input\");\n      } // COUNTRY\n\n\n      if (!currentInput.country.trim()) {\n        this.setState({\n          countryIsInvalid: true\n        });\n        document.getElementById(\"countryInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          countryIsInvalid: false\n        });\n        document.getElementById(\"countryInput\").classList.remove(\"invalid-input\");\n      } // POSTCODE\n\n\n      if (!currentInput.post_code.trim()) {\n        this.setState({\n          postcodeIsInvalid: true\n        });\n        document.getElementById(\"postcodeInput\").classList.add(\"invalid-input\");\n        isValid = false;\n      } else {\n        this.setState({\n          postcodeIsInvalid: false\n        });\n        document.getElementById(\"postcodeInput\").classList.remove(\"invalid-input\");\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newAddress = this.state.address;\n      const id = this.state.user._id;\n\n      if (this.validateInput()) {\n        axios.put(\"\".concat(SERVER_HOST, \"/AddAddress/users/\").concat(id), {\n          newAddress\n        }).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(\"Error finding user profile\");\n            } else {\n              //console.log(\"Address added to profile\")\n              console.log(\"Address: \", res.data);\n              this.handleReturn();\n            }\n          }\n        });\n      } else {\n        console.log(\"inputs are invalid\");\n      }\n    };\n\n    this.state = {\n      user: [],\n      address: {\n        address_line_1: \"\",\n        address_line_2: \"\",\n        address_line_3: \"\",\n        city: \"\",\n        county: \"\",\n        country: \"\",\n        post_code: \"\"\n      },\n      line1IsInvalid: false,\n      line2IsInvalid: false,\n      line3IsInvalid: false,\n      cityIsInvalid: false,\n      countryIsInvalid: false,\n      postcodeIsInvalid: false,\n      redirectBackToProfile: false\n    };\n  } // Get specific user details to add their address\n\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/AddAddress/users/\").concat(localStorage.email), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(\"Error fetching user profile\");\n        } else {\n          console.log(\"User fetched: \", res.data);\n          this.setState({\n            user: res.data\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.redirectBackToProfile ? React.createElement(Redirect, {\n      to: \"/UserProfile/\".concat(localStorage.email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"address-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Anything marked \", React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"* \"), \" is a \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"mandatory\"), \" field\"), React.createElement(\"form\", {\n      className: \"address-form\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"* \"), \"Address Line 1 :\", React.createElement(\"input\", {\n      name: \"address_line_1\",\n      type: \"text\",\n      id: \"lineOneInput\",\n      placeholder: \"Line 1 \",\n      value: this.state.address.address_line_1,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lineTwoInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"* \"), \"Address Line 2 :\", React.createElement(\"input\", {\n      name: \"address_line_2\",\n      type: \"text\",\n      id: \"lineTwoInput\",\n      placeholder: \"Line 2\",\n      value: this.state.address.address_line_2,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lineThreeInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Address Line 3 :\", React.createElement(\"input\", {\n      name: \"address_line_3\",\n      type: \"text\",\n      id: \"lineThreeInput\",\n      placeholder: \"Line 3\",\n      autoComplete: \"address_line_3\",\n      value: this.state.address.address_line_3,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"cityInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"* \"), \"City :\", React.createElement(\"input\", {\n      name: \"city\",\n      type: \"text\",\n      id: \"cityInput\",\n      placeholder: \"City\",\n      autoComplete: \"city\",\n      value: this.state.address.city,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"countyInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"County:\", React.createElement(\"input\", {\n      name: \"county\",\n      type: \"text\",\n      id: \"countyInput\",\n      placeholder: \"County\",\n      autoComplete: \"county\",\n      value: this.state.address.county,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"countryInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"* \"), \"Country :\", React.createElement(\"input\", {\n      name: \"country\",\n      type: \"text\",\n      id: \"countryInput\",\n      placeholder: \"Country\",\n      autoComplete: \"country\",\n      value: this.state.address.country,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"address-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"postcodeInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"* \"), \"Postcode :\", React.createElement(\"input\", {\n      name: \"post_code\",\n      type: \"text\",\n      id: \"postcodeInput\",\n      placeholder: \"Postcode\",\n      autoComplete: \"postcode\",\n      value: this.state.address.post_code,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(LinkInClass, {\n      value: \"Add Shipping Address\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Return\")))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AddAddress.js"],"names":["React","Component","Redirect","NavBar","LinkInClass","axios","SERVER_HOST","AddAddress","constructor","props","handleChange","e","target","name","value","setState","prevState","address","handleReturn","redirectBackToProfile","validateInput","currentInput","state","isValid","address_line_1","trim","line1IsInvalid","document","getElementById","classList","add","remove","address_line_2","line2IsInvalid","city","cityIsInvalid","country","countryIsInvalid","post_code","postcodeIsInvalid","handleSubmit","preventDefault","newAddress","id","user","_id","put","then","res","data","errorMessage","console","log","address_line_3","county","line3IsInvalid","componentDidMount","get","localStorage","email","headers","token","render","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport LinkInClass from \"./LinkInClass\";\r\nimport axios from \"axios\";\r\nimport {SERVER_HOST} from \"../config/global_constants\";\r\n\r\nexport default class AddAddress extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n\r\n            user: [],\r\n            address: {\r\n                address_line_1: \"\",\r\n                address_line_2: \"\",\r\n                address_line_3: \"\",\r\n                city: \"\",\r\n                county: \"\",\r\n                country: \"\",\r\n                post_code: \"\"\r\n            },\r\n            line1IsInvalid: false,\r\n            line2IsInvalid: false,\r\n            line3IsInvalid: false,\r\n            cityIsInvalid: false,\r\n            countryIsInvalid: false,\r\n            postcodeIsInvalid: false,\r\n            redirectBackToProfile: false\r\n        }\r\n    }\r\n\r\n    // Get specific user details to add their address\r\n    componentDidMount() {\r\n        axios.get(`${SERVER_HOST}/AddAddress/users/${localStorage.email}`, {headers:{\"authorization\":localStorage.token}})\r\n            .then((res => {\r\n                if(res.data){\r\n                    if(res.data.errorMessage) {\r\n                        console.log(\"Error fetching user profile\")\r\n                    } else {\r\n                        console.log(\"User fetched: \", res.data)\r\n                        this.setState({user: res.data})\r\n                    }\r\n                }\r\n            }))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {name, value} = e.target\r\n        this.setState(prevState => ({\r\n            address: {\r\n                ...prevState.address,\r\n                [name]: value\r\n            }\r\n        }));\r\n    }\r\n    handleReturn = () => {\r\n        this.setState({redirectBackToProfile: true})\r\n    }\r\n\r\n    validateInput = () => {\r\n        const currentInput = this.state.address\r\n        let isValid = true\r\n\r\n        // ADDRESS LINE ONE\r\n        if(!currentInput.address_line_1.trim()) {\r\n            this.setState({line1IsInvalid: true})\r\n            document.getElementById(\"lineOneInput\").classList.add(\"invalid-input\")\r\n            isValid = false\r\n        } else {\r\n            this.setState({line1IsInvalid: false})\r\n            document.getElementById(\"lineOneInput\").classList.remove(\"invalid-input\")\r\n        }\r\n\r\n        // ADDRESS LINE TWO\r\n        if(!currentInput.address_line_2.trim()) {\r\n            this.setState({line2IsInvalid: true})\r\n            document.getElementById(\"lineTwoInput\").classList.add(\"invalid-input\")\r\n            isValid = false\r\n        } else {\r\n            this.setState({line2IsInvalid: false})\r\n            document.getElementById(\"lineTwoInput\").classList.remove(\"invalid-input\")\r\n\r\n        }\r\n\r\n        // CITY\r\n        if(!currentInput.city.trim()) {\r\n            this.setState({cityIsInvalid: true})\r\n            document.getElementById(\"cityInput\").classList.add(\"invalid-input\")\r\n            isValid = false\r\n        } else {\r\n            this.setState({cityIsInvalid: false})\r\n            document.getElementById(\"cityInput\").classList.remove(\"invalid-input\")\r\n        }\r\n\r\n        // COUNTRY\r\n        if(!currentInput.country.trim()) {\r\n            this.setState({countryIsInvalid: true})\r\n            document.getElementById(\"countryInput\").classList.add(\"invalid-input\")\r\n            isValid = false\r\n        } else {\r\n            this.setState({countryIsInvalid: false})\r\n            document.getElementById(\"countryInput\").classList.remove(\"invalid-input\")\r\n\r\n        }\r\n\r\n        // POSTCODE\r\n        if(!currentInput.post_code.trim()) {\r\n            this.setState({postcodeIsInvalid: true})\r\n            document.getElementById(\"postcodeInput\").classList.add(\"invalid-input\")\r\n            isValid = false\r\n        } else {\r\n            this.setState({postcodeIsInvalid: false})\r\n            document.getElementById(\"postcodeInput\").classList.remove(\"invalid-input\")\r\n\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n\r\n    handleSubmit=(e)=> {\r\n        e.preventDefault()\r\n        const newAddress = this.state.address\r\n        const id = this.state.user._id\r\n\r\n        if(this.validateInput()) {\r\n            axios.put(`${SERVER_HOST}/AddAddress/users/${id}`, {newAddress})\r\n                .then(res => {\r\n                    if(res.data) {\r\n                        if(res.data.errorMessage) {\r\n                            console.log(\"Error finding user profile\")\r\n                        } else {\r\n                            //console.log(\"Address added to profile\")\r\n                            console.log(\"Address: \", res.data)\r\n                            this.handleReturn()\r\n                        }\r\n                    }\r\n                })\r\n        } else {\r\n            console.log(\"inputs are invalid\")\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.redirectBackToProfile ? <Redirect to={`/UserProfile/${localStorage.email}`}/> : null}\r\n\r\n                <div className=\"admin-head-container\">\r\n                    <NavBar/>\r\n                </div>\r\n\r\n                <div className=\"address-container\">\r\n                    <h2>Address</h2>\r\n                    <p>Anything marked <span className=\"red-text\">* </span> is a <b>mandatory</b> field</p>\r\n\r\n                    <form className=\"address-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n\r\n                        <div className=\"input-container\">\r\n\r\n                            <div className=\"left\">\r\n                                <div className=\"address-input\">\r\n                                    <label>\r\n                                        <span className=\"red-text\">* </span>Address Line 1 :\r\n                                        <input\r\n                                            name=\"address_line_1\"\r\n                                            type=\"text\"\r\n                                            id=\"lineOneInput\"\r\n                                            placeholder = \"Line 1 \"\r\n                                            value = {this.state.address.address_line_1}\r\n                                            onChange = {this.handleChange}\r\n                                            ref = {(input) => { this.inputToFocus = input }}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor={\"lineTwoInput\"} >\r\n                                        <span className=\"red-text\">* </span>Address Line 2 :\r\n                                        <input\r\n                                            name=\"address_line_2\"\r\n                                            type=\"text\"\r\n                                            id=\"lineTwoInput\"\r\n                                            placeholder = \"Line 2\"\r\n                                            value = {this.state.address.address_line_2}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor={\"lineThreeInput\"}>\r\n                                        Address Line 3 :\r\n                                        <input\r\n                                            name=\"address_line_3\"\r\n                                            type=\"text\"\r\n                                            id=\"lineThreeInput\"\r\n                                            placeholder = \"Line 3\"\r\n                                            autoComplete=\"address_line_3\"\r\n                                            value = {this.state.address.address_line_3}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor=\"cityInput\">\r\n                                        <span className=\"red-text\">* </span>City :\r\n                                        <input\r\n                                            name=\"city\"\r\n                                            type=\"text\"\r\n                                            id=\"cityInput\"\r\n                                            placeholder = \"City\"\r\n                                            autoComplete=\"city\"\r\n                                            value = {this.state.address.city}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"right\">\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor=\"countyInput\">\r\n                                        County:\r\n                                        <input\r\n                                            name=\"county\"\r\n                                            type=\"text\"\r\n                                            id=\"countyInput\"\r\n                                            placeholder = \"County\"\r\n                                            autoComplete=\"county\"\r\n                                            value = {this.state.address.county}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor=\"countryInput\">\r\n                                        <span className=\"red-text\">* </span>Country :\r\n                                        <input\r\n                                            name=\"country\"\r\n                                            type=\"text\"\r\n                                            id=\"countryInput\"\r\n                                            placeholder = \"Country\"\r\n                                            autoComplete=\"country\"\r\n                                            value = {this.state.address.country}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"address-input\">\r\n                                    <label htmlFor=\"postcodeInput\">\r\n                                        <span className=\"red-text\">* </span>Postcode :\r\n                                        <input\r\n                                            name=\"post_code\"\r\n                                            type=\"text\"\r\n                                            id=\"postcodeInput\"\r\n                                            placeholder = \"Postcode\"\r\n                                            autoComplete=\"postcode\"\r\n                                            value = {this.state.address.post_code}\r\n                                            onChange = {this.handleChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <LinkInClass value=\"Add Shipping Address\" className=\"green-button\" onClick={this.handleSubmit} /> <br/>\r\n                            <button onClick={this.handleReturn}>Return</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        )}\r\n}"]},"metadata":{},"sourceType":"module"}