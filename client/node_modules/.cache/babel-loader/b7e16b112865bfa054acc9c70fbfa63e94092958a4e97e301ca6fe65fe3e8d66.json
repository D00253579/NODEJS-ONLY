{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AdminDashboard/UserTableRow.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserTableRow extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRowClick = () => {\n      this.setState({\n        rowIsClicked: true\n      });\n    };\n    this.convertLevelToString = accessLevel => {\n      let returnStr = \"\";\n      if (accessLevel === 1) {\n        returnStr = \"Customer\";\n      } else if (accessLevel === 2) {\n        returnStr = \"Admin\";\n      } else {\n        returnStr = \"0\";\n      }\n      return returnStr;\n    };\n    this.state = {\n      rowIsClicked: false\n    };\n  }\n  render() {\n    console.log(this.props.users.address.country);\n    const {\n      name,\n      email,\n      accessLevel\n    } = this.props.users;\n    return this.state.rowIsClicked ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/AdminDashboard/AdminProfileView/${this.props.users._id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: this.handleRowClick,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.convertLevelToString(accessLevel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.rowNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","jsxDEV","_jsxDEV","UserTableRow","constructor","props","handleRowClick","setState","rowIsClicked","convertLevelToString","accessLevel","returnStr","state","render","console","log","users","address","country","name","email","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","rowNum"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AdminDashboard/UserTableRow.js"],"sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect} from \"react-router-dom\";\n\nexport default class UserTableRow extends Component\n{\n    constructor(props) {\n        super(props)\n        this.state = {\n            rowIsClicked: false\n        }\n    }\n\n\n\n    handleRowClick = () => {\n        this.setState({rowIsClicked: true})\n    }\n\n    convertLevelToString = (accessLevel) => {\n        let returnStr = \"\"\n        if(accessLevel === 1) {\n            returnStr = \"Customer\"\n        } else if (accessLevel === 2) {\n            returnStr = \"Admin\"\n        } else {\n            returnStr = \"0\"\n        }\n        return returnStr\n    }\n\n    render() {\n        console.log(this.props.users.address.country)\n        const {\n            name,\n            email,\n            accessLevel\n        } = this.props.users;\n\n        return (\n            this.state.rowIsClicked ? (<Redirect to={`/AdminDashboard/AdminProfileView/${this.props.users._id}`} />\n            ) : (\n                <tr onClick={this.handleRowClick}>\n                    <td>{name}</td>\n                    <td>{email}</td>\n                    <td>{this.convertLevelToString(accessLevel)}</td>\n                    <td></td>\n                    <td>{this.props.rowNum}</td>\n\n                </tr>\n            )\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,QAAQ,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,MAAMC,YAAY,SAASJ,SAAS,CACnD;EACIK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAA,KAQhBC,cAAc,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAAC;QAACC,YAAY,EAAE;MAAI,CAAC,CAAC;IACvC,CAAC;IAAA,KAEDC,oBAAoB,GAAIC,WAAW,IAAK;MACpC,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAGD,WAAW,KAAK,CAAC,EAAE;QAClBC,SAAS,GAAG,UAAU;MAC1B,CAAC,MAAM,IAAID,WAAW,KAAK,CAAC,EAAE;QAC1BC,SAAS,GAAG,OAAO;MACvB,CAAC,MAAM;QACHA,SAAS,GAAG,GAAG;MACnB;MACA,OAAOA,SAAS;IACpB,CAAC;IArBG,IAAI,CAACC,KAAK,GAAG;MACTJ,YAAY,EAAE;IAClB,CAAC;EACL;EAoBAK,MAAMA,CAAA,EAAG;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAACW,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC;IAC7C,MAAM;MACFC,IAAI;MACJC,KAAK;MACLV;IACJ,CAAC,GAAG,IAAI,CAACL,KAAK,CAACW,KAAK;IAEpB,OACI,IAAI,CAACJ,KAAK,CAACJ,YAAY,gBAAIN,OAAA,CAACF,QAAQ;MAACqB,EAAE,EAAG,oCAAmC,IAAI,CAAChB,KAAK,CAACW,KAAK,CAACM,GAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnGxB,OAAA;MAAIyB,OAAO,EAAE,IAAI,CAACrB,cAAe;MAAAsB,QAAA,gBAC7B1B,OAAA;QAAA0B,QAAA,EAAKT;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfxB,OAAA;QAAA0B,QAAA,EAAKR;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBxB,OAAA;QAAA0B,QAAA,EAAK,IAAI,CAACnB,oBAAoB,CAACC,WAAW;MAAC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDxB,OAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QAAA0B,QAAA,EAAK,IAAI,CAACvB,KAAK,CAACwB;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CACP;EAET;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}