{"ast":null,"code":"import _defineProperty from \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../../components/LinkInClass\";\nimport { ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST } from \"../../config/global_constants\";\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      this.validateUserLogin();\n    };\n\n    this.validateUserLogin = () => {\n      let canLogin = false;\n      let email = this.state.email;\n      let password = this.state.password;\n\n      if (!email.trim() || !password.trim()) {\n        // if either input is empty\n        if (!email.trim()) {\n          // if the email input is empty update the email errors state with this message\n          //console.log(\"email is empty\")\n          this.setState(prevState => ({\n            errors: _objectSpread({}, prevState.errors, {\n              email: [\"Email cannot be empty\"]\n            })\n          }));\n        } else {\n          this.setState(prevState => ({\n            // else set the state of errors.email to an empty array\n            errors: _objectSpread({}, prevState.errors, {\n              email: []\n            })\n          }));\n        }\n\n        if (!password.trim()) {\n          // if the password input is empty update the password errors state with this message\n          //console.log(\"password is empty\")\n          this.setState(prevState => ({\n            errors: _objectSpread({}, prevState.errors, {\n              password: [\"Password cannot be empty\"]\n            })\n          }));\n        } else {\n          this.setState(prevState => ({\n            // else set the state of errors.password to an empty array\n            errors: _objectSpread({}, prevState.errors, {\n              password: []\n            })\n          }));\n        }\n      } else {\n        canLogin = true;\n      }\n\n      console.log(\"canLogin = \", canLogin);\n      console.log(this.state.errors.email);\n      console.log(this.state.errors.password);\n      return canLogin;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n        axios.post(\"\".concat(SERVER_HOST, \"/users/Login/Login/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.setState(prevState => ({\n                errors: _objectSpread({}, prevState.errors, {\n                  password: res.data.errorMessage\n                })\n              }));\n              console.log(res.data.errorMessage);\n            } else // user successfully logged in\n              {\n                if (res.data.email === \"admin@admin.com\") {\n                  res.data.accessLevel = ACCESS_LEVEL_ADMIN;\n                }\n\n                console.log(\"User logged in\");\n                sessionStorage.name = res.data.name;\n                sessionStorage.accessLevel = res.data.accessLevel;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Login failed\");\n          }\n        });\n      } else {\n        console.log(\"details incorrect\");\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          }); //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: \"login-form\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Login\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory`\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"RETURN\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/Login/Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_ADMIN","ACCESS_LEVEL_GUEST","SERVER_HOST","login","constructor","props","handleChange","e","setState","target","name","value","validateUserLogin","canLogin","email","state","password","trim","prevState","errors","console","log","handleSubmit","preventDefault","post","then","res","data","errorMessage","accessLevel","sessionStorage","isLoggedIn","users","componentDidMount","get","render","length","map","error","index"],"mappings":"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","sourcesContent":[" import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../../components/LinkInClass\"\nimport {ACCESS_LEVEL_ADMIN, ACCESS_LEVEL_GUEST, SERVER_HOST} from \"../../config/global_constants\"\n\n\nexport default class login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false,\n            users: [],\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n    componentDidMount() {\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res =>\n            {\n                if(res.data)\n                {\n                    if(res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                        //console.log(\"users: \",this.state.users)\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n\n    }\n\n\n    handleChange = (e) =>\n    {\n        this.setState({[e.target.name]: e.target.value})\n        this.validateUserLogin();\n    }\n\n    validateUserLogin = ()=> {\n        let canLogin = false;\n        let email = this.state.email;\n        let password= this.state.password\n\n\n        if(!email.trim() || !password.trim()){ // if either input is empty\n\n            if(!email.trim()) {     // if the email input is empty update the email errors state with this message\n                //console.log(\"email is empty\")\n                this.setState(prevState => ({\n                    errors: {\n                        ...prevState.errors,\n                        email: [\"Email cannot be empty\"]\n                    }\n                }))\n            } else {\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        email: []\n                    }\n                }))\n            }\n\n            if(!password.trim()) {  // if the password input is empty update the password errors state with this message\n                //console.log(\"password is empty\")\n                this.setState(prevState => ({\n                    errors: {\n                        ...prevState.errors,\n                        password: [\"Password cannot be empty\"]\n                    }\n                }))\n            } else {\n                this.setState(prevState => ({ // else set the state of errors.password to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        password: []\n                    }\n                }))\n            }\n        } else {\n            canLogin = true\n        }\n        console.log(\"canLogin = \", canLogin)\n        console.log(this.state.errors.email)\n        console.log(this.state.errors.password)\n        return canLogin;\n    }\n\n\n    handleSubmit = (e) =>\n    {\n        e.preventDefault()\n\n        if(this.validateUserLogin()) { //if this returns true, user details passed validation, login user\n            axios.post(`${SERVER_HOST}/users/Login/Login/${this.state.email}/${this.state.password}`)\n                .then(res =>\n                {\n                    if(res.data)\n                    {\n                        if (res.data.errorMessage)\n                        {\n                            this.setState(prevState => ({\n                                errors: {\n                                    ...prevState.errors,\n                                    password: res.data.errorMessage\n                                }\n                            }))\n                            console.log(res.data.errorMessage)\n                        }\n                        else // user successfully logged in\n                        {\n                            if (res.data.email===\"admin@admin.com\"){\n                                res.data.accessLevel=ACCESS_LEVEL_ADMIN\n                            }\n                            console.log(\"User logged in\")\n                            sessionStorage.name=res.data.name\n                            sessionStorage.accessLevel=res.data.accessLevel\n\n                            this.setState({isLoggedIn:true})\n                        }\n                    }\n                    else\n                    {\n                        console.log(\"Login failed\")\n                    }\n                })\n        } else {\n            console.log(\"details incorrect\")\n        }\n\n    }\n\n\n    render()\n    {\n        return (\n            <div className=\"register-container\">\n                <h2>Login</h2>\n                <form className=\"login-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n                    {this.state.isLoggedIn ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                    <input\n                        type = \"email\"\n                        name = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <input\n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\n                        <div key={index} className=\"error-message\">\n                            &#x2022; {error}\n                        </div>\n                    ))}\n                    <br/>\n\n                    <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/><br/>\n                    <Link className=\"red-button\" to={\"/TestingDirectory\"}>Cancel</Link>\n                </form>\n\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory`\"}>RETURN</Link></div>\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}