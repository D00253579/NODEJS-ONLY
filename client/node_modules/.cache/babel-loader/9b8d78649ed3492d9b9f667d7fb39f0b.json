{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\CreateProduct.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport NavBar from \"../NavBar\";\nimport { Redirect } from \"react-router-dom\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport axios from \"axios\";\nimport MainPage from \"../MainPage\";\nexport default class CreateProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        product: _objectSpread({}, prevState.product, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFiles: e.target.files\n      });\n    };\n\n    this.handleCheckboxChange = e => {\n      const _e$target = e.target,\n            checked = _e$target.checked,\n            value = _e$target.value;\n\n      if (checked) {\n        // if checkbox is checked add it to sizes array in product state\n        this.setState(prevState => ({\n          product: _objectSpread({}, prevState.product, {\n            size: [...prevState.product.size, value]\n          })\n        }));\n      } else {\n        // if unchecked remove the value from the array\n        this.setState(prevState => ({\n          product: _objectSpread({}, prevState.product, {\n            size: prevState.product.size.filter(size => size !== size)\n          })\n        }));\n      }\n    };\n\n    this.handleReturn = () => {\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.handleClear = () => {\n      const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n      checkboxes.forEach(checkbox => {\n        // uncheck all checkboxes\n        checkbox.checked = false;\n      });\n      this.setState({\n        product: this.state.defaultProduct\n      });\n    };\n\n    this.validateInputs = () => {\n      let isValid = true; // true = valid\n\n      const product = this.state.product; //console.log(\"Product: \", product)\n\n      if (!product.name.trim()) {\n        // name\n        isValid = false;\n        document.getElementById(\"nameInput\").classList.add(\"invalid-input\");\n        this.setState({\n          nameIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"nameInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          nameIsInvalid: false\n        });\n      }\n\n      if (!product.colour.trim()) {\n        // colour\n        isValid = false;\n        document.getElementById(\"colourInput\").classList.add(\"invalid-input\");\n        this.setState({\n          colourIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"colourInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          colourIsInvalid: false\n        });\n      }\n\n      if (product.size.length === 0) {\n        // size\n        isValid = false;\n        document.getElementById(\"sizeSelector\").classList.add(\"invalid-input\");\n        this.setState({\n          sizeIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"sizeSelector\").classList.remove(\"invalid-input\");\n        this.setState({\n          sizeIsInvalid: false\n        });\n      }\n\n      if (!product.price.trim()) {\n        // price\n        isValid = false;\n        document.getElementById(\"priceInput\").classList.add(\"invalid-input\");\n        this.setState({\n          priceIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"priceInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          priceIsInvalid: false\n        });\n      }\n\n      if (!product.gender.trim()) {\n        // gender\n        isValid = false;\n        document.getElementById(\"genderInput\").classList.add(\"invalid-input\");\n        this.setState({\n          genderIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"genderInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          genderIsInvalid: false\n        });\n      }\n\n      if (!product.category.trim()) {\n        // category\n        isValid = false;\n        document.getElementById(\"categoryInput\").classList.add(\"invalid-input\");\n        this.setState({\n          categoryIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"categoryInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          categoryIsInvalid: false\n        });\n      }\n\n      if (!product.brand.trim()) {\n        // brand\n        isValid = false;\n        document.getElementById(\"brandInput\").classList.add(\"invalid-input\");\n        this.setState({\n          brandIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"brandInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          brandIsInvalid: false\n        });\n      }\n\n      if (!product.current_stock.trim()) {\n        // current_stock\n        isValid = false;\n        document.getElementById(\"stockInput\").classList.add(\"invalid-input\");\n        this.setState({\n          stockIsInvalid: true\n        });\n      } else {\n        document.getElementById(\"stockInput\").classList.remove(\"invalid-input\");\n        this.setState({\n          stockIsInvalid: false\n        });\n      } //console.log(this.state.products)\n      // Validate Product ID to check if it's already assigned to a product\n\n\n      const isIdInvalid = this.state.products.some(p => p.product_id === product.product_id);\n\n      if (isIdInvalid) {\n        document.getElementById(\"idInput\").classList.add(\"invalid-input\");\n        this.setState({\n          idIsInvalid: true,\n          idAlreadyAssigned: true,\n          inputErrMessage: \"Product ID \".concat(product.product_id, \" is already assigned to a product.\")\n        });\n        isValid = false;\n      } else {\n        if (!product.product_id.trim()) {\n          document.getElementById(\"idInput\").classList.add(\"invalid-input\");\n        } else {\n          document.getElementById(\"idInput\").classList.remove(\"invalid-input\");\n        }\n\n        this.setState({\n          idIsInvalid: !product.product_id.trim(),\n          idAlreadyAssigned: false,\n          inputErrMessage: \"\"\n        });\n      }\n\n      if (!isValid) {\n        // if inputs are invalid trigger visual response to let user know\n        this.setState({\n          inputsAreInvalid: true\n        });\n      } else {\n        this.setState({\n          inputsAreInvalid: false\n        });\n      }\n\n      return isValid;\n    };\n\n    this.handleCreateProduct = e => {\n      e.preventDefault(); // scroll back to the top of the form , take from https://www.w3schools.com/howto/howto_js_scroll_into_view.asp\n\n      const topOfForm = document.getElementById('top-of-form');\n      topOfForm.scrollIntoView();\n      console.log(\"Token: \", localStorage.token);\n      console.log(\"Product: \", this.state.product);\n      console.log(\"Inputs are valid: \", this.validateInputs());\n\n      if (this.validateInputs()) {\n        let formData = new FormData();\n        formData.append(\"product_id\", this.state.product.product_id);\n        formData.append(\"name\", this.state.product.name);\n        formData.append(\"colour\", this.state.product.colour);\n        formData.append(\"size\", this.state.product.size);\n        formData.append(\"price\", this.state.product.price);\n        formData.append(\"gender\", this.state.product.gender);\n        formData.append(\"category\", this.state.product.category);\n        formData.append(\"brand\", this.state.product.brand);\n\n        if (this.state.selectedFiles) {\n          for (let i = 0; i < this.state.selectedFiles.length; i++) {\n            formData.append(\"photos\", this.state.selectedFiles[i]);\n          }\n        } // const createdProduct = this.state.product;\n\n\n        axios.post(\"\".concat(SERVER_HOST, \"/products\"), formData, {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(\"Product NOT created\");\n            } else {\n              console.log(\"Product created: \", formData);\n              this.handleReturn();\n            }\n          } else {\n            console.log(\"No response\");\n          }\n        });\n      } else {\n        console.log(\"Inputs are invalid\");\n      }\n    };\n\n    this.state = {\n      defaultProduct: [],\n      products: [],\n      redirectToDashboard: false,\n      inputsAreInvalid: false,\n      idIsInvalid: false,\n      idAlreadyAssigned: false,\n      nameIsInvalid: false,\n      colourIsInvalid: false,\n      sizeIsInvalid: false,\n      priceIsInvalid: false,\n      categoryIsInvalid: false,\n      brandIsInvalid: false,\n      stockIsInInvalid: false,\n      inputErrMessage: \"\",\n      product: {\n        product_id: \"\",\n        name: \"\",\n        colour: \"\",\n        size: [],\n        price: \"\",\n        gender: \"\",\n        category: \"\",\n        brand: \"\",\n        current_stock: \"\",\n        selectedFiles: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Fetch products in the parent component\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {} else {\n          console.log(\"Records read to Admin dashboard\");\n          this.setState({\n            products: res.data\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    console.log(\"idIsInvalid: \", this.state.idIsInvalid);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, this.state.redirectToDashboard ? React.createElement(Redirect, {\n      to: \"/AdminDashboard/AdminDashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      id: \"top-of-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"admin-create-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Create Product\"), React.createElement(\"form\", {\n      className: \"create-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.inputsAreInvalid ? React.createElement(\"div\", {\n      className: \"err-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"One or more of the entries are empty. Please fill out all fields before publishing the product.\")))) : null, React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"stockInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Inbound Stock \", this.state.stockIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"current_stock\",\n      id: \"stockInput\",\n      value: this.state.product.current_stock,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"idInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Product ID \", this.state.idIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"product_id\",\n      id: \"idInput\",\n      value: this.state.product.product_id,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), \" \", this.state.idAlreadyAssigned ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, this.state.inputErrMessage) : null)), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"nameInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Name \", this.state.nameIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"nameInput\",\n      value: this.state.product.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"colourInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Colour \", this.state.colourIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"colour\",\n      id: \"colourInput\",\n      value: this.state.product.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"size-selector\",\n      id: \"sizeSelector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Available Sizes \", this.state.sizeIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"*\") : null), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Small\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"small\",\n      name: \"size\",\n      value: \"small\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Medium\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"medium\",\n      name: \"size\",\n      value: \"medium\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"size-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Large\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"large\",\n      name: \"size\",\n      value: \"large\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"priceInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Price \", this.state.priceIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      id: \"priceInput\",\n      value: this.state.product.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"genderInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Gender \", this.state.genderIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"gender\",\n      id: \"genderInput\",\n      value: this.state.product.gender,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"categoryInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Category \", this.state.categoryIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      id: \"categoryInput\",\n      value: this.state.product.category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"brandInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Brand \", this.state.brandIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"brand\",\n      id: \"brandInput\",\n      value: this.state.product.brand,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"create-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      htmlFor: \"brandInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Brand \", this.state.brandIsInvalid ? React.createElement(\"span\", {\n      className: \"err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"*\") : null, React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: this.handleFileChange,\n      name: \"photos\",\n      id: \"photoInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), React.createElement(MainPage, {\n      photos: this.state.selectedFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      onClick: this.handleCreateProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"Create\"), React.createElement(\"button\", {\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Return\")))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\CreateProduct.js"],"names":["React","Component","NavBar","Redirect","SERVER_HOST","axios","MainPage","CreateProduct","constructor","props","handleChange","e","name","target","value","setState","prevState","product","handleFileChange","selectedFiles","files","handleCheckboxChange","checked","size","filter","handleReturn","redirectToDashboard","handleClear","checkboxes","document","querySelectorAll","forEach","checkbox","state","defaultProduct","validateInputs","isValid","trim","getElementById","classList","add","nameIsInvalid","remove","colour","colourIsInvalid","length","sizeIsInvalid","price","priceIsInvalid","gender","genderIsInvalid","category","categoryIsInvalid","brand","brandIsInvalid","current_stock","stockIsInvalid","isIdInvalid","products","some","p","product_id","idIsInvalid","idAlreadyAssigned","inputErrMessage","inputsAreInvalid","handleCreateProduct","preventDefault","topOfForm","scrollIntoView","console","log","localStorage","token","formData","FormData","append","i","post","headers","then","res","data","errorMessage","stockIsInInvalid","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport NavBar from \"../NavBar\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport axios from \"axios\";\r\nimport MainPage from \"../MainPage\";\r\n\r\nexport default class CreateProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultProduct: [],\r\n            products: [],\r\n            redirectToDashboard: false,\r\n            inputsAreInvalid: false,\r\n            idIsInvalid: false,\r\n            idAlreadyAssigned: false,\r\n            nameIsInvalid: false,\r\n            colourIsInvalid: false,\r\n            sizeIsInvalid: false,\r\n            priceIsInvalid: false,\r\n            categoryIsInvalid: false,\r\n            brandIsInvalid: false,\r\n            stockIsInInvalid: false,\r\n            inputErrMessage: \"\",\r\n            product : {\r\n                product_id: \"\",\r\n                name: \"\",\r\n                colour: \"\",\r\n                size: [],\r\n                price: \"\",\r\n                gender: \"\",\r\n                category: \"\",\r\n                brand: \"\",\r\n                current_stock: \"\",\r\n                selectedFiles:null\r\n            },\r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        // Fetch products in the parent component\r\n        axios.get(`${SERVER_HOST}/products`)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    if (res.data.errorMessage) {\r\n                    } else {\r\n                        console.log(\"Records read to Admin dashboard\");\r\n                        this.setState({products: res.data});\r\n                    }\r\n                } else {\r\n                    console.log(\"Record not found\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        this.setState((prevState) => ({\r\n            product: {\r\n                ...prevState.product,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    }\r\n    handleFileChange=(e)=>{\r\n        this.setState({selectedFiles:e.target.files})\r\n    }\r\n\r\n    handleCheckboxChange = (e) => {\r\n        const {checked, value} = e.target\r\n        if(checked) { // if checkbox is checked add it to sizes array in product state\r\n               this.setState(prevState => ({\r\n                   product: {\r\n                       ...prevState.product,\r\n                       size: [...prevState.product.size, value]\r\n                   }\r\n\r\n               }))\r\n\r\n        } else { // if unchecked remove the value from the array\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    size: prevState.product.size.filter(size => size !== size)\r\n                }\r\n            }))\r\n        }\r\n\r\n    }\r\n    handleReturn = () => {\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n    handleClear = () => {\r\n        const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]')\r\n        checkboxes.forEach((checkbox => { // uncheck all checkboxes\r\n            checkbox.checked = false\r\n        }))\r\n        this.setState({product: this.state.defaultProduct})\r\n    }\r\n    validateInputs = () => {\r\n        let isValid = true // true = valid\r\n        const product = this.state.product\r\n\r\n        //console.log(\"Product: \", product)\r\n        if(!product.name.trim()) {              // name\r\n            isValid = false\r\n            document.getElementById(\"nameInput\").classList.add(\"invalid-input\")\r\n            this.setState({nameIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"nameInput\").classList.remove(\"invalid-input\")\r\n            this.setState({nameIsInvalid: false})\r\n        }\r\n\r\n        if(!product.colour.trim()) {            // colour\r\n            isValid = false\r\n            document.getElementById(\"colourInput\").classList.add(\"invalid-input\")\r\n            this.setState({colourIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"colourInput\").classList.remove(\"invalid-input\")\r\n            this.setState({colourIsInvalid: false})\r\n        }\r\n\r\n        if(product.size.length === 0) {         // size\r\n            isValid = false\r\n            document.getElementById(\"sizeSelector\").classList.add(\"invalid-input\")\r\n            this.setState({sizeIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"sizeSelector\").classList.remove(\"invalid-input\")\r\n            this.setState({sizeIsInvalid: false})\r\n        }\r\n\r\n        if(!product.price.trim()) {             // price\r\n            isValid = false\r\n            document.getElementById(\"priceInput\").classList.add(\"invalid-input\")\r\n            this.setState({priceIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"priceInput\").classList.remove(\"invalid-input\")\r\n            this.setState({priceIsInvalid: false})\r\n        }\r\n\r\n        if(!product.gender.trim()) {            // gender\r\n            isValid = false\r\n            document.getElementById(\"genderInput\").classList.add(\"invalid-input\")\r\n            this.setState({genderIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"genderInput\").classList.remove(\"invalid-input\")\r\n            this.setState({genderIsInvalid: false})\r\n        }\r\n\r\n        if(!product.category.trim()) {          // category\r\n            isValid = false\r\n            document.getElementById(\"categoryInput\").classList.add(\"invalid-input\")\r\n            this.setState({categoryIsInvalid: true})\r\n\r\n        } else {\r\n            document.getElementById(\"categoryInput\").classList.remove(\"invalid-input\")\r\n            this.setState({categoryIsInvalid: false})\r\n        }\r\n\r\n        if(!product.brand.trim()) {             // brand\r\n            isValid = false\r\n            document.getElementById(\"brandInput\").classList.add(\"invalid-input\")\r\n            this.setState({brandIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"brandInput\").classList.remove(\"invalid-input\")\r\n            this.setState({brandIsInvalid: false})\r\n        }\r\n\r\n        if(!product.current_stock.trim()) {     // current_stock\r\n            isValid = false\r\n            document.getElementById(\"stockInput\").classList.add(\"invalid-input\")\r\n            this.setState({stockIsInvalid: true})\r\n        } else {\r\n            document.getElementById(\"stockInput\").classList.remove(\"invalid-input\")\r\n            this.setState({stockIsInvalid: false})\r\n\r\n        }\r\n\r\n        //console.log(this.state.products)\r\n        // Validate Product ID to check if it's already assigned to a product\r\n        const isIdInvalid = this.state.products.some(p => p.product_id === product.product_id)\r\n        if(isIdInvalid) {\r\n            document.getElementById(\"idInput\").classList.add(\"invalid-input\")\r\n            this.setState({\r\n                idIsInvalid: true,\r\n                idAlreadyAssigned: true,\r\n                inputErrMessage: `Product ID ${product.product_id} is already assigned to a product.`\r\n            })\r\n            isValid = false\r\n        } else {\r\n            if(!product.product_id.trim()) {\r\n                document.getElementById(\"idInput\").classList.add(\"invalid-input\")\r\n            } else {\r\n                document.getElementById(\"idInput\").classList.remove(\"invalid-input\")\r\n            }\r\n\r\n            this.setState({\r\n                idIsInvalid: !product.product_id.trim(),\r\n                idAlreadyAssigned: false,\r\n                inputErrMessage: \"\"\r\n            })\r\n        }\r\n\r\n        if(!isValid) { // if inputs are invalid trigger visual response to let user know\r\n            this.setState({inputsAreInvalid: true})\r\n        } else {\r\n            this.setState({inputsAreInvalid: false})\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    handleCreateProduct = (e) => {\r\n        e.preventDefault()\r\n        // scroll back to the top of the form , take from https://www.w3schools.com/howto/howto_js_scroll_into_view.asp\r\n        const topOfForm = document.getElementById('top-of-form')\r\n        topOfForm.scrollIntoView()\r\n        console.log(\"Token: \",localStorage.token)\r\n        console.log(\"Product: \", this.state.product)\r\n        console.log(\"Inputs are valid: \",this.validateInputs())\r\n        if(this.validateInputs()){\r\n            let formData=new FormData()\r\n            formData.append(\"product_id\",this.state.product.product_id)\r\n            formData.append(\"name\",this.state.product.name)\r\n            formData.append(\"colour\",this.state.product.colour)\r\n            formData.append(\"size\",this.state.product.size)\r\n            formData.append(\"price\",this.state.product.price)\r\n            formData.append(\"gender\",this.state.product.gender)\r\n            formData.append(\"category\",this.state.product.category)\r\n            formData.append(\"brand\",this.state.product.brand)\r\n            if (this.state.selectedFiles){\r\n                for (let i=0; i<this.state.selectedFiles.length; i++){\r\n                    formData.append(\"photos\", this.state.selectedFiles[i])\r\n                }\r\n\r\n            }\r\n            // const createdProduct = this.state.product;\r\n\r\n            axios.post(`${SERVER_HOST}/products`, formData, {headers:{\"authorization\":localStorage.token}})\r\n\r\n                .then(res =>\r\n                {\r\n                    if(res.data)\r\n                    {\r\n                        if(res.data.errorMessage) {\r\n                            console.log(\"Product NOT created\")\r\n                        } else {\r\n                            console.log(\"Product created: \", formData)\r\n                            this.handleReturn()\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        console.log(\"No response\")\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            console.log(\"Inputs are invalid\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"idIsInvalid: \", this.state.idIsInvalid)\r\n        return (\r\n            <div>\r\n                {this.state.redirectToDashboard ? <Redirect to={\"/AdminDashboard/AdminDashboard\"}/> : null }\r\n\r\n                <div className=\"admin-head-container\" id=\"top-of-form\">\r\n                    <NavBar/>\r\n                </div>\r\n\r\n                <div className=\"admin-create-product\" >\r\n                    <h1 >Create Product</h1>\r\n                    <form className=\"create-form\" >\r\n\r\n                        {this.state.inputsAreInvalid ?\r\n                            <div className=\"err-container\">\r\n                                <div>\r\n                                    <span className=\"err\">\r\n                                        <p>One or more of the entries are empty. Please fill out all fields before publishing the product.</p>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"stockInput\">\r\n                                Inbound Stock {this.state.stockIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"current_stock\"\r\n                                    id=\"stockInput\"\r\n                                    value={this.state.product.current_stock}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"idInput\">\r\n                                Product ID {this.state.idIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"product_id\"\r\n                                    id=\"idInput\"\r\n                                    value={this.state.product.product_id}\r\n                                    onChange={this.handleChange}\r\n                                /> {this.state.idAlreadyAssigned ? <span className=\"err\">{this.state.inputErrMessage}</span> : null}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"nameInput\">\r\n                                Name {this.state.nameIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"nameInput\"\r\n                                    value={this.state.product.name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"colourInput\">\r\n                                Colour {this.state.colourIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"colour\"\r\n                                    id=\"colourInput\"\r\n                                    value={this.state.product.colour}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"create-input\">\r\n                            <fieldset className=\"size-selector\" id=\"sizeSelector\">\r\n                                <legend  className=\"form-label\">\r\n                                    Available Sizes {this.state.sizeIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                </legend>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"small\">\r\n                                        Small\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"small\"\r\n                                            name=\"size\"\r\n                                            value=\"small\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"medium\">\r\n                                        Medium\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"medium\"\r\n                                            name=\"size\"\r\n                                            value=\"medium\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"size-option\">\r\n                                    <label htmlFor=\"large\">\r\n                                        Large\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"large\"\r\n                                            name=\"size\"\r\n                                            value=\"large\"\r\n                                            onChange={this.handleCheckboxChange}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"priceInput\">\r\n                                Price {this.state.priceIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"price\"\r\n                                    id=\"priceInput\"\r\n                                    value={this.state.product.price}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"genderInput\">\r\n                                Gender {this.state.genderIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"gender\"\r\n                                    id=\"genderInput\"\r\n                                    value={this.state.product.gender}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"categoryInput\">\r\n                                Category {this.state.categoryIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"category\"\r\n                                    id=\"categoryInput\"\r\n                                    value={this.state.product.category}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"brandInput\">\r\n                                Brand {this.state.brandIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"brand\"\r\n                                    id=\"brandInput\"\r\n                                    value={this.state.product.brand}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"create-input\">\r\n                            <label className=\"form-label\" htmlFor=\"brandInput\">\r\n                                Brand {this.state.brandIsInvalid ? <span className=\"err\">*</span> : null}\r\n                                <input\r\n                                    type=\"file\" multiple onChange={this.handleFileChange} name=\"photos\" id=\"photoInput\"\r\n                                />\r\n                            </label>\r\n                        <MainPage photos={this.state.selectedFiles}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-controls\">\r\n                            <button onClick={this.handleClear}>Clear</button>\r\n                            <button onClick={this.handleCreateProduct}>Create</button>\r\n                            <button onClick={this.handleReturn}>Return</button>\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}