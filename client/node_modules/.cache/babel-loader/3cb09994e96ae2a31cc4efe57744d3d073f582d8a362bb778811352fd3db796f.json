{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/Login/Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nimport LinkInClass from \"../LinkInClass\";\nimport NavBar from \"../NavBar\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n    this.handleSubmit = e => {\n      let isNameValid = this.validateName();\n      let isEmailValid = this.validateEmail();\n      let isPasswordValid = this.validatePassword();\n      let isConfirmPasswordValid = this.validateConfirmPassword();\n      let formData = new FormData();\n      formData.append(\"profilePhoto\", this.state.selectedFile);\n      if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid)\n        // if inputs have passed validation\n        {\n          e.preventDefault();\n          axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {\n            headers: {\n              \"Content-type\": \"multipart/form-data\"\n            }\n          }).then(res => {\n            if (res.data) {\n              if (res.data.errorMessage) {\n                console.log(res.data.errorMessage);\n              } else\n                // user successfully registered\n                {\n                  console.log(\"User registered and logged in\");\n                  localStorage.name = res.data.name;\n                  localStorage.accessLevel = res.data.accessLevel;\n                  localStorage.profilePhoto = res.data.profilePhoto;\n                  localStorage.token = res.data.token;\n                  this.setState({\n                    isRegistered: true\n                  });\n                }\n            } else {\n              console.log(\"Registration failed\");\n            }\n          });\n        } else {\n        console.log(\"Current values have not been posted\");\n      }\n      // console.log(this.validateName())\n      // console.log(this.state.errors.name)\n      // console.log(this.state.errors.email)\n      // console.log(this.state.errors.password)\n      // console.log(this.state.errors.confirmPassword)\n    };\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false,\n      selectedFile: null,\n      errors: {\n        // used to keep track of current validation errors\n        name: [],\n        email: [],\n        password: [],\n        confirmPassword: []\n      }\n    };\n  }\n  // Client side validation for Registration page\n  // if all of these return true the data will be posted\n  validateName() {\n    const name = this.state.name;\n    const errors = [];\n    if (/\\d/.test(name)) {\n      errors.push(\"Name cannot contain numbers\");\n    }\n    if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\n      errors.push(\"Name cannot contain special characters\");\n    }\n    if (!name.trim()) {\n      errors.push(\"Name cannot be empty\");\n    }\n\n    // update the state of name within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        name: errors\n      }\n    }));\n    //console.log(\"Errors for name: \", errors)\n    return errors.length !== 0;\n  }\n  validateEmail() {\n    const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/;\n    const email = this.state.email;\n    const errors = [];\n    if (!email.trim()) {\n      errors.push(\"Email cannot be empty\");\n    }\n    if (!pattern.test(email) && email.trim()) {\n      errors.push(\"Invalid email format\");\n    }\n\n    // update the state of email within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: errors\n      }\n    }));\n    //console.log(\"Errors for email: \", errors)\n    return errors.length !== 0;\n  }\n  validatePassword() {\n    const specialCharPattern = /[!£_\"$*^&()+=#.-]/;\n    const password = this.state.password;\n    const errors = [];\n    if (password.length < 8) {\n      errors.push(\"Password must be > 8 characters long\");\n    }\n    if (!/[0-9]/.test(password)) {\n      errors.push(\"Password must contain at least 1 number \");\n    }\n    if (!specialCharPattern.test(password)) {\n      errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\");\n    }\n\n    // update the state of password within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: errors\n      }\n    }));\n    //console.log(\"Errors for password: \", errors)\n    return errors.length !== 0;\n  }\n  validateConfirmPassword() {\n    const errors = [];\n    if (this.state.password !== this.state.confirmPassword) {\n      errors.push(\"Passwords do not match\");\n    }\n\n    // update the state of confirmPassword within errors with current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        confirmPassword: errors\n      }\n    }));\n\n    //console.log(\"Errors for confirmPassword: \", errors)\n    return errors.length !== 0;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-head-container\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-page-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"CREATE YOUR ACCOUNT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"register-form\",\n            noValidate: true,\n            id: \"loginOrRegistrationForm\",\n            children: [this.state.isRegistered ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/TestingDirectory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 56\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Name\",\n                autoComplete: \"name\",\n                value: this.state.name,\n                onChange: this.handleChange,\n                ref: input => {\n                  this.inputToFocus = input;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Email Address:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 54\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Email\",\n                autoComplete: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"register-buttons\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"submit-btn-container\",\n                  children: [/*#__PURE__*/_jsxDEV(LinkInClass, {\n                    value: \"Register\",\n                    type: \"button\",\n                    className: \"submit-btn\",\n                    onClick: this.handleSubmit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 84\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 72\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                autoComplete: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), this.state.errors.password.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-error-container\",\n                children: this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u2022 \", error]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 80\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                autoComplete: \"confirmPassword\",\n                value: this.state.confirmPassword,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-profile-image\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Add a Profile Picture: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: this.handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-buttons\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"register-btn-container\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/AccountPage\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-btn\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","ACCESS_LEVEL_ADMIN","SERVER_HOST","LinkInClass","NavBar","Footer","jsxDEV","_jsxDEV","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","isNameValid","validateName","isEmailValid","validateEmail","isPasswordValid","validatePassword","isConfirmPasswordValid","validateConfirmPassword","formData","FormData","append","state","preventDefault","post","email","password","headers","then","res","data","errorMessage","console","log","localStorage","accessLevel","profilePhoto","token","isRegistered","confirmPassword","errors","test","push","trim","prevState","length","pattern","specialCharPattern","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","map","error","index","onClick"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/Login/Register.js"],"sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\nimport LinkInClass from \"../LinkInClass\";\nimport NavBar from \"../NavBar\";\nimport Footer from \"../Footer\";\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            isRegistered: false,\n            selectedFile: null,\n            errors: { // used to keep track of current validation errors\n                name: [],\n                email: [],\n                password: [],\n                confirmPassword: []\n            }\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    handleFileChange = (e) => {\n        this.setState({selectedFile: e.target.files[0]})\n    }\n\n    // Client side validation for Registration page\n    // if all of these return true the data will be posted\n    validateName() {\n        const name = this.state.name\n        const errors = [];\n\n\n        if (/\\d/.test(name)) {\n            errors.push(\"Name cannot contain numbers\")\n        }\n        if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\n            errors.push(\"Name cannot contain special characters\")\n        }\n        if (!name.trim()) {\n            errors.push(\"Name cannot be empty\")\n        }\n\n        // update the state of name within errors with the current errors\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                name: errors\n            }\n        }))\n        //console.log(\"Errors for name: \", errors)\n        return errors.length !== 0\n    }\n\n    validateEmail() {\n        const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/\n        const email = this.state.email\n        const errors = []\n\n\n        if (!email.trim()) {\n            errors.push(\"Email cannot be empty\")\n        }\n        if (!pattern.test(email) && email.trim()) {\n            errors.push(\"Invalid email format\")\n        }\n\n        // update the state of email within errors with the current errors\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                email: errors\n            }\n        }))\n        //console.log(\"Errors for email: \", errors)\n        return errors.length !== 0\n    }\n\n    validatePassword() {\n        const specialCharPattern = /[!£_\"$*^&()+=#.-]/\n        const password = this.state.password\n        const errors = []\n\n\n        if (password.length < 8) {\n            errors.push(\"Password must be > 8 characters long\")\n        }\n        if (!/[0-9]/.test(password)) {\n            errors.push(\"Password must contain at least 1 number \")\n        }\n        if (!specialCharPattern.test(password)) {\n            errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\")\n        }\n\n        // update the state of password within errors with the current errors\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                password: errors\n            }\n        }))\n        //console.log(\"Errors for password: \", errors)\n        return errors.length !== 0\n    }\n\n    validateConfirmPassword() {\n        const errors = []\n\n\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Passwords do not match\")\n        }\n\n        // update the state of confirmPassword within errors with current errors\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                confirmPassword: errors\n            }\n        }))\n\n        //console.log(\"Errors for confirmPassword: \", errors)\n        return errors.length !== 0\n    }\n\n    handleSubmit = (e) => {\n        let isNameValid = this.validateName()\n        let isEmailValid = this.validateEmail()\n        let isPasswordValid = this.validatePassword()\n        let isConfirmPasswordValid = this.validateConfirmPassword()\n        let formData = new FormData()\n        formData.append(\"profilePhoto\", this.state.selectedFile)\n        if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid) // if inputs have passed validation\n        {\n            e.preventDefault()\n\n            axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\n                .then(res => {\n                    if (res.data) {\n                        if (res.data.errorMessage) {\n                            console.log(res.data.errorMessage)\n                        } else // user successfully registered\n                        {\n                            console.log(\"User registered and logged in\")\n\n                            localStorage.name = res.data.name\n                            localStorage.accessLevel = res.data.accessLevel\n                            localStorage.profilePhoto = res.data.profilePhoto\n                            localStorage.token = res.data.token\n                            this.setState({isRegistered: true})\n                        }\n\n                    } else {\n                        console.log(\"Registration failed\")\n                    }\n                })\n        } else {\n\n            console.log(\"Current values have not been posted\")\n        }\n        // console.log(this.validateName())\n        // console.log(this.state.errors.name)\n        // console.log(this.state.errors.email)\n        // console.log(this.state.errors.password)\n        // console.log(this.state.errors.confirmPassword)\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"register-head-container\">\n                    <NavBar/>\n                </div>\n                <div className=\"register-container\">\n                    <div className=\"register-page-box\">\n                        <h1>CREATE YOUR ACCOUNT</h1>\n\n                        <form className=\"register-form\" noValidate={true} id=\"loginOrRegistrationForm\">\n                            {this.state.isRegistered ? <Redirect to=\"/TestingDirectory\"/> : null}\n\n                            {/*  &#x2022; == unicode for bullet point  */}\n                            <div className={\"register-section1\"}>\n                                <label>Name:<span> *</span></label><br/>\n                                <input\n                                    name=\"name\"\n                                    type=\"text\"\n                                    placeholder=\"Name\"\n                                    autoComplete=\"name\"\n                                    value={this.state.name}\n                                    onChange={this.handleChange}\n                                    ref={(input) => {\n                                        this.inputToFocus = input\n                                    }}\n                                />\n                                {this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => (\n                                    <div key={index} className=\"error-message\">\n                                        &#x2022; {error}\n                                    </div>\n                                ))}\n                                <br/>\n                                <br/>\n\n                                <label>Email Address:<span> *</span> </label><br/>\n                                <input\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Email\"\n                                    autoComplete=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                />\n                                {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\n                                    <div key={index} className=\"error-message\">\n                                        &#x2022; {error}\n                                    </div>\n                                ))}\n                                <br/>\n                                <div className=\"register-buttons\">\n                                    <div className={\"submit-btn-container\"}>\n                                        <LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\"\n                                                     onClick={this.handleSubmit}/> <br/>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"vl\"></div>\n                            <div className={\"register-section2\"}>\n                                <label>Password:<span> *</span></label><br/>\n                                <input\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    autoComplete=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                                {this.state.errors.password.length > 0 ? (\n                                    <div className=\"password-error-container\">\n                                        {this.state.errors.password.map((error, index) => (\n                                            <div key={index}>\n                                                &#x2022; {error}\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : null}\n                                <br/>\n                                <br/>\n\n                                <label>Confirm Password:<span> *</span></label><br/>\n                                <input\n                                    name=\"confirmPassword\"\n                                    type=\"password\"\n                                    placeholder=\"Confirm password\"\n                                    autoComplete=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.handleChange}\n                                />\n                                <div className={\"select-profile-image\"}>\n                                    <label>Add a Profile Picture: </label>\n                                    <input type=\"file\" onChange={this.handleFileChange}/>\n                                </div>\n                                <br/>\n                                {this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => (\n                                    <div key={index} className=\"error-message\">\n                                        &#x2022; {error}\n                                    </div>\n                                ))}\n                                <br/><br/>\n                            </div>\n                            <div className=\"register-buttons\">\n                                {/*<LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\" onClick={this.handleSubmit}/> <br/>*/}\n                                <div className={\"register-btn-container\"}>\n                                    <Link to={\"/AccountPage\"}>\n                                        <button className={\"cancel-btn\"}>\n                                            Cancel\n                                        </button>\n                                    </Link>\n                                </div>\n                                {/*<Link className=\"red-button\" to={\"/AccountPage\"}>Cancel</Link>*/}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <footer>\n                    <Footer/>\n                </footer>\n            </div>\n\n        )\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,QAAQ,EAAEC,IAAI,QAAO,kBAAkB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,kBAAkB,EAAEC,WAAW,QAAO,+BAA+B;AAC7E,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,MAAMC,QAAQ,SAASX,SAAS,CAAC;EAC5CY,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAiBjBC,YAAY,GAAIC,CAAC,IAAK;MAClB,IAAI,CAACC,QAAQ,CAAC;QAAC,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;MAAK,CAAC,CAAC;IACpD,CAAC;IAAA,KACDC,gBAAgB,GAAIL,CAAC,IAAK;MACtB,IAAI,CAACC,QAAQ,CAAC;QAACK,YAAY,EAAEN,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC;MAAC,CAAC,CAAC;IACpD,CAAC;IAAA,KAqGDC,YAAY,GAAIR,CAAC,IAAK;MAClB,IAAIS,WAAW,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MACrC,IAAIC,YAAY,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACvC,IAAIC,eAAe,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAC7C,IAAIC,sBAAsB,GAAG,IAAI,CAACC,uBAAuB,CAAC,CAAC;MAC3D,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACC,KAAK,CAACd,YAAY,CAAC;MACxD,IAAI,CAACG,WAAW,IAAI,CAACE,YAAY,IAAI,CAACE,eAAe,IAAI,CAACE,sBAAsB;QAAE;QAClF;UACIf,CAAC,CAACqB,cAAc,CAAC,CAAC;UAElBjC,KAAK,CAACkC,IAAI,CAAE,GAAEhC,WAAY,yBAAwB,IAAI,CAAC8B,KAAK,CAACjB,IAAK,IAAG,IAAI,CAACiB,KAAK,CAACG,KAAM,IAAG,IAAI,CAACH,KAAK,CAACI,QAAS,EAAC,EAAEP,QAAQ,EAAE;YAACQ,OAAO,EAAE;cAAC,cAAc,EAAE;YAAqB;UAAC,CAAC,CAAC,CACxKC,IAAI,CAACC,GAAG,IAAI;YACT,IAAIA,GAAG,CAACC,IAAI,EAAE;cACV,IAAID,GAAG,CAACC,IAAI,CAACC,YAAY,EAAE;gBACvBC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACC,IAAI,CAACC,YAAY,CAAC;cACtC,CAAC;gBAAM;gBACP;kBACIC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;kBAE5CC,YAAY,CAAC7B,IAAI,GAAGwB,GAAG,CAACC,IAAI,CAACzB,IAAI;kBACjC6B,YAAY,CAACC,WAAW,GAAGN,GAAG,CAACC,IAAI,CAACK,WAAW;kBAC/CD,YAAY,CAACE,YAAY,GAAGP,GAAG,CAACC,IAAI,CAACM,YAAY;kBACjDF,YAAY,CAACG,KAAK,GAAGR,GAAG,CAACC,IAAI,CAACO,KAAK;kBACnC,IAAI,CAAClC,QAAQ,CAAC;oBAACmC,YAAY,EAAE;kBAAI,CAAC,CAAC;gBACvC;YAEJ,CAAC,MAAM;cACHN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;YACtC;UACJ,CAAC,CAAC;QACV,CAAC,MAAM;QAEHD,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACtD;MACA;MACA;MACA;MACA;MACA;IAEJ,CAAC;IAnKG,IAAI,CAACX,KAAK,GAAG;MACTjB,IAAI,EAAE,EAAE;MACRoB,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZa,eAAe,EAAE,EAAE;MACnBD,YAAY,EAAE,KAAK;MACnB9B,YAAY,EAAE,IAAI;MAClBgC,MAAM,EAAE;QAAE;QACNnC,IAAI,EAAE,EAAE;QACRoB,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZa,eAAe,EAAE;MACrB;IACJ,CAAC;EACL;EASA;EACA;EACA3B,YAAYA,CAAA,EAAG;IACX,MAAMP,IAAI,GAAG,IAAI,CAACiB,KAAK,CAACjB,IAAI;IAC5B,MAAMmC,MAAM,GAAG,EAAE;IAGjB,IAAI,IAAI,CAACC,IAAI,CAACpC,IAAI,CAAC,EAAE;MACjBmC,MAAM,CAACE,IAAI,CAAC,6BAA6B,CAAC;IAC9C;IACA,IAAI,oBAAoB,CAACD,IAAI,CAACpC,IAAI,CAAC,EAAE;MACjCmC,MAAM,CAACE,IAAI,CAAC,wCAAwC,CAAC;IACzD;IACA,IAAI,CAACrC,IAAI,CAACsC,IAAI,CAAC,CAAC,EAAE;MACdH,MAAM,CAACE,IAAI,CAAC,sBAAsB,CAAC;IACvC;;IAEA;IACA,IAAI,CAACvC,QAAQ,CAACyC,SAAS,KAAK;MACxBJ,MAAM,EAAE;QACJ,GAAGI,SAAS,CAACJ,MAAM;QACnBnC,IAAI,EAAEmC;MACV;IACJ,CAAC,CAAC,CAAC;IACH;IACA,OAAOA,MAAM,CAACK,MAAM,KAAK,CAAC;EAC9B;EAEA/B,aAAaA,CAAA,EAAG;IACZ,MAAMgC,OAAO,GAAG,uCAAuC;IACvD,MAAMrB,KAAK,GAAG,IAAI,CAACH,KAAK,CAACG,KAAK;IAC9B,MAAMe,MAAM,GAAG,EAAE;IAGjB,IAAI,CAACf,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE;MACfH,MAAM,CAACE,IAAI,CAAC,uBAAuB,CAAC;IACxC;IACA,IAAI,CAACI,OAAO,CAACL,IAAI,CAAChB,KAAK,CAAC,IAAIA,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE;MACtCH,MAAM,CAACE,IAAI,CAAC,sBAAsB,CAAC;IACvC;;IAEA;IACA,IAAI,CAACvC,QAAQ,CAACyC,SAAS,KAAK;MACxBJ,MAAM,EAAE;QACJ,GAAGI,SAAS,CAACJ,MAAM;QACnBf,KAAK,EAAEe;MACX;IACJ,CAAC,CAAC,CAAC;IACH;IACA,OAAOA,MAAM,CAACK,MAAM,KAAK,CAAC;EAC9B;EAEA7B,gBAAgBA,CAAA,EAAG;IACf,MAAM+B,kBAAkB,GAAG,mBAAmB;IAC9C,MAAMrB,QAAQ,GAAG,IAAI,CAACJ,KAAK,CAACI,QAAQ;IACpC,MAAMc,MAAM,GAAG,EAAE;IAGjB,IAAId,QAAQ,CAACmB,MAAM,GAAG,CAAC,EAAE;MACrBL,MAAM,CAACE,IAAI,CAAC,sCAAsC,CAAC;IACvD;IACA,IAAI,CAAC,OAAO,CAACD,IAAI,CAACf,QAAQ,CAAC,EAAE;MACzBc,MAAM,CAACE,IAAI,CAAC,0CAA0C,CAAC;IAC3D;IACA,IAAI,CAACK,kBAAkB,CAACN,IAAI,CAACf,QAAQ,CAAC,EAAE;MACpCc,MAAM,CAACE,IAAI,CAAC,mEAAmE,CAAC;IACpF;;IAEA;IACA,IAAI,CAACvC,QAAQ,CAACyC,SAAS,KAAK;MACxBJ,MAAM,EAAE;QACJ,GAAGI,SAAS,CAACJ,MAAM;QACnBd,QAAQ,EAAEc;MACd;IACJ,CAAC,CAAC,CAAC;IACH;IACA,OAAOA,MAAM,CAACK,MAAM,KAAK,CAAC;EAC9B;EAEA3B,uBAAuBA,CAAA,EAAG;IACtB,MAAMsB,MAAM,GAAG,EAAE;IAGjB,IAAI,IAAI,CAAClB,KAAK,CAACI,QAAQ,KAAK,IAAI,CAACJ,KAAK,CAACiB,eAAe,EAAE;MACpDC,MAAM,CAACE,IAAI,CAAC,wBAAwB,CAAC;IACzC;;IAEA;IACA,IAAI,CAACvC,QAAQ,CAACyC,SAAS,KAAK;MACxBJ,MAAM,EAAE;QACJ,GAAGI,SAAS,CAACJ,MAAM;QACnBD,eAAe,EAAEC;MACrB;IACJ,CAAC,CAAC,CAAC;;IAEH;IACA,OAAOA,MAAM,CAACK,MAAM,KAAK,CAAC;EAC9B;EA6CAG,MAAMA,CAAA,EAAG;IACL,oBACInD,OAAA;MAAAoD,QAAA,gBACIpD,OAAA;QAAKqD,SAAS,EAAC,yBAAyB;QAAAD,QAAA,eACpCpD,OAAA,CAACH,MAAM;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNzD,OAAA;QAAKqD,SAAS,EAAC,oBAAoB;QAAAD,QAAA,eAC/BpD,OAAA;UAAKqD,SAAS,EAAC,mBAAmB;UAAAD,QAAA,gBAC9BpD,OAAA;YAAAoD,QAAA,EAAI;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE5BzD,OAAA;YAAMqD,SAAS,EAAC,eAAe;YAACK,UAAU,EAAE,IAAK;YAACC,EAAE,EAAC,yBAAyB;YAAAP,QAAA,GACzE,IAAI,CAAC3B,KAAK,CAACgB,YAAY,gBAAGzC,OAAA,CAACT,QAAQ;cAACqE,EAAE,EAAC;YAAmB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,GAAG,IAAI,eAGpEzD,OAAA;cAAKqD,SAAS,EAAE,mBAAoB;cAAAD,QAAA,gBAChCpD,OAAA;gBAAAoD,QAAA,GAAO,OAAK,eAAApD,OAAA;kBAAAoD,QAAA,EAAM;gBAAE;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAAAzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxCzD,OAAA;gBACIQ,IAAI,EAAC,MAAM;gBACXqD,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,MAAM;gBAClBC,YAAY,EAAC,MAAM;gBACnBtD,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACjB,IAAK;gBACvBwD,QAAQ,EAAE,IAAI,CAAC5D,YAAa;gBAC5B6D,GAAG,EAAGC,KAAK,IAAK;kBACZ,IAAI,CAACC,YAAY,GAAGD,KAAK;gBAC7B;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,EACD,IAAI,CAAChC,KAAK,CAACkB,MAAM,CAACnC,IAAI,CAACwC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACvB,KAAK,CAACkB,MAAM,CAACnC,IAAI,CAAC4D,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1EtE,OAAA;gBAAiBqD,SAAS,EAAC,eAAe;gBAAAD,QAAA,GAAC,SAC9B,EAACiB,KAAK;cAAA,GADTC,KAAK;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACR,CAAC,eACFzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAELzD,OAAA;gBAAAoD,QAAA,GAAO,gBAAc,eAAApD,OAAA;kBAAAoD,QAAA,EAAM;gBAAE;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,KAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAAAzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClDzD,OAAA;gBACIQ,IAAI,EAAC,OAAO;gBACZqD,IAAI,EAAC,OAAO;gBACZC,WAAW,EAAC,OAAO;gBACnBC,YAAY,EAAC,OAAO;gBACpBtD,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACG,KAAM;gBACxBoC,QAAQ,EAAE,IAAI,CAAC5D;cAAa;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,EACD,IAAI,CAAChC,KAAK,CAACkB,MAAM,CAACf,KAAK,CAACoB,MAAM,GAAG,CAAC,IAAI,IAAI,CAACvB,KAAK,CAACkB,MAAM,CAACf,KAAK,CAACwC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5EtE,OAAA;gBAAiBqD,SAAS,EAAC,eAAe;gBAAAD,QAAA,GAAC,SAC9B,EAACiB,KAAK;cAAA,GADTC,KAAK;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACR,CAAC,eACFzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAKqD,SAAS,EAAC,kBAAkB;gBAAAD,QAAA,eAC7BpD,OAAA;kBAAKqD,SAAS,EAAE,sBAAuB;kBAAAD,QAAA,gBACnCpD,OAAA,CAACJ,WAAW;oBAACa,KAAK,EAAC,UAAU;oBAACoD,IAAI,EAAC,QAAQ;oBAACR,SAAS,EAAC,YAAY;oBACrDkB,OAAO,EAAE,IAAI,CAAC1D;kBAAa;oBAAAyC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAC,CAAC,KAAC,eAAAzD,OAAA;oBAAAsD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENzD,OAAA;cAAKqD,SAAS,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1BzD,OAAA;cAAKqD,SAAS,EAAE,mBAAoB;cAAAD,QAAA,gBAChCpD,OAAA;gBAAAoD,QAAA,GAAO,WAAS,eAAApD,OAAA;kBAAAoD,QAAA,EAAM;gBAAE;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAAAzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC5CzD,OAAA;gBACIQ,IAAI,EAAC,UAAU;gBACfqD,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,UAAU;gBACtBC,YAAY,EAAC,UAAU;gBACvBtD,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACI,QAAS;gBAC3BmC,QAAQ,EAAE,IAAI,CAAC5D;cAAa;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,EACD,IAAI,CAAChC,KAAK,CAACkB,MAAM,CAACd,QAAQ,CAACmB,MAAM,GAAG,CAAC,gBAClChD,OAAA;gBAAKqD,SAAS,EAAC,0BAA0B;gBAAAD,QAAA,EACpC,IAAI,CAAC3B,KAAK,CAACkB,MAAM,CAACd,QAAQ,CAACuC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACzCtE,OAAA;kBAAAoD,QAAA,GAAiB,SACJ,EAACiB,KAAK;gBAAA,GADTC,KAAK;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACR;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,GACN,IAAI,eACRzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAELzD,OAAA;gBAAAoD,QAAA,GAAO,mBAAiB,eAAApD,OAAA;kBAAAoD,QAAA,EAAM;gBAAE;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAAAzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpDzD,OAAA;gBACIQ,IAAI,EAAC,iBAAiB;gBACtBqD,IAAI,EAAC,UAAU;gBACfC,WAAW,EAAC,kBAAkB;gBAC9BC,YAAY,EAAC,iBAAiB;gBAC9BtD,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACiB,eAAgB;gBAClCsB,QAAQ,EAAE,IAAI,CAAC5D;cAAa;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,eACFzD,OAAA;gBAAKqD,SAAS,EAAE,sBAAuB;gBAAAD,QAAA,gBACnCpD,OAAA;kBAAAoD,QAAA,EAAO;gBAAuB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACtCzD,OAAA;kBAAO6D,IAAI,EAAC,MAAM;kBAACG,QAAQ,EAAE,IAAI,CAACtD;gBAAiB;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACNzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACJ,IAAI,CAAChC,KAAK,CAACkB,MAAM,CAACD,eAAe,CAACM,MAAM,GAAG,CAAC,IAAI,IAAI,CAACvB,KAAK,CAACkB,MAAM,CAACD,eAAe,CAAC0B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChGtE,OAAA;gBAAiBqD,SAAS,EAAC,eAAe;gBAAAD,QAAA,GAAC,SAC9B,EAACiB,KAAK;cAAA,GADTC,KAAK;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACR,CAAC,eACFzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAAAzD,OAAA;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACNzD,OAAA;cAAKqD,SAAS,EAAC,kBAAkB;cAAAD,QAAA,eAE7BpD,OAAA;gBAAKqD,SAAS,EAAE,wBAAyB;gBAAAD,QAAA,eACrCpD,OAAA,CAACR,IAAI;kBAACoE,EAAE,EAAE,cAAe;kBAAAR,QAAA,eACrBpD,OAAA;oBAAQqD,SAAS,EAAE,YAAa;oBAAAD,QAAA,EAAC;kBAEjC;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNzD,OAAA;QAAAoD,QAAA,eACIpD,OAAA,CAACF,MAAM;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAGd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}