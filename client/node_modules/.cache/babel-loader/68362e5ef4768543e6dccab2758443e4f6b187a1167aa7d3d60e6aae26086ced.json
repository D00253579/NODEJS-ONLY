{"ast":null,"code":"import React,{Component}from\"react\";import UserTableRow from\"./UserTableRow\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default class UserTable extends Component{constructor(props){super(props);this.sortName=()=>{// default descending\nlet users=[...this.props.users];// soft copy of products to manipulate\n// sort ascending\nif(!this.state.nameIsAscending){let ascendingProducts=users.sort((a,b)=>a.name<b.name?1:-1);this.props.updateUsers(ascendingProducts);console.log(\"Name ACE: \",ascendingProducts);// sort descending\n}else{let descendingProducts=users.sort((a,b)=>a.name<b.name?-1:1);this.props.updateUsers(descendingProducts);console.log(\"Name DESC: \",descendingProducts);}// When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\nif(!this.state.nameIsAscending){this.setState({nameIsAscending:true});}else{this.setState({nameIsAscending:false});}// reset other arrows to default\nif(!this.state.accessIsAscending){this.setState({accessIsAscending:true});}};this.sortAccess=()=>{// default ascending\nlet users=[...this.props.users];// sort ascending\nif(!this.state.accessIsAscending){let ascendingProducts=users.sort((a,b)=>a.accessLevel<b.accessLevel?1:-1);this.props.updateUsers(ascendingProducts);//console.log(\"Stock ACE: \", ascendingProducts)\n// sort descending\n}else{let descendingProducts=users.sort((a,b)=>a.accessLevel<b.accessLevel?-1:1);this.props.updateUsers(descendingProducts);//console.log(\"Stock DESC: \", descendingProducts)\n}// Update arrow direction\nif(this.state.accessIsAscending){this.setState({accessIsAscending:false});}else{this.setState({accessIsAscending:true});}// reset other arrow to default\nif(this.state.nameIsAscending){this.setState({nameIsAscending:false});}};this.state={nameIsAscending:false,// default name descending\naccessIsAscending:true};}render(){return/*#__PURE__*/_jsxs(\"table\",{className:\"user-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"th\",{children:[\"Name \",/*#__PURE__*/_jsx(\"label\",{className:\"sortLabel\",onClick:this.sortName,children:/*#__PURE__*/_jsxs(\"span\",{id:\"nameSort\",children:[!this.state.nameIsAscending?'\\u25B4':'\\u25BE',\" \"]})})]}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsxs(\"th\",{children:[\"AccessLevel \",/*#__PURE__*/_jsx(\"label\",{className:\"sortLabel\",onClick:this.sortAccess,children:/*#__PURE__*/_jsxs(\"span\",{id:\"accessSort\",children:[!this.state.accessIsAscending?'\\u25B4':'\\u25BE',\" \"]})})]}),/*#__PURE__*/_jsx(\"th\",{children:\"Country\"}),/*#__PURE__*/_jsx(\"th\",{children:\"U. Code\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:this.props.users.map((users,index)=>/*#__PURE__*/_jsx(UserTableRow,{users:users,rowNum:index+1},users._id))})]});}}","map":{"version":3,"names":["React","Component","UserTableRow","jsxs","_jsxs","jsx","_jsx","UserTable","constructor","props","sortName","users","state","nameIsAscending","ascendingProducts","sort","a","b","name","updateUsers","console","log","descendingProducts","setState","accessIsAscending","sortAccess","accessLevel","render","className","children","onClick","id","map","index","rowNum","_id"],"sources":["C:/Users/jamie/Desktop/CA2/NODEJS-ONLY/client/src/components/AdminDashboard/UserTable.js"],"sourcesContent":["import React, {Component} from \"react\"\r\nimport UserTableRow from \"./UserTableRow\";\r\n\r\nexport default class UserTable extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameIsAscending: false, // default name descending\r\n            accessIsAscending: true,\r\n\r\n        }\r\n    }\r\n    sortName = () => { // default descending\r\n        let users = [...this.props.users] // soft copy of products to manipulate\r\n\r\n        // sort ascending\r\n        if(!this.state.nameIsAscending) {\r\n            let ascendingProducts = users.sort((a, b) => a.name < b.name?1:-1)\r\n            this.props.updateUsers(ascendingProducts)\r\n            console.log(\"Name ACE: \", ascendingProducts)\r\n        // sort descending\r\n        } else {\r\n            let descendingProducts = users.sort((a, b) => a.name < b.name?-1:1)\r\n            this.props.updateUsers(descendingProducts)\r\n            console.log(\"Name DESC: \", descendingProducts)\r\n        }\r\n\r\n        // When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\r\n        if(!this.state.nameIsAscending) {\r\n            this.setState({nameIsAscending: true})\r\n        } else {\r\n            this.setState({nameIsAscending: false})\r\n        }\r\n\r\n        // reset other arrows to default\r\n        if(!this.state.accessIsAscending) {\r\n            this.setState({accessIsAscending: true})\r\n        }\r\n    }\r\n    sortAccess = () => { // default ascending\r\n        let users = [...this.props.users]\r\n\r\n        // sort ascending\r\n        if(!this.state.accessIsAscending) {\r\n            let ascendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?1:-1)\r\n            this.props.updateUsers(ascendingProducts)\r\n            //console.log(\"Stock ACE: \", ascendingProducts)\r\n        // sort descending\r\n        } else {\r\n            let descendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?-1:1)\r\n            this.props.updateUsers(descendingProducts)\r\n            //console.log(\"Stock DESC: \", descendingProducts)\r\n        }\r\n\r\n        // Update arrow direction\r\n        if(this.state.accessIsAscending) {\r\n            this.setState({accessIsAscending: false})\r\n        } else {\r\n            this.setState({accessIsAscending: true})\r\n        }\r\n\r\n        // reset other arrow to default\r\n        if(this.state.nameIsAscending) {\r\n            this.setState({nameIsAscending: false})\r\n\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <table className=\"user-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Name <label className=\"sortLabel\" onClick={this.sortName}><span id=\"nameSort\">{!this.state.nameIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\r\n                    <th>Email</th>\r\n                    <th>AccessLevel <label className=\"sortLabel\" onClick={this.sortAccess}><span id=\"accessSort\">{!this.state.accessIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\r\n                    <th>Country</th>\r\n                    <th>U. Code</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {this.props.users.map((users, index) => (\r\n                    <UserTableRow\r\n                        key={users._id}\r\n                        users={users}\r\n                        rowNum={index + 1}\r\n                    />\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}