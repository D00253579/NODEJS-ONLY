{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AccountPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport LinkInClass from \"./LinkInClass\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Footer from \"./Footer\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class AccountPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      let loginErrors = [];\n      e.preventDefault();\n\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n        axios.post(\"\".concat(SERVER_HOST, \"/users/AccountPage/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.state.isPasswordWrong = true;\n            } else // user successfully logged in\n              {\n                this.state.isPasswordWrong = false;\n                console.log(\"User logged in\");\n                localStorage.name = res.data.name;\n                localStorage.email = this.state.email;\n                localStorage.accessLevel = res.data.accessLevel;\n                localStorage.profilePhoto = res.data.profilePhoto;\n                localStorage.token = res.data.token;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Error logging in\");\n          }\n        });\n      } else {\n        console.log(\"login denied invalid credentials\");\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/users\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          }); //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n\n  validateUserLogin() {\n    let canLogin = false;\n    let emailErrors = [];\n    let pwErrors = [];\n    let email = this.state.email;\n    let pw = this.state.password;\n\n    if (!email.trim()) {\n      emailErrors.push(\"Email cannot be empty\");\n    }\n\n    this.setState(prevState => ({\n      errors: _objectSpread({}, prevState.errors, {\n        email: emailErrors\n      })\n    }));\n\n    if (!pw.trim()) {\n      pwErrors.push(\"Password cannot be empty\");\n    }\n\n    this.setState(prevState => ({\n      errors: _objectSpread({}, prevState.errors, {\n        password: pwErrors\n      })\n    }));\n\n    if (emailErrors.length === 0 && pwErrors.length === 0) {\n      // if there are no errors\n      {\n        canLogin = true;\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: _objectSpread({}, prevState.errors, {\n            email: []\n          })\n        }));\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: _objectSpread({}, prevState.errors, {\n            password: []\n          })\n        }));\n      }\n    }\n\n    console.log(\"canLogin = \", canLogin);\n    return canLogin;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"account-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"account-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"account-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"WELCOME BACK!\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" Email Address:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" *\"), \" \"), this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/MainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email-input\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" *\")), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password-input\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u2022 \", error)), React.createElement(\"div\", {\n      className: \"register-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(LinkInClass, {\n      value: \"SIGN IN\",\n      className: \"signIn-btn\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"vl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"register-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"no-account-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"DON'T HAVE AN ACCOUNT?\"), React.createElement(Link, {\n      to: \"/Login/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"register-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"CREATE AN ACCOUNT\")), React.createElement(Link, {\n      to: \"/MainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"guest-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"CONTINUE AS GUEST\")))))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AccountPage.js"],"names":["React","Component","NavBar","axios","LinkInClass","Link","Redirect","Footer","SERVER_HOST","AccountPage","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","loginErrors","preventDefault","validateUserLogin","post","state","email","password","then","res","data","errorMessage","isPasswordWrong","console","log","localStorage","accessLevel","profilePhoto","token","isLoggedIn","users","errors","componentDidMount","get","canLogin","emailErrors","pwErrors","pw","trim","push","prevState","length","render","map","error","index"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\"\r\nimport LinkInClass from \"./LinkInClass\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport {SERVER_HOST} from \"../config/global_constants\";\r\n\r\nexport default class AccountPage extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            isLoggedIn:false,\r\n            users: [],\r\n            errors: { // used to keep track of current validation errors\r\n                email: [],\r\n                password: []\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        axios.get(`${SERVER_HOST}/users`)\r\n            .then(res =>\r\n            {\r\n                if(res.data)\r\n                {\r\n                    if(res.data.errorMessage) {\r\n                        console.log(res.data.errorMessage)\r\n                    } else {\r\n                        console.log(\"Users read to Login page\")\r\n                        this.setState({users: res.data})\r\n                        //console.log(\"users: \",this.state.users)\r\n                    }\r\n                } else {\r\n                    console.log(\"Users not found\")\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n\r\n    }\r\n\r\n\r\n    validateUserLogin() {\r\n        let canLogin = false;\r\n        let emailErrors = []\r\n        let pwErrors = []\r\n        let email = this.state.email\r\n        let pw = this.state.password\r\n        if(!email.trim())\r\n        {\r\n            emailErrors.push(\"Email cannot be empty\")\r\n        }\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                email: emailErrors\r\n            }\r\n        }))\r\n        if(!pw.trim())\r\n        {\r\n            pwErrors.push(\"Password cannot be empty\")\r\n        }\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                password: pwErrors\r\n            }\r\n        }))\r\n\r\n        if (emailErrors.length === 0 && pwErrors.length === 0)\r\n        { // if there are no errors\r\n            {\r\n                canLogin = true\r\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\r\n                    errors: {\r\n                        ...prevState.errors,\r\n                        email: []\r\n                    }\r\n                }))\r\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\r\n                    errors: {\r\n                        ...prevState.errors,\r\n                        password: []\r\n                    }\r\n                }))\r\n            }\r\n\r\n        }\r\n        console.log(\"canLogin = \", canLogin)\r\n        return canLogin;\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        let loginErrors = []\r\n        e.preventDefault()\r\n\r\n        if(this.validateUserLogin()) { //if this returns true, user details passed validation, login user\r\n\r\n            axios.post(`${SERVER_HOST}/users/AccountPage/${this.state.email}/${this.state.password}`)\r\n\r\n                .then(res =>\r\n                {\r\n                    if(res.data)\r\n                    {\r\n                        if (res.data.errorMessage)\r\n                        {\r\n                            this.state.isPasswordWrong = true\r\n                        }\r\n                        else // user successfully logged in\r\n                        {\r\n                            this.state.isPasswordWrong = false\r\n\r\n                            console.log(\"User logged in\")\r\n                            localStorage.name = res.data.name\r\n                            localStorage.email = this.state.email\r\n                            localStorage.accessLevel = res.data.accessLevel\r\n                            localStorage.profilePhoto=res.data.profilePhoto\r\n                            localStorage.token = res.data.token\r\n\r\n                            this.setState({isLoggedIn: true})\r\n                        }\r\n                    } else {\r\n                        console.log(\"Error logging in\")\r\n                    }\r\n                })\r\n        } else {\r\n            console.log(\"login denied invalid credentials\")\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"account-head-container\">\r\n                    <NavBar/>\r\n                </div>\r\n                    <div className=\"account-container\">\r\n                        <div className=\"account-box\">\r\n                            <div className=\"login-box\">\r\n                                <h1>WELCOME BACK!</h1>\r\n                                <label> Email Address:<span> *</span> </label>\r\n                                {this.state.isLoggedIn ? <Redirect to=\"/MainPage\"/> : null}\r\n\r\n                                <input type = \"email\" name=\"email\" id = \"email-input\" placeholder = \"Email\" autoComplete=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/><br/>\r\n                                <label>Password:<span> *</span></label>\r\n                                <input\r\n                                    type = \"password\"\r\n                                    name=\"password\"\r\n                                    id = \"password-input\"\r\n                                    placeholder = \"Password\"\r\n                                    autoComplete=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"register-box\">\r\n                                    <LinkInClass value=\"SIGN IN\" className={\"signIn-btn\"} onClick={this.handleSubmit}/><br/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"vl\"></div>\r\n                            <div className=\"register-box\">\r\n                                <div className={\"no-account-container\"}>\r\n                                    <h1>DON'T HAVE AN ACCOUNT?</h1>\r\n                                    <Link to={\"/Login/Register\"}>\r\n                                        <button className={\"register-btn\"}>CREATE AN ACCOUNT</button>\r\n                                    </Link>\r\n                                    {/*Continue as guest would take you back to the main page - using the guest features*/}\r\n                                    <Link to={\"/MainPage\"}>\r\n                                        <button className={\"guest-btn\"}>CONTINUE AS GUEST</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                        <footer>\r\n                            <Footer/>\r\n                        </footer>\r\n                    </div>\r\n                    )\r\n                }\r\n                }"]},"metadata":{},"sourceType":"module"}