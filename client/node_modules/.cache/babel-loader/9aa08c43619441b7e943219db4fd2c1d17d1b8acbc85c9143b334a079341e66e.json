{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AdminDashboard/UserTable.js\";\nimport React, { Component } from \"react\";\nimport UserTableRow from \"./UserTableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserTable extends Component {\n  constructor(props) {\n    super(props);\n    this.sortName = () => {\n      // default descending\n      let users = [...this.props.users]; // soft copy of products to manipulate\n\n      // sort ascending\n      if (!this.state.nameIsAscending) {\n        let ascendingProducts = users.sort((a, b) => a.name < b.name ? 1 : -1);\n        this.props.updateUsers(ascendingProducts);\n        console.log(\"Name ACE: \", ascendingProducts);\n        // sort descending\n      } else {\n        let descendingProducts = users.sort((a, b) => a.name < b.name ? -1 : 1);\n        this.props.updateUsers(descendingProducts);\n        console.log(\"Name DESC: \", descendingProducts);\n      }\n\n      // When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\n      if (!this.state.nameIsAscending) {\n        this.setState({\n          nameIsAscending: true\n        });\n      } else {\n        this.setState({\n          nameIsAscending: false\n        });\n      }\n\n      // reset other arrows to default\n      if (!this.state.accessIsAscending) {\n        this.setState({\n          accessIsAscending: true\n        });\n      }\n    };\n    this.sortAccess = () => {\n      // default ascending\n      let users = [...this.props.users];\n\n      // sort ascending\n      if (!this.state.accessIsAscending) {\n        let ascendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel ? 1 : -1);\n        this.props.updateUsers(ascendingProducts);\n        //console.log(\"Stock ACE: \", ascendingProducts)\n        // sort descending\n      } else {\n        let descendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel ? -1 : 1);\n        this.props.updateUsers(descendingProducts);\n        //console.log(\"Stock DESC: \", descendingProducts)\n      }\n\n      // Update arrow direction\n      if (this.state.accessIsAscending) {\n        this.setState({\n          accessIsAscending: false\n        });\n      } else {\n        this.setState({\n          accessIsAscending: true\n        });\n      }\n\n      // reset other arrow to default\n      if (this.state.nameIsAscending) {\n        this.setState({\n          nameIsAscending: false\n        });\n      }\n    };\n    this.state = {\n      nameIsAscending: false,\n      // default name descending\n      accessIsAscending: true\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Name \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sortLabel\",\n              onClick: this.sortName,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"nameSort\",\n                children: [!this.state.nameIsAscending ? '\\u25B4' : '\\u25BE', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 83\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"AccessLevel \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sortLabel\",\n              onClick: this.sortAccess,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"accessSort\",\n                children: [!this.state.accessIsAscending ? '\\u25B4' : '\\u25BE', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 92\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"U. Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.props.users.map((users, index) => /*#__PURE__*/_jsxDEV(UserTableRow, {\n          users: users,\n          rowNum: index + 1\n        }, users._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","UserTableRow","jsxDEV","_jsxDEV","UserTable","constructor","props","sortName","users","state","nameIsAscending","ascendingProducts","sort","a","b","name","updateUsers","console","log","descendingProducts","setState","accessIsAscending","sortAccess","accessLevel","render","className","children","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","map","index","rowNum","_id"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AdminDashboard/UserTable.js"],"sourcesContent":["import React, {Component} from \"react\"\nimport UserTableRow from \"./UserTableRow\";\nexport default class UserTable extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameIsAscending: false, // default name descending\n            accessIsAscending: true,\n\n        }\n    }\n    sortName = () => { // default descending\n        let users = [...this.props.users] // soft copy of products to manipulate\n\n        // sort ascending\n        if(!this.state.nameIsAscending) {\n            let ascendingProducts = users.sort((a, b) => a.name < b.name?1:-1)\n            this.props.updateUsers(ascendingProducts)\n            console.log(\"Name ACE: \", ascendingProducts)\n        // sort descending\n        } else {\n            let descendingProducts = users.sort((a, b) => a.name < b.name?-1:1)\n            this.props.updateUsers(descendingProducts)\n            console.log(\"Name DESC: \", descendingProducts)\n        }\n\n        // When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\n        if(!this.state.nameIsAscending) {\n            this.setState({nameIsAscending: true})\n        } else {\n            this.setState({nameIsAscending: false})\n        }\n\n        // reset other arrows to default\n        if(!this.state.accessIsAscending) {\n            this.setState({accessIsAscending: true})\n        }\n    }\n    sortAccess = () => { // default ascending\n        let users = [...this.props.users]\n\n        // sort ascending\n        if(!this.state.accessIsAscending) {\n            let ascendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?1:-1)\n            this.props.updateUsers(ascendingProducts)\n            //console.log(\"Stock ACE: \", ascendingProducts)\n        // sort descending\n        } else {\n            let descendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?-1:1)\n            this.props.updateUsers(descendingProducts)\n            //console.log(\"Stock DESC: \", descendingProducts)\n        }\n\n        // Update arrow direction\n        if(this.state.accessIsAscending) {\n            this.setState({accessIsAscending: false})\n        } else {\n            this.setState({accessIsAscending: true})\n        }\n\n        // reset other arrow to default\n        if(this.state.nameIsAscending) {\n            this.setState({nameIsAscending: false})\n\n        }\n    }\n    render()\n    {\n        return (\n            <table className=\"user-table\">\n                <thead>\n                <tr>\n                    <th>Name <label className=\"sortLabel\" onClick={this.sortName}><span id=\"nameSort\">{!this.state.nameIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\n                    <th>Email</th>\n                    <th>AccessLevel <label className=\"sortLabel\" onClick={this.sortAccess}><span id=\"accessSort\">{!this.state.accessIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\n                    <th>Country</th>\n                    <th>U. Code</th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {this.props.users.map((users, index) => (\n                    <UserTableRow\n                        key={users._id}\n                        users={users}\n                        rowNum={index + 1}\n                    />\n                ))}\n                </tbody>\n            </table>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}