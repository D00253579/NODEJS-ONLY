{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\AdminDashboard.js\";\nimport React, { Component } from \"react\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport axios from \"axios\";\nimport Navbar from \"../NavBar\";\nimport Footer from \"../Footer\";\nimport AdminProductView from \"./AdminProductView\";\nimport Filters from \"./Filters\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport AdminControls from \"./AdminControls\";\nimport FilterImage from \"../../Images/FilterImage.png\";\nimport SortImage from \"../../Images/SortIcon.png\";\nexport default class AdminDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateProducts = newProductState => {\n      this.setState({\n        products: newProductState\n      });\n      console.log(\"State of products updated \");\n    };\n\n    this.sortName = () => {\n      // default descending\n      let productNaturalOrderByName = [...this.state.products]; // soft copy of products to manipulate\n\n      let descendingProducts = productNaturalOrderByName.sort((a, b) => a.name < b.name ? -1 : 1);\n      this.updateProducts(descendingProducts);\n      console.log(\"Natural order set: product.name DESC\");\n    };\n\n    this.showFilters = e => {\n      this.setState({\n        displayFilters: !this.state.displayFilters\n      });\n    };\n\n    this.state = {\n      products: [],\n      defaultProducts: [],\n      // If no filters are applied\n      rowClickedID: 0,\n      displayFilters: false //false until icon is clicked\n\n    };\n  }\n\n  componentDidMount() {\n    // Fetch products in the parent component\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          /* TODO\r\n              Display a message to the screen showing the products were not found */\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Records read to Admin dashboard\");\n          this.setState({\n            products: res.data,\n            // This state of products when passed will have the filters applied\n            defaultProducts: res.data // keep a default view for filtering\n\n          });\n          this.sortName();\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(AdminControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"admin-body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"SORT\"), React.createElement(\"i\", {\n      className: \"sort-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SortImage,\n      alt: \"sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"filter-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"FILTERS\"), React.createElement(\"i\", {\n      className: \"filter-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: FilterImage,\n      alt: \"filter\",\n      onClick: this.showFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), this.state.displayFilters && React.createElement(\"div\", {\n      className: \"filter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateProducts: this.updateProducts,\n      products: this.state.products,\n      defaultProducts: this.state.defaultProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(AdminProductView, {\n      products: this.state.products,\n      updateProducts: this.updateProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"RETURN\")), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\AdminDashboard.js"],"names":["React","Component","SERVER_HOST","axios","Navbar","Footer","AdminProductView","Filters","Link","Redirect","AdminControls","FilterImage","SortImage","AdminDashboard","constructor","props","updateProducts","newProductState","setState","products","console","log","sortName","productNaturalOrderByName","state","descendingProducts","sort","a","b","name","showFilters","e","displayFilters","defaultProducts","rowClickedID","componentDidMount","get","then","res","data","errorMessage","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../NavBar\"\r\nimport Footer from \"../Footer\";\r\nimport AdminProductView from \"./AdminProductView\";\r\nimport Filters from \"./Filters\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport AdminControls from \"./AdminControls\";\r\nimport FilterImage from \"../../Images/FilterImage.png\";\r\nimport SortImage from \"../../Images/SortIcon.png\";\r\n\r\n\r\nexport default class AdminDashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: [],\r\n            defaultProducts: [], // If no filters are applied\r\n            rowClickedID: 0,\r\n            displayFilters: false //false until icon is clicked\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Fetch products in the parent component\r\n        axios.get(`${SERVER_HOST}/products`)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    if (res.data.errorMessage) {\r\n                        /* TODO\r\n                            Display a message to the screen showing the products were not found */\r\n\r\n\r\n                        console.log(res.data.errorMessage);\r\n                    } else {\r\n                        console.log(\"Records read to Admin dashboard\");\r\n                        this.setState({\r\n                            products: res.data,       // This state of products when passed will have the filters applied\r\n                            defaultProducts: res.data // keep a default view for filtering\r\n\r\n                        });\r\n                        this.sortName()\r\n                    }\r\n                } else {\r\n                    console.log(\"Record not found\");\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    updateProducts = (newProductState) => {\r\n        this.setState({products: newProductState})\r\n        console.log(\"State of products updated \")\r\n    }\r\n\r\n    // Set natural ordering of products\r\n    sortName = () => { // default descending\r\n        let productNaturalOrderByName = [...this.state.products] // soft copy of products to manipulate\r\n\r\n            let descendingProducts = productNaturalOrderByName.sort((a, b) => a.name < b.name?-1:1)\r\n            this.updateProducts(descendingProducts)\r\n            console.log(\"Natural order set: product.name DESC\")\r\n    }\r\n\r\n    /*\r\n        Used chatgpt to help with the logic, I tried passing in the displayFilters and then setting the state to true.\r\n        However, doing it that way would result in the filters staying on the page until you refresh.\r\n        showFilters is used to toggle between showing the filters (state is false then hide filters),\r\n        onClick twice will hide the filters again\r\n     */\r\n\r\n    showFilters = e => {\r\n        this.setState({displayFilters: !this.state.displayFilters})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"admin-head-container\">\r\n                    <Navbar/>\r\n                </div>\r\n\r\n                <AdminControls/>\r\n                <div className=\"admin-body-container\">\r\n                    <div className={\"sort-box\"}>\r\n                        <div className={\"sort-button\"}>\r\n                            <h1>SORT</h1>\r\n                            <i className={\"sort-icon\"}>\r\n                                <img src={SortImage} alt=\"sort\"/>\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={\"filter-box\"}>\r\n                        <div className={\"filter-button\"}>\r\n                            <h1>FILTERS</h1>\r\n                            <i className={\"filter-icon\"}>\r\n                                <img src={FilterImage} alt=\"filter\" onClick={this.showFilters}/>\r\n                            </i>\r\n                            {this.state.displayFilters && (\r\n                                <div className=\"filter-container\">\r\n                                    <Filters\r\n                                        updateProducts={this.updateProducts}\r\n                                        products={this.state.products}\r\n                                        defaultProducts={this.state.defaultProducts}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"admin-table-container\">\r\n                        <AdminProductView\r\n                            products={this.state.products}\r\n                            updateProducts={this.updateProducts}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"testing-return\"><Link className=\"testing-red-button\"\r\n                                                      to={\"/TestingDirectory\"}>RETURN</Link></div>\r\n                <footer>\r\n                    <Footer/>\r\n                </footer>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}