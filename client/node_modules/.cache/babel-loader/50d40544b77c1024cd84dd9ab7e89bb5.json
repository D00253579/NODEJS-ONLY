{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\AdminDashboard.js\";\nimport React, { Component } from \"react\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport axios from \"axios\";\nimport Navbar from \"../NavBar\";\nimport AdminProductView from \"./AdminProductView\";\nimport Filters from \"./Filters\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport AdminControls from \"./AdminControls\";\nexport default class AdminDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateProducts = newProductState => {\n      this.setState({\n        products: newProductState\n      });\n      console.log(\"State of products updated \");\n    };\n\n    this.state = {\n      products: [],\n      defaultProducts: [],\n      // If no filters are applied\n      rowClickedID: 0\n    };\n  }\n\n  componentDidMount() {\n    // Fetch products in the parent component\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          /* TODO\r\n              Display a message to the screen showing the products were not found */\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Records read to Admin dashboard\");\n          this.setState({\n            products: res.data,\n            // This state of products when passed will have the filters applied\n            defaultProducts: res.data // keep a default view for filtering\n\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(AdminControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"admin-body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateProducts: this.updateProducts,\n      products: this.state.products,\n      defaultProducts: this.state.defaultProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"admin-table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AdminProductView, {\n      products: this.state.products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"testing-return\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"testing-red-button\",\n      to: \"/TestingDirectory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"RETURN\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\AdminDashboard.js"],"names":["React","Component","SERVER_HOST","axios","Navbar","AdminProductView","Filters","Link","Redirect","AdminControls","AdminDashboard","constructor","props","updateProducts","newProductState","setState","products","console","log","state","defaultProducts","rowClickedID","componentDidMount","get","then","res","data","errorMessage","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkB,WAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,eAAe,MAAMC,cAAN,SAA6BT,SAA7B,CACf;AAEIU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgCnBC,cAhCmB,GAgCDC,eAAD,IAAqB;AAClC,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KAnCkB;;AAEf,SAAKC,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE,EADD;AAETI,MAAAA,eAAe,EAAE,EAFR;AAEY;AACrBC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACAnB,IAAAA,KAAK,CAACoB,GAAN,WAAarB,WAAb,gBACKsB,IADL,CACWC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,IAAR,EAAc;AACV,YAAID,GAAG,CAACC,IAAJ,CAASC,YAAb,EAA2B;AACvB;;AAKAV,UAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAJ,CAASC,YAArB;AACH,SAPD,MAOO;AACHV,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,eAAKH,QAAL,CAAc;AAAEC,YAAAA,QAAQ,EAAES,GAAG,CAACC,IAAhB;AAA4B;AACnBN,YAAAA,eAAe,EAAEK,GAAG,CAACC,IAD9B,CACmC;;AADnC,WAAd;AAGH;AACJ,OAdD,MAcO;AACHT,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAnBL;AAoBH;;AASDU,EAAAA,MAAM,GACN;AAEI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,cAAc,EAAE,KAAKf,cADzB;AAEI,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWH,QAFzB;AAGI,MAAA,eAAe,EAAE,KAAKG,KAAL,CAAWC,eAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAWI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWH,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CAPJ,EA0BI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,EAAE,EAAE,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhC,CA1BJ,CADJ;AA8BH;;AA1EL","sourcesContent":["import React, {Component} from \"react\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport axios from \"axios\";\r\nimport Navbar from\"../NavBar\"\r\nimport AdminProductView from \"./AdminProductView\";\r\nimport Filters from \"./Filters\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport AdminControls from \"./AdminControls\";\r\n\r\n\r\nexport default class AdminDashboard extends Component\r\n{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: [],\r\n            defaultProducts: [], // If no filters are applied\r\n            rowClickedID: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // Fetch products in the parent component\r\n        axios.get(`${SERVER_HOST}/products`)\r\n            .then((res) => {\r\n                if (res.data) {\r\n                    if (res.data.errorMessage) {\r\n                        /* TODO\r\n                            Display a message to the screen showing the products were not found */\r\n\r\n\r\n\r\n                        console.log(res.data.errorMessage);\r\n                    } else {\r\n                        console.log(\"Records read to Admin dashboard\");\r\n                        this.setState({ products: res.data,       // This state of products when passed will have the filters applied\r\n                                               defaultProducts: res.data // keep a default view for filtering\r\n                        });\r\n                    }\r\n                } else {\r\n                    console.log(\"Record not found\");\r\n                }\r\n            });\r\n    }\r\n\r\n    updateProducts = (newProductState) => {\r\n        this.setState({products: newProductState})\r\n        console.log(\"State of products updated \")\r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"admin-head-container\">\r\n                    <Navbar/>\r\n                </div>\r\n\r\n                <AdminControls/>\r\n                <div className=\"admin-body-container\">\r\n\r\n\r\n\r\n                    <div className=\"filter-container\">\r\n                        <Filters\r\n                            updateProducts={this.updateProducts}\r\n                            products={this.state.products}\r\n                            defaultProducts={this.state.defaultProducts}\r\n                        />\r\n                    </div>\r\n                    <div className=\"admin-table-container\">\r\n                        <AdminProductView\r\n                            products={this.state.products}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"testing-return\"><Link className=\"testing-red-button\" to={\"/TestingDirectory\"}>RETURN</Link></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}