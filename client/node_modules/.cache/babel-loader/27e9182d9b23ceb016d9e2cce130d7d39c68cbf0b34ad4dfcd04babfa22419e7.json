{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Desktop\\\\CA2\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\Login\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nimport LinkInClass from \"../LinkInClass\";\nimport NavBar from \"../NavBar\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n    this.handleSubmit = e => {\n      let isNameValid = this.validateName();\n      let isEmailValid = this.validateEmail();\n      let isPasswordValid = this.validatePassword();\n      let isConfirmPasswordValid = this.validateConfirmPassword();\n      let formData = new FormData();\n      formData.append(\"profilePhoto\", this.state.selectedFile);\n      if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid)\n        // if inputs have passed validation\n        {\n          e.preventDefault();\n          axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {\n            headers: {\n              \"Content-type\": \"multipart/form-data\"\n            }\n          }).then(res => {\n            if (res.data) {\n              if (res.data.errorMessage) {\n                console.log(res.data.errorMessage);\n              } else\n                // user successfully registered\n                {\n                  console.log(\"User registered and logged in\");\n                  localStorage.name = res.data.name;\n                  localStorage.accessLevel = res.data.accessLevel;\n                  localStorage.profilePhoto = res.data.profilePhoto;\n                  localStorage.token = res.data.token;\n                  localStorage.userID = res.data._id;\n                  this.setState({\n                    isRegistered: true\n                  });\n                }\n            } else {\n              console.log(\"Registration failed\");\n            }\n          });\n        } else {\n        console.log(\"Current values have not been posted\");\n      }\n      // console.log(this.validateName())\n      // console.log(this.state.errors.name)\n      // console.log(this.state.errors.email)\n      // console.log(this.state.errors.password)\n      // console.log(this.state.errors.confirmPassword)\n    };\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false,\n      selectedFile: null,\n      errors: {\n        // used to keep track of current validation errors\n        name: [],\n        email: [],\n        password: [],\n        confirmPassword: []\n      }\n    };\n  }\n  // Client side validation for Registration page\n  // if all of these return true the data will be posted\n  validateName() {\n    const name = this.state.name;\n    const errors = [];\n    if (/\\d/.test(name)) {\n      errors.push(\"Name cannot contain numbers\");\n    }\n    if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\n      errors.push(\"Name cannot contain special characters\");\n    }\n    if (!name.trim()) {\n      errors.push(\"Name cannot be empty\");\n    }\n\n    // update the state of name within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        name: errors\n      }\n    }));\n    //console.log(\"Errors for name: \", errors)\n    return errors.length !== 0;\n  }\n  validateEmail() {\n    const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/;\n    const email = this.state.email;\n    const errors = [];\n    if (!email.trim()) {\n      errors.push(\"Email cannot be empty\");\n    }\n    if (!pattern.test(email) && email.trim()) {\n      errors.push(\"Invalid email format\");\n    }\n\n    // update the state of email within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: errors\n      }\n    }));\n    //console.log(\"Errors for email: \", errors)\n    return errors.length !== 0;\n  }\n  validatePassword() {\n    const specialCharPattern = /[!£_\"$*^&()+=#.-]/;\n    const password = this.state.password;\n    const errors = [];\n    if (password.length < 8) {\n      errors.push(\"Password must be > 8 characters long\");\n    }\n    if (!/[0-9]/.test(password)) {\n      errors.push(\"Password must contain at least 1 number \");\n    }\n    if (!specialCharPattern.test(password)) {\n      errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\");\n    }\n\n    // update the state of password within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: errors\n      }\n    }));\n    //console.log(\"Errors for password: \", errors)\n    return errors.length !== 0;\n  }\n  validateConfirmPassword() {\n    const errors = [];\n    if (this.state.password !== this.state.confirmPassword) {\n      errors.push(\"Passwords do not match\");\n    }\n\n    // update the state of confirmPassword within errors with current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        confirmPassword: errors\n      }\n    }));\n\n    //console.log(\"Errors for confirmPassword: \", errors)\n    return errors.length !== 0;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-head-container\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-page-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"CREATE YOUR ACCOUNT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"register-form\",\n            noValidate: true,\n            id: \"loginOrRegistrationForm\",\n            children: [this.state.isRegistered ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/TestingDirectory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 52\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Name\",\n                autoComplete: \"name\",\n                value: this.state.name,\n                onChange: this.handleChange,\n                ref: input => {\n                  this.inputToFocus = input;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 29\n              }, this), this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Email Address:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 50\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Email\",\n                autoComplete: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                autoComplete: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 29\n              }, this), this.state.errors.password.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-error-container\",\n                children: this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u2022 \", error]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                autoComplete: \"confirmPassword\",\n                value: this.state.confirmPassword,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-profile-image\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Add a Profile Picture: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: this.handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Email\",\n                autoComplete: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 25\n              }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 29\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                autoComplete: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 25\n              }, this), this.state.errors.password.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-error-container\",\n                children: this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u2022 \", error]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 29\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                autoComplete: \"confirmPassword\",\n                value: this.state.confirmPassword,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: this.handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this), this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(LinkInClass, {\n                value: \"Register\",\n                className: \"green-button\",\n                onClick: this.handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 29\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 115\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/AccountPage\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel-btn\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","ACCESS_LEVEL_ADMIN","SERVER_HOST","LinkInClass","NavBar","Footer","jsxDEV","_jsxDEV","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","isNameValid","validateName","isEmailValid","validateEmail","isPasswordValid","validatePassword","isConfirmPasswordValid","validateConfirmPassword","formData","FormData","append","state","preventDefault","post","email","password","headers","then","res","data","errorMessage","console","log","localStorage","accessLevel","profilePhoto","token","userID","_id","isRegistered","confirmPassword","errors","test","push","trim","prevState","length","pattern","specialCharPattern","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","map","error","index","onClick"],"sources":["C:/Users/jamie/Desktop/CA2/NODEJS-ONLY/client/src/components/Login/Register.js"],"sourcesContent":["import React,{Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\r\nimport LinkInClass from \"../LinkInClass\";\r\nimport NavBar from \"../NavBar\";\r\nimport Footer from \"../Footer\";\r\nexport default class Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            name:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            isRegistered:false,\r\n            selectedFile:null,\r\n            errors: { // used to keep track of current validation errors\r\n                name: [],\r\n                email: [],\r\n                password: [],\r\n                confirmPassword: []\r\n            }\r\n        }\r\n    }\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleFileChange=(e)=>{\r\n        this.setState({selectedFile: e.target.files[0]})\r\n    }\r\n\r\n    // Client side validation for Registration page\r\n    // if all of these return true the data will be posted\r\n    validateName()\r\n    {\r\n        const name = this.state.name\r\n        const errors = [];\r\n\r\n\r\n        if(/\\d/.test(name)) {\r\n            errors.push(\"Name cannot contain numbers\")\r\n        }\r\n        if(/[!\"£_'$*^&()+=#.-]/.test(name)) {\r\n            errors.push(\"Name cannot contain special characters\")\r\n        }\r\n        if(!name.trim()) {\r\n            errors.push(\"Name cannot be empty\")\r\n        }\r\n\r\n        // update the state of name within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                name: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for name: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n    validateEmail()\r\n    {\r\n        const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/\r\n        const email = this.state.email\r\n        const errors = []\r\n\r\n\r\n        if(!email.trim()) {\r\n            errors.push(\"Email cannot be empty\")\r\n        }\r\n        if(!pattern.test(email) && email.trim()) {\r\n            errors.push(\"Invalid email format\")\r\n        }\r\n\r\n        // update the state of email within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                email: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for email: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n    validatePassword()\r\n    {\r\n        const specialCharPattern = /[!£_\"$*^&()+=#.-]/\r\n        const password = this.state.password\r\n        const errors = []\r\n\r\n\r\n        if(password.length < 8) {\r\n            errors.push(\"Password must be > 8 characters long\")\r\n        }\r\n        if(!/[0-9]/.test(password)) {\r\n            errors.push(\"Password must contain at least 1 number \")\r\n        }\r\n        if(!specialCharPattern.test(password)) {\r\n            errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\")\r\n        }\r\n\r\n        // update the state of password within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                password: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for password: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n    validateConfirmPassword()\r\n    {\r\n        const errors = []\r\n\r\n\r\n        if(this.state.password !== this.state.confirmPassword) {\r\n            errors.push(\"Passwords do not match\")\r\n        }\r\n\r\n        // update the state of confirmPassword within errors with current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                confirmPassword: errors\r\n            }\r\n        }))\r\n\r\n        //console.log(\"Errors for confirmPassword: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    handleSubmit=(e)=> {\r\n        let isNameValid = this.validateName()\r\n        let isEmailValid = this.validateEmail()\r\n        let isPasswordValid = this.validatePassword()\r\n        let isConfirmPasswordValid = this.validateConfirmPassword()\r\n        let formData=new FormData()\r\n        formData.append(\"profilePhoto\",this.state.selectedFile)\r\n        if(!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid) // if inputs have passed validation\r\n        {\r\n            e.preventDefault()\r\n\r\n            axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`,formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\r\n                .then(res =>\r\n                {\r\n                    if(res.data)\r\n                    {\r\n                        if (res.data.errorMessage)\r\n                        {\r\n                            console.log(res.data.errorMessage)\r\n                        }\r\n                        else // user successfully registered\r\n                        {\r\n                            console.log(\"User registered and logged in\")\r\n\r\n                            localStorage.name = res.data.name\r\n                            localStorage.accessLevel = res.data.accessLevel\r\n                            localStorage.profilePhoto=res.data.profilePhoto\r\n                            localStorage.token=res.data.token\r\n                            localStorage.userID=res.data._id\r\n                            this.setState({isRegistered:true})\r\n                        }\r\n\r\n                    }else{\r\n                        console.log(\"Registration failed\")\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            console.log(\"Current values have not been posted\")\r\n        }\r\n        // console.log(this.validateName())\r\n        // console.log(this.state.errors.name)\r\n        // console.log(this.state.errors.email)\r\n        // console.log(this.state.errors.password)\r\n        // console.log(this.state.errors.confirmPassword)\r\n\r\n    }\r\nrender(){\r\n        return(\r\n            <div>\r\n                <div className=\"register-head-container\">\r\n                <NavBar/>\r\n                </div>\r\n                <div className=\"register-container\">\r\n                    <div className=\"register-page-box\">\r\n                <h1>CREATE YOUR ACCOUNT</h1>\r\n\r\n                    <form className=\"register-form\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n                        {this.state.isRegistered ? <Redirect to=\"/TestingDirectory\"/> : null}\r\n\r\n                        {/*  &#x2022; == unicode for bullet point  */}\r\n                        <div className={\"register-section1\"}>\r\n                            <label>Name:<span> *</span></label>\r\n                            <input\r\n                                name = \"name\"\r\n                                type = \"text\"\r\n                                placeholder = \"Name\"\r\n                                autoComplete=\"name\"\r\n                                value = {this.state.name}\r\n                                onChange = {this.handleChange}\r\n                                ref = {(input) => { this.inputToFocus = input }}\r\n                            />\r\n                            {this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => (\r\n                                <div key={index} className=\"error-message\">\r\n                                    &#x2022; {error}\r\n                                </div>\r\n                            ))}\r\n                            <br/>\r\n\r\n                            <label>Email Address:<span> *</span> </label>\r\n                            <input\r\n                                name = \"email\"\r\n                                type = \"email\"\r\n                                placeholder = \"Email\"\r\n                                autoComplete=\"email\"\r\n                                value = {this.state.email}\r\n                                onChange = {this.handleChange}\r\n                            />\r\n                            {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                                <div key={index} className=\"error-message\">\r\n                                    &#x2022; {error}\r\n                                </div>\r\n                            ))}\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <div className={\"register-section2\"}>\r\n                            <label>Password:<span> *</span></label>\r\n                            <input\r\n                                name = \"password\"\r\n                                type = \"password\"\r\n                                placeholder = \"Password\"\r\n                                autoComplete=\"password\"\r\n                                value = {this.state.password}\r\n                                onChange = {this.handleChange}\r\n                            />\r\n                            {this.state.errors.password.length > 0 ? (\r\n                                <div className=\"password-error-container\">\r\n                                    {this.state.errors.password.map((error, index) => (\r\n                                        <div key={index}>\r\n                                            &#x2022; {error}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            <br/>\r\n\r\n                            <label>Confirm Password:<span> *</span></label>\r\n                            <input\r\n                                name = \"confirmPassword\"\r\n                                type = \"password\"\r\n                                placeholder = \"Confirm password\"\r\n                                autoComplete=\"confirmPassword\"\r\n                                value = {this.state.confirmPassword}\r\n                                onChange = {this.handleChange}\r\n                            />\r\n                            <div className={\"select-profile-image\"}>\r\n                                <label>Add a Profile Picture: </label>\r\n                                <input type=\"file\" onChange={this.handleFileChange}/>\r\n                            </div>\r\n                        <br/>\r\n\r\n                        <input\r\n                            name = \"email\"\r\n                            type = \"email\"\r\n                            placeholder = \"Email\"\r\n                            autoComplete=\"email\"\r\n                            value = {this.state.email}\r\n                            onChange = {this.handleChange}\r\n                        />\r\n                        {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                            <div key={index} className=\"error-message\">\r\n                                &#x2022; {error}\r\n                            </div>\r\n                        ))}\r\n                        <br/>\r\n\r\n                        <input\r\n                            name = \"password\"\r\n                            type = \"password\"\r\n                            placeholder = \"Password\"\r\n                            autoComplete=\"password\"\r\n                            value = {this.state.password}\r\n                            onChange = {this.handleChange}\r\n                        />\r\n                        {this.state.errors.password.length > 0 ? (\r\n                            <div className=\"password-error-container\">\r\n                                {this.state.errors.password.map((error, index) => (\r\n                                    <div key={index}>\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <br/>\r\n\r\n                        <input\r\n                            name = \"confirmPassword\"\r\n                            type = \"password\"\r\n                            placeholder = \"Confirm password\"\r\n                            autoComplete=\"confirmPassword\"\r\n                            value = {this.state.confirmPassword}\r\n                            onChange = {this.handleChange}\r\n                        />\r\n                        <input type=\"file\" onChange={this.handleFileChange}/>\r\n\r\n                            {this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => (\r\n                                <div key={index} className=\"error-message\">\r\n                                    &#x2022; {error}\r\n                                </div>\r\n                            ))}\r\n                            <br/><br/>\r\n                        </div>\r\n                        <div className=\"register-buttons\">\r\n                            <LinkInClass value=\"Register\" className=\"green-button\" onClick={this.handleSubmit} /> <br/>\r\n                            <Link to={\"/AccountPage\"}>\r\n                                <button className={\"cancel-btn\"}>\r\n                                    Cancel\r\n                                </button>\r\n                            </Link>\r\n                            {/*<Link className=\"red-button\" to={\"/AccountPage\"}>Cancel</Link>*/}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                <footer>\r\n                    <Footer/>\r\n                </footer>\r\n            </div>\r\n\r\n        )}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}