{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/AdminDashboard/Filters.js\";\nimport React, { Component } from \"react\";\nexport default class Filters extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleApplyFilters = () => {\n      // Get filters using helper method getCheckedValues for each entry to populate\n      // filters[] with the selected values\n      let filters = {\n        gender: this.getCheckedValues(\"gender\"),\n        size: this.getCheckedValues(\"size\"),\n        category: this.getCheckedValues(\"category\"),\n        colour: this.getCheckedValues(\"colour\")\n      };\n\n      if (filters.gender.length === 0 && filters.size.length === 0 && filters.category.length === 0 && filters.colour.length === 0) {\n        console.log(\"There are no filters selected\");\n\n        while (this.state.filteredProducts.length > 0) {\n          // empty array containing matching products from previous filters\n          this.state.filteredProducts.pop();\n        }\n\n        this.props.updateProducts(this.props.defaultProducts);\n      } else {\n        console.log(\"Filters ->  \", filters); // check the values from filters[] against the values from products[]\n        // if true push to filteredProducts, if a matching product_id is found in both is wont be pushed\n\n        this.props.products.forEach(product => {\n          if ((filters.gender.length === 0 || filters.gender.includes(product.gender)) && (filters.size.length === 0 || filters.size.some(size => product.size.includes(size))) && (filters.category.length === 0 || filters.category.includes(product.category)) && (filters.colour.length === 0 || filters.colour.includes(product.colour)) && !this.state.filteredProducts.find(p => p.product_id === product.product_id)) {\n            this.state.filteredProducts.push(product);\n          }\n        });\n        console.log(\"Products Matching -> \", this.state.filteredProducts); // using a call back function passed from AdminDashboard to update the state\n        // and show the results from the selected filters\n\n        this.props.updateProducts(this.state.filteredProducts);\n      }\n    };\n\n    this.getCheckedValues = filterName => {\n      let checkboxes = document.getElementsByName(filterName);\n      let checkedValues = [];\n      checkboxes.forEach(checkbox => {\n        if (checkbox.checked) checkedValues.push(checkbox.value);\n      });\n      return checkedValues;\n    };\n\n    this.state = {\n      filteredProducts: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"div\", {\n      className: \"checkbox-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" M\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" F\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"labelx\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" O\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"gender\",\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" S\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" M\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" L\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"size\",\n      value: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" Sports\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \" Casual\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Casual\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Summer\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Summer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" Spooky\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Spooky\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" Graphic\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Graphic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Smart\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Smart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Marvel\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"category\",\n      value: \"Superhero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(\"div\", {\n      className: \"checkbox-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Red\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" Green\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \" Blue\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" Grey\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"checkbox-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" Purple\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \" White\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"White\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \" Pink\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \" Yellow\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"colour\",\n      value: \"Yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"div\", {\n      className: \"checkbox-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"range\",\n      id: \"price-filter\",\n      min: \"0.00\",\n      max: \"99.99\",\n      defaultValue: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"checkbox-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleApplyFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Apply\")));\n  }\n\n} //      Solution 2\n//      catches any duplicates\n//\n// if(filters.gender.length > 0) {\n//     filters.gender.forEach(gender => {\n//         this.props.products.forEach(product => {\n//             if(product.gender === gender && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }\n//\n// if(filters.size.length > 0) {\n//     filters.size.forEach(size => {\n//         this.props.products.forEach(product => {\n//             if(product.size.includes(size) && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }","map":{"version":3,"sources":["/Users/lukehilliard/Desktop/NODEJS-ONLY/client/src/components/AdminDashboard/Filters.js"],"names":["React","Component","Filters","constructor","props","handleApplyFilters","filters","gender","getCheckedValues","size","category","colour","length","console","log","state","filteredProducts","pop","updateProducts","defaultProducts","products","forEach","product","includes","some","find","p","product_id","push","filterName","checkboxes","document","getElementsByName","checkedValues","checkbox","checked","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nexport default class Filters extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            filteredProducts: []\n        }\n    }\n\n    handleApplyFilters = () => {\n        // Get filters using helper method getCheckedValues for each entry to populate\n        // filters[] with the selected values\n        let filters = {\n            gender: this.getCheckedValues(\"gender\"),\n            size: this.getCheckedValues(\"size\"),\n            category: this.getCheckedValues(\"category\"),\n            colour: this.getCheckedValues(\"colour\"),\n        }\n\n        if(filters.gender.length === 0 &&\n           filters.size.length === 0 &&\n           filters.category.length === 0 &&\n           filters.colour.length === 0)\n        {\n            console.log(\"There are no filters selected\")\n            while(this.state.filteredProducts.length > 0) { // empty array containing matching products from previous filters\n                this.state.filteredProducts.pop()\n            }\n            this.props.updateProducts(this.props.defaultProducts)\n\n        } else {\n            console.log(\"Filters ->  \", filters)\n\n            // check the values from filters[] against the values from products[]\n            // if true push to filteredProducts, if a matching product_id is found in both is wont be pushed\n\n            this.props.products.forEach(product => {\n                if((filters.gender.length === 0 || filters.gender.includes(product.gender)) &&\n                    (filters.size.length === 0 || filters.size.some(size => product.size.includes(size))) &&\n                    (filters.category.length === 0 || filters.category.includes(product.category)) &&\n                    (filters.colour.length === 0 || filters.colour.includes(product.colour)) &&\n                    !this.state.filteredProducts.find(p => p.product_id === product.product_id))\n                {\n                    this.state.filteredProducts.push(product)\n                }\n            })\n            console.log(\"Products Matching -> \", this.state.filteredProducts)\n\n            // using a call back function passed from AdminDashboard to update the state\n            // and show the results from the selected filters\n            this.props.updateProducts(this.state.filteredProducts)\n        }\n    }\n\n    // Helper function to get the values from a checkbox group and add them\n    // to their respective arrays\n    getCheckedValues = (filterName) => {\n        let checkboxes = document.getElementsByName(filterName)\n        let checkedValues = []\n\n        checkboxes.forEach((checkbox) => {\n            if(checkbox.checked)\n                checkedValues.push(checkbox.value)\n        })\n        return checkedValues\n    }\n\n\n    render() {\n        return (\n                <fieldset>\n\n                    <h4>Gender</h4>\n                    <div className=\"checkbox-filters\">\n                        <label> M\n                            <input\n                                type=\"checkbox\"\n                                name=\"gender\"\n                                value=\"Male\"/>\n                        </label>\n\n                        <label> F\n                            <input\n                                type=\"checkbox\"\n                                name=\"gender\"\n                                value=\"Female\"/>\n                        </label>\n\n                        <labelx> O\n                            <input\n                                type=\"checkbox\"\n                                name=\"gender\"\n                                value=\"Other\"/>\n                        </labelx>\n                    </div>\n\n                    <h4>Size</h4>\n                    <div>\n                        <label> S\n                            <input\n                                type=\"checkbox\"\n                                name=\"size\"\n                                value=\"small\"/>\n                        </label>\n\n                        <label> M\n                            <input\n                                type=\"checkbox\"\n                                name=\"size\"\n                                value=\"medium\"/>\n                        </label>\n\n                        <label> L\n                            <input\n                                type=\"checkbox\"\n                                name=\"size\"\n                                value=\"large\"/>\n                        </label>\n                    </div>\n\n\n                    <h4>Category</h4>\n                    <div >\n                        <label> Sports\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Sports\"/>\n                        </label>\n\n                        <label> Casual\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Casual\"/>\n                        </label>\n\n                        <label> Summer\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Summer\"/>\n                        </label>\n                    </div>\n                    <div className=\"category\">\n                        <label> Spooky\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Spooky\"/>\n                        </label>\n\n                        <label> Graphic\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Graphic\"/>\n                        </label>\n\n                        <label> Smart\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Smart\"/>\n                        </label>\n\n                        <label> Marvel\n                            <input\n                                type=\"checkbox\"\n                                name=\"category\"\n                                value=\"Superhero\"/>\n                        </label>\n                   </div>\n\n\n\n                    <h4>Colour</h4>\n                    <div className=\"checkbox-filters\">\n                        <label>Red\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Red\"/>\n                        </label>\n                        <label> Green\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Green\"/>\n                        </label>\n                        <label> Blue\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Blue\"/>\n                        </label>\n                        <label> Grey\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Grey\"/>\n                        </label>\n                    </div>\n                    <div className=\"checkbox-filters\">\n                        <label> Purple\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Purple\"/>\n                        </label>\n                        <label> White\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"White\"/>\n                        </label>\n                        <label> Pink\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Pink\"/>\n                        </label>\n                        <label> Yellow\n                            <input\n                                type=\"checkbox\"\n                                name=\"colour\"\n                                value=\"Yellow\"/>\n                        </label>\n                    </div>\n\n                    <h4>Price</h4>\n                    <div className=\"checkbox-filters\">\n                            <input\n                                type=\"range\"\n                                id=\"price-filter\"\n                                min=\"0.00\" max=\"99.99\"\n                                defaultValue={0}\n                            />\n                    </div>\n\n                    <div className=\"checkbox-button\">\n                       <button type=\"button\" onClick={this.handleApplyFilters}>Apply</button>\n                    </div>\n                </fieldset>\n        )\n    }\n}\n\n\n//      Solution 2\n//      catches any duplicates\n//\n// if(filters.gender.length > 0) {\n//     filters.gender.forEach(gender => {\n//         this.props.products.forEach(product => {\n//             if(product.gender === gender && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }\n//\n// if(filters.size.length > 0) {\n//     filters.size.forEach(size => {\n//         this.props.products.forEach(product => {\n//             if(product.size.includes(size) && !filteredProducts.find(p => p.product_id === product.product_id)) {\n//                 filteredProducts.push(product)\n//             }\n//         })\n//     })\n// }"]},"metadata":{},"sourceType":"module"}