{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Desktop\\\\CA2\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\Login\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../../config/global_constants\";\nimport LinkInClass from \"../LinkInClass\";\nimport NavBar from \"../NavBar\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n    this.handleSubmit = e => {\n      let isNameValid = this.validateName();\n      let isEmailValid = this.validateEmail();\n      let isPasswordValid = this.validatePassword();\n      let isConfirmPasswordValid = this.validateConfirmPassword();\n      let formData = new FormData();\n      formData.append(\"profilePhoto\", this.state.selectedFile);\n      if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid)\n        // if inputs have passed validation\n        {\n          e.preventDefault();\n          axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {\n            headers: {\n              \"Content-type\": \"multipart/form-data\"\n            }\n          }).then(res => {\n            // user successfully registered\n            // console.log(\"User registered and logged in\")\n            localStorage.name = res.data.name;\n            localStorage.accessLevel = res.data.accessLevel;\n            localStorage.profilePhoto = res.data.profilePhoto;\n            localStorage.token = res.data.token;\n            this.setState({\n              isRegistered: true\n            });\n          }).catch(err => {\n            this.setState({\n              wasSubmittedAtLeastOnce: true\n            });\n          });\n        } else {\n        console.log(\"Current values have not been posted\");\n      }\n      // console.log(this.validateName())\n      // console.log(this.state.errors.name)\n      // console.log(this.state.errors.email)\n      // console.log(this.state.errors.password)\n      // console.log(this.state.errors.confirmPassword)\n    };\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false,\n      selectedFile: null,\n      wasSubmittedAtLeastOnce: false,\n      errors: {\n        // used to keep track of current validation errors\n        name: [],\n        email: [],\n        password: [],\n        confirmPassword: []\n      }\n    };\n  }\n  // Client side validation for Registration page\n  // if all of these return true the data will be posted\n  validateName() {\n    const name = this.state.name;\n    const errors = [];\n    if (/\\d/.test(name)) {\n      errors.push(\"Name cannot contain numbers\");\n    }\n    if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\n      errors.push(\"Name cannot contain special characters\");\n    }\n    if (!name.trim()) {\n      errors.push(\"Name cannot be empty\");\n    }\n\n    // update the state of name within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        name: errors\n      }\n    }));\n    //console.log(\"Errors for name: \", errors)\n    return errors.length !== 0;\n  }\n  validateEmail() {\n    const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/;\n    const email = this.state.email;\n    const errors = [];\n    if (!email.trim()) {\n      errors.push(\"Email cannot be empty\");\n    }\n    if (!pattern.test(email) && email.trim()) {\n      errors.push(\"Invalid email format\");\n    }\n\n    // update the state of email within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: errors\n      }\n    }));\n    //console.log(\"Errors for email: \", errors)\n    return errors.length !== 0;\n  }\n  validatePassword() {\n    const specialCharPattern = /[!£_\"$*^&()+=#.-]/;\n    const password = this.state.password;\n    const errors = [];\n    if (password.length < 8) {\n      errors.push(\"Password must be > 8 characters long\");\n    }\n    if (!/[0-9]/.test(password)) {\n      errors.push(\"Password must contain at least 1 number \");\n    }\n    if (!specialCharPattern.test(password)) {\n      errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\");\n    }\n\n    // update the state of password within errors with the current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: errors\n      }\n    }));\n    //console.log(\"Errors for password: \", errors)\n    return errors.length !== 0;\n  }\n  validateConfirmPassword() {\n    const errors = [];\n    if (this.state.password !== this.state.confirmPassword) {\n      errors.push(\"Passwords do not match\");\n    }\n\n    // update the state of confirmPassword within errors with current errors\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        confirmPassword: errors\n      }\n    }));\n\n    //console.log(\"Errors for confirmPassword: \", errors)\n    return errors.length !== 0;\n  }\n  render() {\n    let errorMessage = \"\";\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"Error: All fields must be filled in\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 28\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-head-container\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-page-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"CREATE YOUR ACCOUNT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"register-form\",\n            noValidate: true,\n            id: \"loginOrRegistrationForm\",\n            children: [this.state.isRegistered ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/TestingDirectory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 56\n            }, this) : null, errorMessage, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Name\",\n                autoComplete: \"name\",\n                value: this.state.name,\n                onChange: this.handleChange,\n                ref: input => {\n                  this.inputToFocus = input;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Email Address:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 54\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Email\",\n                autoComplete: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"register-buttons\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"submit-btn-container\",\n                  children: [/*#__PURE__*/_jsxDEV(LinkInClass, {\n                    value: \"Register\",\n                    type: \"button\",\n                    className: \"submit-btn\",\n                    onClick: this.handleSubmit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 84\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-section2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 72\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                autoComplete: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), this.state.errors.password.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-error-container\",\n                children: this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u2022 \", error]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 80\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"confirmPassword\",\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                autoComplete: \"confirmPassword\",\n                value: this.state.confirmPassword,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-profile-image\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Add a Profile Picture: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: this.handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [\"\\u2022 \", error]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-buttons\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"register-btn-container\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/AccountPage\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-btn\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Redirect","Link","axios","ACCESS_LEVEL_ADMIN","SERVER_HOST","LinkInClass","NavBar","Footer","jsxDEV","_jsxDEV","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","isNameValid","validateName","isEmailValid","validateEmail","isPasswordValid","validatePassword","isConfirmPasswordValid","validateConfirmPassword","formData","FormData","append","state","preventDefault","post","email","password","headers","then","res","localStorage","data","accessLevel","profilePhoto","token","isRegistered","catch","err","wasSubmittedAtLeastOnce","console","log","confirmPassword","errors","test","push","trim","prevState","length","pattern","specialCharPattern","render","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","map","error","index","onClick"],"sources":["C:/Users/jamie/Desktop/CA2/NODEJS-ONLY/client/src/components/Login/Register.js"],"sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../../config/global_constants\"\r\nimport LinkInClass from \"../LinkInClass\";\r\nimport NavBar from \"../NavBar\";\r\nimport Footer from \"../Footer\";\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            isRegistered: false,\r\n            selectedFile: null,\r\n            wasSubmittedAtLeastOnce:false,\r\n            errors: { // used to keep track of current validation errors\r\n                name: [],\r\n                email: [],\r\n                password: [],\r\n                confirmPassword: []\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({selectedFile: e.target.files[0]})\r\n    }\r\n\r\n    // Client side validation for Registration page\r\n    // if all of these return true the data will be posted\r\n    validateName() {\r\n        const name = this.state.name\r\n        const errors = [];\r\n\r\n\r\n        if (/\\d/.test(name)) {\r\n            errors.push(\"Name cannot contain numbers\")\r\n        }\r\n        if (/[!\"£_'$*^&()+=#.-]/.test(name)) {\r\n            errors.push(\"Name cannot contain special characters\")\r\n        }\r\n        if (!name.trim()) {\r\n            errors.push(\"Name cannot be empty\")\r\n        }\r\n\r\n        // update the state of name within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                name: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for name: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validateEmail() {\r\n        const pattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+.[a-zA-Z]+$/\r\n        const email = this.state.email\r\n        const errors = []\r\n\r\n\r\n        if (!email.trim()) {\r\n            errors.push(\"Email cannot be empty\")\r\n        }\r\n        if (!pattern.test(email) && email.trim()) {\r\n            errors.push(\"Invalid email format\")\r\n        }\r\n\r\n        // update the state of email within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                email: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for email: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validatePassword() {\r\n        const specialCharPattern = /[!£_\"$*^&()+=#.-]/\r\n        const password = this.state.password\r\n        const errors = []\r\n\r\n\r\n        if (password.length < 8) {\r\n            errors.push(\"Password must be > 8 characters long\")\r\n        }\r\n        if (!/[0-9]/.test(password)) {\r\n            errors.push(\"Password must contain at least 1 number \")\r\n        }\r\n        if (!specialCharPattern.test(password)) {\r\n            errors.push(\"Password must contain at least 1 special character !£_$*^&()+=#.-\")\r\n        }\r\n\r\n        // update the state of password within errors with the current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                password: errors\r\n            }\r\n        }))\r\n        //console.log(\"Errors for password: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    validateConfirmPassword() {\r\n        const errors = []\r\n\r\n\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            errors.push(\"Passwords do not match\")\r\n        }\r\n\r\n        // update the state of confirmPassword within errors with current errors\r\n        this.setState(prevState => ({\r\n            errors: {\r\n                ...prevState.errors,\r\n                confirmPassword: errors\r\n            }\r\n        }))\r\n\r\n        //console.log(\"Errors for confirmPassword: \", errors)\r\n        return errors.length !== 0\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let isNameValid = this.validateName()\r\n        let isEmailValid = this.validateEmail()\r\n        let isPasswordValid = this.validatePassword()\r\n        let isConfirmPasswordValid = this.validateConfirmPassword()\r\n        let formData = new FormData()\r\n        formData.append(\"profilePhoto\", this.state.selectedFile)\r\n        if (!isNameValid && !isEmailValid && !isPasswordValid && !isConfirmPasswordValid) // if inputs have passed validation\r\n        {\r\n            e.preventDefault()\r\n\r\n            axios.post(`${SERVER_HOST}/users/Login/Register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\r\n                .then(res => {\r\n                    // user successfully registered\r\n                            // console.log(\"User registered and logged in\")\r\n                            localStorage.name = res.data.name\r\n                            localStorage.accessLevel = res.data.accessLevel\r\n                            localStorage.profilePhoto = res.data.profilePhoto\r\n                            localStorage.token = res.data.token\r\n                            this.setState({isRegistered: true})\r\n                })\r\n                .catch(err =>\r\n                {\r\n                    this.setState({wasSubmittedAtLeastOnce: true})\r\n                })\r\n        } else {\r\n\r\n            console.log(\"Current values have not been posted\")\r\n        }\r\n        // console.log(this.validateName())\r\n        // console.log(this.state.errors.name)\r\n        // console.log(this.state.errors.email)\r\n        // console.log(this.state.errors.password)\r\n        // console.log(this.state.errors.confirmPassword)\r\n\r\n    }\r\n\r\n    render() {\r\n        let errorMessage = \"\";\r\n        if(this.state.wasSubmittedAtLeastOnce)\r\n        {\r\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"register-head-container\">\r\n                    <NavBar/>\r\n                </div>\r\n                <div className=\"register-container\">\r\n                    <div className=\"register-page-box\">\r\n                        <h1>CREATE YOUR ACCOUNT</h1>\r\n\r\n                        <form className=\"register-form\" noValidate={true} id=\"loginOrRegistrationForm\">\r\n                            {this.state.isRegistered ? <Redirect to=\"/TestingDirectory\"/> : null}\r\n                            {errorMessage}\r\n                            {/*  &#x2022; == unicode for bullet point  */}\r\n                            <div className={\"register-section1\"}>\r\n                                <label>Name:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    autoComplete=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                    ref={(input) => {\r\n                                        this.inputToFocus = input\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.name.length > 0 && this.state.errors.name.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                <label>Email Address:<span> *</span> </label><br/>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/>\r\n                                <div className=\"register-buttons\">\r\n                                    <div className={\"submit-btn-container\"}>\r\n                                        <LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\"\r\n                                                     onClick={this.handleSubmit}/> <br/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"vl\"></div>\r\n                            <div className={\"register-section2\"}>\r\n                                <label>Password:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    autoComplete=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                {this.state.errors.password.length > 0 ? (\r\n                                    <div className=\"password-error-container\">\r\n                                        {this.state.errors.password.map((error, index) => (\r\n                                            <div key={index}>\r\n                                                &#x2022; {error}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : null}\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                <label>Confirm Password:<span> *</span></label><br/>\r\n                                <input\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password\"\r\n                                    autoComplete=\"confirmPassword\"\r\n                                    value={this.state.confirmPassword}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className={\"select-profile-image\"}>\r\n                                    <label>Add a Profile Picture: </label>\r\n                                    <input type=\"file\" onChange={this.handleFileChange}/>\r\n                                </div>\r\n                                <br/>\r\n                                {this.state.errors.confirmPassword.length > 0 && this.state.errors.confirmPassword.map((error, index) => (\r\n                                    <div key={index} className=\"error-message\">\r\n                                        &#x2022; {error}\r\n                                    </div>\r\n                                ))}\r\n                                <br/><br/>\r\n                            </div>\r\n                            <div className=\"register-buttons\">\r\n                                {/*<LinkInClass value=\"Register\" type=\"button\" className=\"submit-btn\" onClick={this.handleSubmit}/> <br/>*/}\r\n                                <div className={\"register-btn-container\"}>\r\n                                    <Link to={\"/AccountPage\"}>\r\n                                        <button className={\"cancel-btn\"}>\r\n                                            Cancel\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                                {/*<Link className=\"red-button\" to={\"/AccountPage\"}>Cancel</Link>*/}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <footer>\r\n                    <Footer/>\r\n                </footer>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}