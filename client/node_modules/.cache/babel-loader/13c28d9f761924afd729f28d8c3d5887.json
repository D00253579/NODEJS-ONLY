{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jamie\\\\Desktop\\\\CA2\\\\NODEJS-ONLY\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Desktop\\\\CA2\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\AdminEditProduct.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../../config/global_constants\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Navbar from \"../NavBar\";\nimport AdminControls from \"./AdminControls\";\nexport default class AdminEditProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        product: _objectSpread({}, prevState.product, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleReturn = () => {\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.validateUpdate = p => {\n      let inputIsValid = true; // if one or more of the inputs are empty they are invalid\n\n      if (!p.name.trim() || !p.colour.trim() || !p.gender.trim() || !p.brand.trim()) {\n        inputIsValid = false;\n        console.log(\"String inputs are empty\");\n      }\n\n      if (p.price.toString().length === 0) {\n        inputIsValid = false;\n        console.log(\"Number inputs are empty\");\n      }\n\n      console.log(\"inputIsValid: \", inputIsValid);\n      return inputIsValid; // Return true if all inputs are non-empty\n    };\n\n    this.handleUpdateProduct = e => {\n      e.preventDefault();\n      let updatedProduct = {\n        name: this.state.product.name,\n        colour: this.state.product.colour,\n        price: this.state.product.price,\n        gender: this.state.product.gender,\n        category: this.state.product.category,\n        brand: this.state.product.brand // if function returns false then one or more inputs are empty, if true send updated product to server\n\n      };\n\n      if (!this.validateUpdate(updatedProduct)) {\n        console.log(\"TODO   Some inputs are invalid \");\n      } else {\n        axios.put(\"\".concat(SERVER_HOST, \"/products/\").concat(this.state.product._id), {\n          updatedProduct\n        }, {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {} else {\n              console.log(\"Updated product: \", updatedProduct);\n              this.setState({\n                redirectToDashboard: true\n              }); // after the update is complete redirect back to AdminDashboard\n            }\n          } else {\n            console.log(\"Product not updated\");\n          }\n        });\n      }\n    };\n\n    this.handleDeleteProduct = () => {\n      const productID = this.props.match.params.id; //console.log(productID)\n\n      axios.delete(\"\".concat(SERVER_HOST, \"/products/\").concat(productID), {\n        headers: {\n          \"authorization\": localStorage.token\n        }\n      }).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {} else {\n            console.log(\"Product has been deleted\");\n          }\n        } else {\n          console.log(\"Product not deleted\");\n        }\n      });\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.state = {\n      product: [],\n      redirectToDashboard: false\n    };\n  }\n\n  componentDidMount() {\n    const productID = this.props.match.params.id; // get productID passed from redirect parameters\n    //console.log(productID)\n    // get the product with the matching id from database collection\n\n    axios.get(\"\".concat(SERVER_HOST, \"/products/\").concat(productID), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {} else {\n          console.log(\"Product found and displaying in AdminEditProduct\");\n          this.setState({\n            product: res.data\n          }); // set state of product to response data\n        }\n      } else {\n        console.log(\"Product not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.redirectToDashboard ? React.createElement(Redirect, {\n      to: \"/AdminDashboard/AdminDashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"admin-edit-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Update Product\"), React.createElement(\"form\", {\n      className: \"edit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.product.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"colour\",\n      value: this.state.product.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.product.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"gender\",\n      value: this.state.product.gender,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      value: this.state.product.category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"edit-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Brand\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"brand\",\n      value: this.state.product.brand,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleUpdateProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"button\", {\n      onClick: this.handleDeleteProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Return\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jamie\\Desktop\\CA2\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\AdminEditProduct.js"],"names":["React","Component","axios","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","Redirect","useParams","Navbar","AdminControls","AdminEditProduct","constructor","props","handleChange","e","name","target","value","setState","prevState","product","handleReturn","redirectToDashboard","validateUpdate","p","inputIsValid","trim","colour","gender","brand","console","log","price","toString","length","handleUpdateProduct","preventDefault","updatedProduct","state","category","put","_id","headers","localStorage","token","then","res","data","errorMessage","handleDeleteProduct","productID","match","params","id","delete","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport axios from \"axios\";\r\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../../config/global_constants\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport Navbar from \"../NavBar\";\r\nimport AdminControls from \"./AdminControls\";\r\n\r\nexport default class AdminEditProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: [],\r\n            redirectToDashboard: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const productID = this.props.match.params.id // get productID passed from redirect parameters\r\n        //console.log(productID)\r\n\r\n        // get the product with the matching id from database collection\r\n        axios.get(`${SERVER_HOST}/products/${productID}`,{headers:{\"authorization\":localStorage.token}})\r\n            .then(res => {\r\n                if(res.data) {\r\n                    if(res.data.errorMessage) {\r\n\r\n                    } else {\r\n                        console.log(\"Product found and displaying in AdminEditProduct\")\r\n                        this.setState({product: res.data}) // set state of product to response data\r\n                    }\r\n                } else {\r\n                    console.log(\"Product not found\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        this.setState((prevState) => ({\r\n            product: {\r\n                ...prevState.product,\r\n                [name]: value,\r\n            }\r\n        }))\r\n    }\r\n    handleReturn = () => {\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n    validateUpdate = (p) => {\r\n        let inputIsValid = true;\r\n\r\n        // if one or more of the inputs are empty they are invalid\r\n        if((!p.name.trim() || !p.colour.trim() || !p.gender.trim() || !p.brand.trim() )) {\r\n            inputIsValid = false;\r\n            console.log(\"String inputs are empty\")\r\n        }\r\n\r\n        if(p.price.toString().length === 0) {\r\n            inputIsValid = false\r\n            console.log(\"Number inputs are empty\")\r\n        }\r\n        console.log(\"inputIsValid: \", inputIsValid)\r\n        return inputIsValid; // Return true if all inputs are non-empty\r\n    }\r\n\r\n\r\n    handleUpdateProduct = (e) => {\r\n        e.preventDefault()\r\n        let updatedProduct = {\r\n            name: this.state.product.name,\r\n            colour: this.state.product.colour,\r\n            price: this.state.product.price,\r\n            gender: this.state.product.gender,\r\n            category: this.state.product.category,\r\n            brand: this.state.product.brand\r\n        }\r\n\r\n        // if function returns false then one or more inputs are empty, if true send updated product to server\r\n        if(!this.validateUpdate(updatedProduct)) {\r\n            console.log(\"TODO   Some inputs are invalid \")\r\n        } else {\r\n            axios.put(`${SERVER_HOST}/products/${this.state.product._id}`, {updatedProduct}, {headers:{\"authorization\":localStorage.token}})\r\n                .then((res) => {\r\n                    if (res.data) {\r\n                        if(res.data.errorMessage) {\r\n\r\n                        } else {\r\n                            console.log(\"Updated product: \",updatedProduct)\r\n                            this.setState({redirectToDashboard: true}) // after the update is complete redirect back to AdminDashboard\r\n                        }\r\n                    } else {\r\n                        console.log(\"Product not updated\")\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    handleDeleteProduct = () => {\r\n        const productID = this.props.match.params.id\r\n        //console.log(productID)\r\n        axios.delete(`${SERVER_HOST}/products/${productID}`, {headers:{\"authorization\":localStorage.token}})\r\n            .then (res =>\r\n            {\r\n                if(res.data) {\r\n                    if(res.data.errorMessage) {\r\n\r\n                    } else {\r\n                        console.log(\"Product has been deleted\")\r\n                    }\r\n                } else {\r\n                    console.log(\"Product not deleted\")\r\n                }\r\n            })\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.redirectToDashboard ? <Redirect to={\"/AdminDashboard/AdminDashboard\"}/> : null }\r\n\r\n                <div className=\"admin-head-container\">\r\n                    <Navbar/>\r\n                </div>\r\n                <div className=\"admin-edit-product\">\r\n                    <h1>Update Product</h1>\r\n                    <form className=\"edit-form\" >\r\n\r\n                        <div className=\"edit-input\">\r\n                            <label>Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.product.name}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label>Colour</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"colour\"\r\n                                value={this.state.product.colour}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label>Price</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"price\"\r\n                                value={this.state.product.price}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label>Gender</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"gender\"\r\n                                value={this.state.product.gender}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label>Category</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"category\"\r\n                                value={this.state.product.category}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"edit-input\">\r\n                            <label>Brand</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"brand\"\r\n                                value={this.state.product.brand}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <button onClick={this.handleUpdateProduct}>Update</button>\r\n                        <button onClick={this.handleDeleteProduct}>Delete</button>\r\n                        <button onClick={this.handleReturn}>Return</button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}