{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\UserTable.js\";\nimport React, { Component } from \"react\";\nimport UserTableRow from \"./UserTableRow\";\nexport default class UserTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortName = () => {\n      // default descending\n      let users = [...this.props.users]; // soft copy of products to manipulate\n      // sort ascending\n\n      if (!this.state.nameIsAscending) {\n        let ascendingProducts = users.sort((a, b) => a.name < b.name ? 1 : -1);\n        this.props.updateUsers(ascendingProducts);\n        console.log(\"Name ACE: \", ascendingProducts); // sort descending\n      } else {\n        let descendingProducts = users.sort((a, b) => a.name < b.name ? -1 : 1);\n        this.props.updateUsers(descendingProducts);\n        console.log(\"Name DESC: \", descendingProducts);\n      } // When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\n\n\n      if (!this.state.nameIsAscending) {\n        this.setState({\n          nameIsAscending: true\n        });\n      } else {\n        this.setState({\n          nameIsAscending: false\n        });\n      } // reset other arrows to default\n\n\n      if (!this.state.accessIsAscending) {\n        this.setState({\n          accessIsAscending: true\n        });\n      }\n    };\n\n    this.sortAccess = () => {\n      // default ascending\n      let users = [...this.props.users]; // sort ascending\n\n      if (!this.state.accessIsAscending) {\n        let ascendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel ? 1 : -1);\n        this.props.updateUsers(ascendingProducts); //console.log(\"Stock ACE: \", ascendingProducts)\n        // sort descending\n      } else {\n        let descendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel ? -1 : 1);\n        this.props.updateUsers(descendingProducts); //console.log(\"Stock DESC: \", descendingProducts)\n      } // Update arrow direction\n\n\n      if (this.state.accessIsAscending) {\n        this.setState({\n          accessIsAscending: false\n        });\n      } else {\n        this.setState({\n          accessIsAscending: true\n        });\n      } // reset other arrow to default\n\n\n      if (this.state.nameIsAscending) {\n        this.setState({\n          nameIsAscending: false\n        });\n      }\n    };\n\n    this.state = {\n      nameIsAscending: false,\n      // default name descending\n      accessIsAscending: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      className: \"admin-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name \", React.createElement(\"label\", {\n      className: \"sortLabel\",\n      onClick: this.sortName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"nameSort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, !this.state.nameIsAscending ? '\\u25B4' : '\\u25BE', \" \"))), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"AccessLevel \", React.createElement(\"label\", {\n      className: \"sortLabel\",\n      onClick: this.sortAccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"accessSort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, !this.state.accessIsAscending ? '\\u25B4' : '\\u25BE', \" \"))), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"U. Code\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.users.map((users, index) => React.createElement(UserTableRow, {\n      key: users._id,\n      users: users,\n      rowNum: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\UserTable.js"],"names":["React","Component","UserTableRow","UserTable","constructor","props","sortName","users","state","nameIsAscending","ascendingProducts","sort","a","b","name","updateUsers","console","log","descendingProducts","setState","accessIsAscending","sortAccess","accessLevel","render","map","index","_id"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport UserTableRow from \"./UserTableRow\";\r\nexport default class UserTable extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameIsAscending: false, // default name descending\r\n            accessIsAscending: true,\r\n\r\n        }\r\n    }\r\n    sortName = () => { // default descending\r\n        let users = [...this.props.users] // soft copy of products to manipulate\r\n\r\n        // sort ascending\r\n        if(!this.state.nameIsAscending) {\r\n            let ascendingProducts = users.sort((a, b) => a.name < b.name?1:-1)\r\n            this.props.updateUsers(ascendingProducts)\r\n            console.log(\"Name ACE: \", ascendingProducts)\r\n        // sort descending\r\n        } else {\r\n            let descendingProducts = users.sort((a, b) => a.name < b.name?-1:1)\r\n            this.props.updateUsers(descendingProducts)\r\n            console.log(\"Name DESC: \", descendingProducts)\r\n        }\r\n\r\n        // When the sort is clicked depending on what the previous order was this will set it to its opposite to change the direction of the arrow\r\n        if(!this.state.nameIsAscending) {\r\n            this.setState({nameIsAscending: true})\r\n        } else {\r\n            this.setState({nameIsAscending: false})\r\n        }\r\n\r\n        // reset other arrows to default\r\n        if(!this.state.accessIsAscending) {\r\n            this.setState({accessIsAscending: true})\r\n        }\r\n    }\r\n    sortAccess = () => { // default ascending\r\n        let users = [...this.props.users]\r\n\r\n        // sort ascending\r\n        if(!this.state.accessIsAscending) {\r\n            let ascendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?1:-1)\r\n            this.props.updateUsers(ascendingProducts)\r\n            //console.log(\"Stock ACE: \", ascendingProducts)\r\n        // sort descending\r\n        } else {\r\n            let descendingProducts = users.sort((a, b) => a.accessLevel < b.accessLevel?-1:1)\r\n            this.props.updateUsers(descendingProducts)\r\n            //console.log(\"Stock DESC: \", descendingProducts)\r\n        }\r\n\r\n        // Update arrow direction\r\n        if(this.state.accessIsAscending) {\r\n            this.setState({accessIsAscending: false})\r\n        } else {\r\n            this.setState({accessIsAscending: true})\r\n        }\r\n\r\n        // reset other arrow to default\r\n        if(this.state.nameIsAscending) {\r\n            this.setState({nameIsAscending: false})\r\n\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <table className=\"admin-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Name <label className=\"sortLabel\" onClick={this.sortName}><span id=\"nameSort\">{!this.state.nameIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\r\n                    <th>Email</th>\r\n                    <th>AccessLevel <label className=\"sortLabel\" onClick={this.sortAccess}><span id=\"accessSort\">{!this.state.accessIsAscending ? '\\u25B4' : '\\u25BE'} </span></label></th>\r\n                    <th>Country</th>\r\n                    <th>U. Code</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {this.props.users.map((users, index) => (\r\n                    <UserTableRow\r\n                        key={users._id}\r\n                        users={users}\r\n                        rowNum={index + 1}\r\n                    />\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}