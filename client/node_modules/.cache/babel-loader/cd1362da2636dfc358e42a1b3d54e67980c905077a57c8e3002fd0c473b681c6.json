{"ast":null,"code":"var _jsxFileName = \"/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AccountPage.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport LinkInClass from \"./LinkInClass\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Footer from \"./Footer\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AccountPage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleSubmit = e => {\n      let loginErrors = [];\n      e.preventDefault();\n      if (this.validateUserLogin()) {\n        //if this returns true, user details passed validation, login user\n\n        axios.post(`${SERVER_HOST}/users/AccountPage/${this.state.email}/${this.state.password}`).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              this.state.isPasswordWrong = true;\n            } else\n              // user successfully logged in\n              {\n                this.state.isPasswordWrong = false;\n                console.log(\"User logged in\");\n                localStorage.name = res.data.name;\n                localStorage.email = this.state.email;\n                localStorage.accessLevel = res.data.accessLevel;\n                localStorage.profilePhoto = res.data.profilePhoto;\n                localStorage.token = res.data.token;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Error logging in\");\n          }\n        });\n      } else {\n        console.log(\"login denied invalid credentials\");\n      }\n    };\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n      users: [],\n      errors: {\n        // used to keep track of current validation errors\n        email: [],\n        password: []\n      }\n    };\n  }\n  componentDidMount() {\n    axios.get(`${SERVER_HOST}/users`).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Users read to Login page\");\n          this.setState({\n            users: res.data\n          });\n          //console.log(\"users: \",this.state.users)\n        }\n      } else {\n        console.log(\"Users not found\");\n      }\n    });\n  }\n  validateUserLogin() {\n    let canLogin = false;\n    let emailErrors = [];\n    let pwErrors = [];\n    let email = this.state.email;\n    let pw = this.state.password;\n    if (!email.trim()) {\n      emailErrors.push(\"Email cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        email: emailErrors\n      }\n    }));\n    if (!pw.trim()) {\n      pwErrors.push(\"Password cannot be empty\");\n    }\n    this.setState(prevState => ({\n      errors: {\n        ...prevState.errors,\n        password: pwErrors\n      }\n    }));\n    if (emailErrors.length === 0 && pwErrors.length === 0) {\n      // if there are no errors\n      {\n        canLogin = true;\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            email: []\n          }\n        }));\n        this.setState(prevState => ({\n          // else set the state of errors.email to an empty array\n          errors: {\n            ...prevState.errors,\n            password: []\n          }\n        }));\n      }\n    }\n    console.log(\"canLogin = \", canLogin);\n    return canLogin;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-head-container\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"WELCOME BACK!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" Email Address:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 51\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/MainPage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 54\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email-input\",\n              placeholder: \"Email\",\n              autoComplete: \"email\",\n              value: this.state.email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [\"\\u2022 \", error]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              id: \"password-input\",\n              placeholder: \"Password\",\n              autoComplete: \"password\",\n              value: this.state.password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [\"\\u2022 \", error]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-box\",\n              children: [/*#__PURE__*/_jsxDEV(LinkInClass, {\n                value: \"SIGNIN\",\n                className: \"signIn-btn\",\n                onClick: this.handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 115\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-account-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"DON'T HAVE AN ACCOUNT?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Login/Register\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"register-btn\",\n                  children: \"CREATE AN ACCOUNT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/MainPage\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"guest-btn\",\n                  children: \"CONTINUE AS GUEST\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","NavBar","axios","LinkInClass","Link","Redirect","Footer","SERVER_HOST","jsxDEV","_jsxDEV","AccountPage","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","loginErrors","preventDefault","validateUserLogin","post","state","email","password","then","res","data","errorMessage","isPasswordWrong","console","log","localStorage","accessLevel","profilePhoto","token","isLoggedIn","users","errors","componentDidMount","get","canLogin","emailErrors","pwErrors","pw","trim","push","prevState","length","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","type","id","placeholder","autoComplete","onChange","map","error","index","onClick"],"sources":["/Users/lukehilliard/Desktop/Full Stack CA2/NODEJS-ONLY/client/src/components/AccountPage.js"],"sourcesContent":["import React, {Component} from \"react\"\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\"\nimport LinkInClass from \"./LinkInClass\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Footer from \"./Footer\";\nimport {SERVER_HOST} from \"../config/global_constants\";\n\nexport default class AccountPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            isLoggedIn: false,\n            users: [],\n            errors: { // used to keep track of current validation errors\n                email: [],\n                password: []\n            }\n        }\n    }\n\n    componentDidMount() {\n\n        axios.get(`${SERVER_HOST}/users`)\n            .then(res => {\n                if (res.data) {\n                    if (res.data.errorMessage) {\n                        console.log(res.data.errorMessage)\n                    } else {\n                        console.log(\"Users read to Login page\")\n                        this.setState({users: res.data})\n                        //console.log(\"users: \",this.state.users)\n                    }\n                } else {\n                    console.log(\"Users not found\")\n                }\n            })\n\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n\n    }\n\n\n    validateUserLogin() {\n        let canLogin = false;\n        let emailErrors = []\n        let pwErrors = []\n        let email = this.state.email\n        let pw = this.state.password\n        if (!email.trim()) {\n            emailErrors.push(\"Email cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                email: emailErrors\n            }\n        }))\n        if (!pw.trim()) {\n            pwErrors.push(\"Password cannot be empty\")\n        }\n        this.setState(prevState => ({\n            errors: {\n                ...prevState.errors,\n                password: pwErrors\n            }\n        }))\n\n        if (emailErrors.length === 0 && pwErrors.length === 0) { // if there are no errors\n            {\n                canLogin = true\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        email: []\n                    }\n                }))\n                this.setState(prevState => ({ // else set the state of errors.email to an empty array\n                    errors: {\n                        ...prevState.errors,\n                        password: []\n                    }\n                }))\n            }\n\n        }\n        console.log(\"canLogin = \", canLogin)\n        return canLogin;\n    }\n\n\n    handleSubmit = (e) => {\n        let loginErrors = []\n        e.preventDefault()\n\n        if (this.validateUserLogin()) { //if this returns true, user details passed validation, login user\n\n            axios.post(`${SERVER_HOST}/users/AccountPage/${this.state.email}/${this.state.password}`)\n\n                .then(res => {\n                    if (res.data) {\n                        if (res.data.errorMessage) {\n                            this.state.isPasswordWrong = true\n                        } else // user successfully logged in\n                        {\n                            this.state.isPasswordWrong = false\n\n                            console.log(\"User logged in\")\n                            localStorage.name = res.data.name\n                            localStorage.email = this.state.email\n                            localStorage.accessLevel = res.data.accessLevel\n                            localStorage.profilePhoto = res.data.profilePhoto\n                            localStorage.token = res.data.token\n\n                            this.setState({isLoggedIn: true})\n                        }\n                    } else {\n                        console.log(\"Error logging in\")\n                    }\n                })\n        } else {\n            console.log(\"login denied invalid credentials\")\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <div className=\"account-head-container\">\n                    <NavBar/>\n                </div>\n                <div className=\"account-container\">\n                    <div className=\"account-box\">\n                        <div className=\"login-box\">\n                            <h1>WELCOME BACK!</h1>\n                            <label> Email Address:<span> *</span> </label>\n                            {this.state.isLoggedIn ? <Redirect to=\"/MainPage\"/> : null}\n\n                            <input type=\"email\" name=\"email\" id=\"email-input\" placeholder=\"Email\" autoComplete=\"email\"\n                                   value={this.state.email} onChange={this.handleChange}/>\n                            {this.state.errors.email.length > 0 && this.state.errors.email.map((error, index) => (\n                                <div key={index} className=\"error-message\">\n                                    &#x2022; {error}\n                                </div>\n                            ))}\n                            <br/><br/>\n                            <label>Password:<span> *</span></label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password-input\"\n                                placeholder=\"Password\"\n                                autoComplete=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                            {this.state.errors.password.length > 0 && this.state.errors.password.map((error, index) => (\n                                <div key={index} className=\"error-message\">\n                                    &#x2022; {error}\n                                </div>\n                            ))}\n                            <div className=\"register-box\">\n                                <LinkInClass value=\"SIGNIN\" className={\"signIn-btn\"} onClick={this.handleSubmit}/><br/>\n                            </div>\n                        </div>\n                        <div className=\"vl\"></div>\n                        <div className=\"register-box\">\n                            <div className={\"no-account-container\"}>\n                                <h1>DON'T HAVE AN ACCOUNT?</h1>\n                                <Link to={\"/Login/Register\"}>\n                                    <button className={\"register-btn\"}>\n                                        CREATE AN ACCOUNT\n                                    </button>\n                                </Link>\n                                {/*Continue as guest would take you back to the main page - using the guest features*/}\n                                <Link to={\"/MainPage\"}>\n                                    <button className={\"guest-btn\"}>\n                                        CONTINUE AS GUEST\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <footer>\n                    <Footer/>\n                </footer>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}