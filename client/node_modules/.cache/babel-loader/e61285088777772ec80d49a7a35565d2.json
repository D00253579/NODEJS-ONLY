{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\AdminProfileView.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"../NavBar\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport { Redirect } from \"react-router-dom\";\nexport default class AdminProfileView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReturn = () => {\n      this.setState({\n        redirectToDashboard: true\n      });\n    };\n\n    this.state = {\n      user: {},\n      redirectToDashboard: false,\n      hasAddress: false\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id; // get user id passed from redirect parameters\n\n    axios.get(\"\".concat(SERVER_HOST, \"/users/\").concat(id), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {} else {\n          console.log(\"User found, displaying profile\");\n          this.setState({\n            user: res.data\n          });\n\n          if (!res.data.address.address_line_1) {\n            // check if the user has an address saved already\n            this.setState({\n              hasAddress: false\n            }); // change states to show saved address or ability to add a new one\n          } else {\n            this.setState({\n              hasAddress: true\n            });\n          }\n        }\n      } else {\n        console.log(\"User not found\");\n      }\n    });\n  } // TODO change to the redirect to maybe the main page??\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"profile-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.redirectToDashboard ? React.createElement(Redirect, {\n      to: \"/AdminDashboard/ViewUsers/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"admin-head-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"User Profile\"), React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile-photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, localStorage.profilePhoto !== \"null\" ? React.createElement(\"img\", {\n      id: \"profilePhoto\",\n      src: \"data:;base64,\".concat(this.state.user.profilePhoto),\n      alt: \"Your profile picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"profile-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.user.email !== localStorage.email ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Details\") : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Your Details\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Name: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.user.name)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.user.email))), this.state.hasAddress ? // if there is an address saved\n    React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.user.email !== localStorage.email ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Address\") : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Your Address\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Line 1: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.user.address.address_line_1)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Line 2: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.user.address.address_line_2)), this.state.user.address.address_line_3 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Line 3: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.user.address.address_line_3)) : null, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"City: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.user.address.city)), this.state.user.address.county ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"County: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.user.address.county)) : null, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Country: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.user.address.country)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Post Code: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.user.address.post_code)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })) : // if there is no address saved\n    React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.user.name, \" \", React.createElement(\"span\", {\n      className: \"lighter-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"has no saved address\")))), React.createElement(\"div\", {\n      className: \"profile-history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Purchase History\")), React.createElement(\"button\", {\n      onClick: this.handleReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Return\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\AdminProfileView.js"],"names":["React","Component","NavBar","axios","SERVER_HOST","Redirect","AdminProfileView","constructor","props","handleReturn","setState","redirectToDashboard","state","user","hasAddress","componentDidMount","id","match","params","get","headers","localStorage","token","then","res","data","errorMessage","console","log","address","address_line_1","render","profilePhoto","email","name","address_line_2","address_line_3","city","county","country","post_code"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport NavBar from \"../NavBar\";\r\nimport axios from \"axios\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default class AdminProfileView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {},\r\n            redirectToDashboard: false,\r\n            hasAddress: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id // get user id passed from redirect parameters\r\n\r\n        axios.get(`${SERVER_HOST}/users/${id}`, {headers: {\"authorization\": localStorage.token}})\r\n            .then(res => {\r\n                if (res.data) {\r\n                    if (res.data.errorMessage) {\r\n\r\n                    } else {\r\n                        console.log(\"User found, displaying profile\")\r\n                        this.setState({user: res.data})\r\n\r\n                        if(!res.data.address.address_line_1) { // check if the user has an address saved already\r\n                            this.setState({hasAddress: false}) // change states to show saved address or ability to add a new one\r\n                        } else {\r\n                            this.setState({hasAddress: true})\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.log(\"User not found\")\r\n                }\r\n            })\r\n    }\r\n\r\n    // TODO change to the redirect to maybe the main page??\r\n    handleReturn = () => {\r\n        this.setState({redirectToDashboard: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile-view\">\r\n                {this.state.redirectToDashboard ? <Redirect to={\"/AdminDashboard/ViewUsers/\"}/> : null}\r\n                <div className=\"admin-head-container\">\r\n                    <NavBar/>\r\n                </div>\r\n\r\n                <h1>User Profile</h1>\r\n\r\n                <div className=\"user-profile\">\r\n\r\n                    <div className=\"profile-container\">\r\n                        <div className=\"profile-photo\">\r\n                            {localStorage.profilePhoto !== \"null\" ?\r\n                                <img id=\"profilePhoto\" src={`data:;base64,${this.state.user.profilePhoto}`}\r\n                                     alt=\"Your profile picture\"/> : null}\r\n                        </div>\r\n\r\n                        <div className=\"profile-details\">\r\n                            <div className=\"left\">\r\n                                {this.state.user.email !== localStorage.email ? <h3>Details</h3> : <h3>Your Details</h3>}\r\n                                <h4>Name: <span>{this.state.user.name}</span></h4>\r\n                                <h4>Email: <span>{this.state.user.email}</span></h4>\r\n\r\n                            </div>\r\n\r\n\r\n                            {this.state.hasAddress ?\r\n                                // if there is an address saved\r\n                                <div className=\"right\">\r\n                                    {this.state.user.email !== localStorage.email ? <h3>Address</h3> : <h3>Your Address</h3>}\r\n                                    <h4>Line 1: <span>{this.state.user.address.address_line_1}</span></h4>\r\n                                    <h4>Line 2: <span>{this.state.user.address.address_line_2}</span></h4>\r\n                                    {this.state.user.address.address_line_3 ? <h4>Line 3: <span>{this.state.user.address.address_line_3}</span></h4> : null}\r\n                                    <h4>City: <span>{this.state.user.address.city}</span></h4>\r\n                                    {this.state.user.address.county ? <h4>County: <span>{this.state.user.address.county}</span></h4> : null}\r\n                                    <h4>Country: <span>{this.state.user.address.country}</span></h4>\r\n                                    <h4>Post Code: <span>{this.state.user.address.post_code}</span></h4>\r\n                                    <br/>\r\n\r\n                                </div>\r\n\r\n                                :\r\n                                // if there is no address saved\r\n                                <div className=\"right\">\r\n                                    <h3>{this.state.user.name} <span className=\"lighter-text\">has no saved address</span></h3>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"profile-history\">\r\n                            <h2>Purchase History</h2>\r\n                            {/*TODO Display a table with minimum information about users 5 most recent purchases*/}\r\n\r\n\r\n                        </div>\r\n                        <button onClick={this.handleReturn}>Return</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}