{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caitl\\\\Desktop\\\\CA2_FullStack\\\\NODEJS-ONLY\\\\client\\\\src\\\\components\\\\AdminDashboard\\\\AdminTableRow.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport axios from \"axios\";\nexport default class AdminTableRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRowClick = () => {\n      this.setState({\n        rowIsClicked: true\n      });\n    };\n\n    this.state = {\n      rowIsClicked: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.product.photos.map(photo => {\n      return axios.get(\"\".concat(SERVER_HOST, \"/products/photo/\").concat(photo.filename)).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            document.getElementById(photo._id).src = \"data:;base64,\".concat(res.data.image);\n          }\n        } else {\n          console.log(\"Record not found\");\n        }\n      });\n    });\n  }\n\n  render() {\n    const _this$props$product = this.props.product,\n          product_id = _this$props$product.product_id,\n          name = _this$props$product.name,\n          price = _this$props$product.price,\n          category = _this$props$product.category,\n          brand = _this$props$product.brand,\n          current_stock = _this$props$product.current_stock,\n          photos = _this$props$product.photos;\n    return this.state.rowIsClicked ? React.createElement(Redirect, {\n      to: \"/AdminDashboard/EditProduct/\".concat(this.props.product._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) :\n    /* let soldOrForSale = null\r\n    if(localStorage.accessLevel <= ACCESS_LEVEL_GUEST)\r\n    {\r\n    if(this.props.car.sold !== true)\r\n    {\r\n    soldOrForSale = <BuyCar carID={this.props.car._id} price={this.props.car.price} />\r\n    }\r\n    else\r\n    {\r\n    soldOrForSale = \"SOLD\"\r\n    }\r\n    }\r\n    */\n    React.createElement(\"tr\", {\n      onClick: this.handleRowClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.rowNum), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, name, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, brand), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, current_stock), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, product_id), React.createElement(\"td\", {\n      className: \"photos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, photos.map(photo => React.createElement(\"img\", {\n      key: photo._id,\n      id: photo._id,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caitl\\Desktop\\CA2_FullStack\\NODEJS-ONLY\\client\\src\\components\\AdminDashboard\\AdminTableRow.js"],"names":["React","Component","Redirect","SERVER_HOST","axios","AdminTableRow","constructor","props","handleRowClick","setState","rowIsClicked","state","componentDidMount","product","photos","map","photo","get","filename","then","res","data","errorMessage","console","log","document","getElementById","_id","src","image","render","product_id","name","price","category","brand","current_stock","rowNum"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SERVER_HOST} from \"../../config/global_constants\";\r\nimport axios from \"axios\";\r\nexport default class AdminTableRow extends Component\r\n{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rowIsClicked: false\r\n        }\r\n    }\r\ncomponentDidMount() {\r\n        this.props.product.photos.map(photo =>{\r\n            return axios.get(`${SERVER_HOST}/products/photo/${photo.filename}`)\r\n                .then(res =>{\r\n                    if (res.data){\r\n                        if (res.data.errorMessage){\r\n                            console.log(res.data.errorMessage)\r\n                        }else{\r\n                            document.getElementById(photo._id).src=`data:;base64,${res.data.image}`\r\n                        }\r\n                    }else{\r\n                        console.log(\"Record not found\")\r\n                    }\r\n                })\r\n        })\r\n}\r\n\r\n    handleRowClick = () => {\r\n        this.setState({rowIsClicked: true})\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            product_id,\r\n            name,\r\n            price,\r\n            category,\r\n            brand,\r\n            current_stock,\r\n            photos\r\n        } = this.props.product;\r\n\r\n        return (\r\n            this.state.rowIsClicked ? (<Redirect to={`/AdminDashboard/EditProduct/${this.props.product._id}`} />\r\n            ) : (\r\n                /* let soldOrForSale = null\r\n        if(localStorage.accessLevel <= ACCESS_LEVEL_GUEST)\r\n        {\r\n            if(this.props.car.sold !== true)\r\n            {\r\n                soldOrForSale = <BuyCar carID={this.props.car._id} price={this.props.car.price} />\r\n            }\r\n            else\r\n            {\r\n                soldOrForSale = \"SOLD\"\r\n            }\r\n        }\r\n               */\r\n                <tr onClick={this.handleRowClick}>\r\n                    <td>{this.props.rowNum}</td>\r\n                    <td>{name} </td>\r\n                    <td>{category}</td>\r\n                    <td>{brand}</td>\r\n                    <td>{price}</td>\r\n                    <td>{current_stock}</td>\r\n                    <td>{product_id}</td>\r\n                    <td className=\"photos\">{photos.map(photo =><img key={photo._id} id={photo._id} alt=\"\"/>)}</td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}